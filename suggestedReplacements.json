{
  "website/docs/d/appconfig_configuration_profile.html.markdown": [
    {
      "old": "  Terraform data source for managing an AWS AppConfig Configuration Profile.",
      "new": "  Terraform data source for managing an AWS AppConfig Configuration Profile."
    }
  ],
  "website/docs/d/appconfig_configuration_profiles.html.markdown": [
    {
      "old": "    Terraform data source for managing an AWS AppConfig Configuration Profiles.",
      "new": "    Terraform data source for managing an AWS AppConfig Configuration Profiles."
    }
  ],
  "website/docs/d/appconfig_environment.html.markdown": [
    {
      "old": "  Terraform data source for managing an AWS AppConfig Environment.",
      "new": "  Terraform data source for managing an AWS AppConfig Environment."
    }
  ],
  "website/docs/d/appconfig_environments.html.markdown": [
    {
      "old": "    Terraform data source for managing an AWS AppConfig Environments.",
      "new": "    Terraform data source for managing an AWS AppConfig Environments."
    }
  ],
  "website/docs/d/cloudfront_origin_access_identity.html.markdown": [
    {
      "old": "[`aws_s3_bucket`][4] bucket policy, causing spurious diffs in Terraform. If",
      "new": "[`aws_s3_bucket`][4] bucket policy, causing spurious diffs in Terraform. If"
    }
  ],
  "website/docs/d/default_tags.markdown": [
    {
      "old": "With this data source, you can apply default tags to resources not _directly_ managed by a Terraform resource, such as the instances underneath an Auto Scaling group or the volumes created for an EC2 instance.",
      "new": "With this data source, you can apply default tags to resources not _directly_ managed by a Terraform resource, such as the instances underneath an Auto Scaling group or the volumes created for an EC2 instance."
    }
  ],
  "website/docs/d/eks_cluster_auth.html.markdown": [
    {
      "old": "~> **NOTE:** Dynamically configuring a Terraform Provider via data sources currently has implications on [resource import support](https://github.com/hashicorp/terraform/issues/13018).",
      "new": "~> **NOTE:** Dynamically configuring a Terraform Provider via data sources currently has implications on [resource import support](https://github.com/hashicorp/terraform/issues/13018)."
    }
  ],
  "website/docs/d/iam_policy_document.html.markdown": [
    {
      "old": "~> **NOTE:** AWS's IAM policy document syntax allows for replacement of [policy variables](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html) within a statement using `${...}`-style notation, which conflicts with Terraform's interpolation syntax. In order to use AWS policy variables with this data source, use `&{...}` notation for interpolations that should be processed by AWS rather than by Terraform.",
      "new": "~> **NOTE:** AWS's IAM policy document syntax allows for replacement of [policy variables](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html) within a statement using `${...}`-style notation, which conflicts with Terraform's interpolation syntax. In order to use AWS policy variables with this data source, use `&{...}` notation for interpolations that should be processed by AWS rather than by Terraform."
    },
    {
      "old": "-> For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.",
      "new": "-> For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide."
    },
    {
      "old": "~> **NOTE:** Even though the [IAM Documentation](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html) states that `\"Principal\": \"*\"` and `\"Principal\": {\"AWS\": \"*\"}` are equivalent, those principal elements have different behavior in some situations, e.g., IAM Role Trust Policy. To have Terraform render JSON containing `\"Principal\": \"*\"`, use `type = \"*\"` and `identifiers = [\"*\"]`. To have Terraform render JSON containing `\"Principal\": {\"AWS\": \"*\"}`, use `type = \"AWS\"` and `identifiers = [\"*\"]`.",
      "new": "~> **NOTE:** Even though the [IAM Documentation](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html) states that `\"Principal\": \"*\"` and `\"Principal\": {\"AWS\": \"*\"}` are equivalent, those principal elements have different behavior in some situations, e.g., IAM Role Trust Policy. To have Terraform render JSON containing `\"Principal\": \"*\"`, use `type = \"*\"` and `identifiers = [\"*\"]`. To have Terraform render JSON containing `\"Principal\": {\"AWS\": \"*\"}`, use `type = \"AWS\"` and `identifiers = [\"*\"]`."
    }
  ],
  "website/docs/d/iam_session_context.markdown": [
    {
      "old": "### Find the Terraform Runner's Source Role",
      "new": "### Find the Terraform Runner's Source Role"
    },
    {
      "old": "~> If `arn` is a non-role ARN, Terraform gives no error and `issuer_arn` will be equal to the `arn` value. For STS assumed-role ARNs, Terraform gives an error if the identified IAM role does not exist.",
      "new": "~> If `arn` is a non-role ARN, Terraform gives no error and `issuer_arn` will be equal to the `arn` value. For STS assumed-role ARNs, Terraform gives an error if the identified IAM role does not exist."
    }
  ],
  "website/docs/d/instances.html.markdown": [
    {
      "old": "data source instead** if you manage referenced instances via Terraform.",
      "new": "data source instead** if you manage referenced instances via Terraform."
    }
  ],
  "website/docs/d/kms_secret.html.markdown": [
    {
      "old": "!> **WARNING:** This data source was removed in version 2.0.0 of the Terraform AWS Provider. You can migrate existing configurations to the `aws_kms_secrets` data source following instructions available in the Version 2 Upgrade Guide.",
      "new": "!> **WARNING:** This data source was removed in version 2.0.0 of the Terraform AWS Provider. You can migrate existing configurations to the `aws_kms_secrets` data source following instructions available in the Version 2 Upgrade Guide."
    }
  ],
  "website/docs/d/kms_secrets.html.markdown": [
    {
      "old": "~> **NOTE:** Using this data provider will allow you to conceal secret data within your resource definitions but does not take care of protecting that data in all Terraform logging and state output. Please take care to secure your secret data beyond just the Terraform configuration.",
      "new": "~> **NOTE:** Using this data provider will allow you to conceal secret data within your resource definitions but does not take care of protecting that data in all Terraform logging and state output. Please take care to secure your secret data beyond just the Terraform configuration."
    },
    {
      "old": "That encrypted output can now be inserted into Terraform configurations without exposing the plaintext secret directly.",
      "new": "That encrypted output can now be inserted into Terraform configurations without exposing the plaintext secret directly."
    }
  ],
  "website/docs/d/networkmanager_core_network_policy_document.html.markdown": [
    {
      "old": "-> For more information about building AWS Core Network policy documents with Terraform, see the Using AWS & AWSCC Provider Together Guide",
      "new": "-> For more information about building AWS Core Network policy documents with Terraform, see the Using AWS & AWSCC Provider Together Guide"
    }
  ],
  "website/docs/d/partition.html.markdown": [
    {
      "old": "which Terraform is working.",
      "new": "which Terraform is working."
    }
  ],
  "website/docs/d/s3_account_public_access_block.html.markdown": [
    {
      "old": "* `account_id` - (Optional) AWS account ID to configure. Defaults to automatically determined account ID of the Terraform AWS provider.",
      "new": "* `account_id` - (Optional) AWS account ID to configure. Defaults to automatically determined account ID of the Terraform AWS provider."
    }
  ],
  "website/docs/d/s3_bucket_objects.html.markdown": [
    {
      "old": "~> **NOTE on `max_keys`:** Retrieving very large numbers of keys can adversely affect Terraform's performance.",
      "new": "~> **NOTE on `max_keys`:** Retrieving very large numbers of keys can adversely affect Terraform's performance."
    },
    {
      "old": "The following example retrieves a list of all object keys in an S3 bucket and creates corresponding Terraform object data sources:",
      "new": "The following example retrieves a list of all object keys in an S3 bucket and creates corresponding Terraform object data sources:"
    }
  ],
  "website/docs/d/s3_object.html.markdown": [
    {
      "old": "-> **Note:** Terraform ignores all leading `/`s in the object's `key` and treats multiple `/`s in the rest of the object's `key` as a single `/`, so values of `/index.html` and `index.html` correspond to the same S3 object as do `first//second///third//` and `first/second/third/`.",
      "new": "-> **Note:** Terraform ignores all leading `/`s in the object's `key` and treats multiple `/`s in the rest of the object's `key` as a single `/`, so values of `/index.html` and `index.html` correspond to the same S3 object as do `first//second///third//` and `first/second/third/`."
    }
  ],
  "website/docs/d/s3_objects.html.markdown": [
    {
      "old": "~> **NOTE on `max_keys`:** Retrieving very large numbers of keys can adversely affect Terraform's performance.",
      "new": "~> **NOTE on `max_keys`:** Retrieving very large numbers of keys can adversely affect Terraform's performance."
    },
    {
      "old": "The following example retrieves a list of all object keys in an S3 bucket and creates corresponding Terraform object data sources:",
      "new": "The following example retrieves a list of all object keys in an S3 bucket and creates corresponding Terraform object data sources:"
    }
  ],
  "website/docs/d/secretsmanager_secret_version.html.markdown": [
    {
      "old": "Reading key-value pairs from JSON back into a native Terraform map can be accomplished in Terraform 0.12 and later with the `jsondecode()` function:",
      "new": "Reading key-value pairs from JSON back into a native Terraform map can be accomplished in Terraform 0.12 and later with the `jsondecode()` function:"
    }
  ],
  "website/docs/d/ssm_parameter.html.markdown": [
    {
      "old": "* `value` - Value of the parameter. This value is always marked as sensitive in the Terraform plan output, regardless of `type`. In Terraform CLI version 0.15 and later, this may require additional configuration handling for certain scenarios. For more information, see the Terraform v0.15 Upgrade Guide.",
      "new": "* `value` - Value of the parameter. This value is always marked as sensitive in the Terraform plan output, regardless of `type`. In Terraform CLI version 0.15 and later, this may require additional configuration handling for certain scenarios. For more information, see the Terraform v0.15 Upgrade Guide."
    }
  ],
  "website/docs/d/vpc_ipam_preview_next_cidr.html.markdown": [
    {
      "old": "~> **NOTE:** This functionality is also encapsulated in a resource sharing the same name. The data source can be used when you need to use the cidr in a calculation of the same Root module, `count` for example. However, once a cidr range has been allocated that was previewed, the next refresh will find a **new** cidr and may force new resources downstream. Make sure to use Terraform's lifecycle `ignore_changes` policy if this is undesirable.",
      "new": "~> **NOTE:** This functionality is also encapsulated in a resource sharing the same name. The data source can be used when you need to use the cidr in a calculation of the same Root module, `count` for example. However, once a cidr range has been allocated that was previewed, the next refresh will find a **new** cidr and may force new resources downstream. Make sure to use Terraform's lifecycle `ignore_changes` policy if this is undesirable."
    }
  ],
  "website/docs/r/accessanalyzer_archive_rule.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS AccessAnalyzer Archive Rule.",
      "new": "  Terraform resource for managing an AWS AccessAnalyzer Archive Rule."
    },
    {
      "old": "Terraform resource for managing an AWS AccessAnalyzer Archive Rule.",
      "new": "Terraform resource for managing an AWS AccessAnalyzer Archive Rule."
    }
  ],
  "website/docs/r/acm_certificate.html.markdown": [
    {
      "old": "Domain validation through email is also supported but should be avoided as it requires a manual step outside of Terraform.",
      "new": "Domain validation through email is also supported but should be avoided as it requires a manual step outside of Terraform."
    },
    {
      "old": "    * `validation_method` - (Required) Which method to use for validation. `DNS` or `EMAIL` are valid, `NONE` can be used for certificates that were imported into ACM and then into Terraform.",
      "new": "    * `validation_method` - (Required) Which method to use for validation. `DNS` or `EMAIL` are valid, `NONE` can be used for certificates that were imported into ACM and then into Terraform."
    }
  ],
  "website/docs/r/amplify_app.html.markdown": [
    {
      "old": "~> **Note:** When you create/update an Amplify App from Terraform, you may end up with the error \"BadRequestException: You should at least provide one valid token\" because of authentication issues. See the section \"Repository with Tokens\" below.",
      "new": "~> **Note:** When you create/update an Amplify App from Terraform, you may end up with the error \"BadRequestException: You should at least provide one valid token\" because of authentication issues. See the section \"Repository with Tokens\" below."
    }
  ],
  "website/docs/r/api_gateway_deployment.html.markdown": [
    {
      "old": "To properly capture all REST API configuration in a deployment, this resource must have dependencies on all prior Terraform resources that manage resources/paths, methods, integrations, etc.",
      "new": "To properly capture all REST API configuration in a deployment, this resource must have dependencies on all prior Terraform resources that manage resources/paths, methods, integrations, etc."
    },
    {
      "old": "* For REST APIs that are configured via OpenAPI specification (`aws_api_gateway_rest_api` resource `body` argument), no special dependency setup is needed beyond referencing the  `id` attribute of that resource unless additional Terraform resources have further customized the REST API.",
      "new": "* For REST APIs that are configured via OpenAPI specification (`aws_api_gateway_rest_api` resource `body` argument), no special dependency setup is needed beyond referencing the  `id` attribute of that resource unless additional Terraform resources have further customized the REST API."
    },
    {
      "old": "* When the REST API configuration involves other Terraform resources (`aws_api_gateway_integration` resource, etc.), the dependency setup can be done with implicit resource references in the `triggers` argument or explicit resource references using the resource `depends_on` meta-argument. The `triggers` argument should be preferred over `depends_on`, since `depends_on` can only capture dependency ordering and will not cause the resource to recreate (redeploy the REST API) with upstream configuration changes.",
      "new": "* When the REST API configuration involves other Terraform resources (`aws_api_gateway_integration` resource, etc.), the dependency setup can be done with implicit resource references in the `triggers` argument or explicit resource references using the resource `depends_on` meta-argument. The `triggers` argument should be preferred over `depends_on`, since `depends_on` can only capture dependency ordering and will not cause the resource to recreate (redeploy the REST API) with upstream configuration changes."
    },
    {
      "old": "!> **WARNING:** We recommend using the `aws_api_gateway_stage` resource instead of managing an API Gateway Stage via the `stage_name` argument of this resource. When this resource is recreated (REST API redeployment) with the `stage_name` configured, the stage is deleted and recreated. This will cause a temporary service interruption, increase Terraform plan differences, and can require a second Terraform apply to recreate any downstream stage configuration such as associated `aws_api_method_settings` resources.",
      "new": "!> **WARNING:** We recommend using the `aws_api_gateway_stage` resource instead of managing an API Gateway Stage via the `stage_name` argument of this resource. When this resource is recreated (REST API redeployment) with the `stage_name` configured, the stage is deleted and recreated. This will cause a temporary service interruption, increase Terraform plan differences, and can require a second Terraform apply to recreate any downstream stage configuration such as associated `aws_api_method_settings` resources."
    },
    {
      "old": "~> **NOTE:** Enable the resource `lifecycle` configuration block `create_before_destroy` argument in this resource configuration to properly order redeployments in Terraform. Without enabling `create_before_destroy`, API Gateway can return errors such as `BadRequestException: Active stages pointing to this deployment must be moved or deleted` on recreation.",
      "new": "~> **NOTE:** Enable the resource `lifecycle` configuration block `create_before_destroy` argument in this resource configuration to properly order redeployments in Terraform. Without enabling `create_before_destroy`, API Gateway can return errors such as `BadRequestException: Active stages pointing to this deployment must be moved or deleted` on recreation."
    },
    {
      "old": "### Terraform Resources",
      "new": "### Terraform Resources"
    },
    {
      "old": "    #       Terraform configuration file(s) or removing the .id references to",
      "new": "    #       Terraform configuration file(s) or removing the .id references to"
    }
  ],
  "website/docs/r/api_gateway_rest_api.html.markdown": [
    {
      "old": "Manages an API Gateway REST API. The REST API can be configured via [importing an OpenAPI specification](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api.html) in the `body` argument (with other arguments serving as overrides) or via other Terraform resources to manage the resources (`aws_api_gateway_resource` resource), methods (`aws_api_gateway_method` resource), integrations (`aws_api_gateway_integration` resource), etc. of the REST API. Once the REST API is configured, the `aws_api_gateway_deployment` resource can be used along with the `aws_api_gateway_stage` resource to publish the REST API.",
      "new": "Manages an API Gateway REST API. The REST API can be configured via [importing an OpenAPI specification](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-import-api.html) in the `body` argument (with other arguments serving as overrides) or via other Terraform resources to manage the resources (`aws_api_gateway_resource` resource), methods (`aws_api_gateway_method` resource), integrations (`aws_api_gateway_integration` resource), etc. of the REST API. Once the REST API is configured, the `aws_api_gateway_deployment` resource can be used along with the `aws_api_gateway_stage` resource to publish the REST API."
    },
    {
      "old": "### Terraform Resources",
      "new": "### Terraform Resources"
    },
    {
      "old": "    #       Terraform configuration file(s) or removing the .id references to",
      "new": "    #       Terraform configuration file(s) or removing the .id references to"
    },
    {
      "old": "* `policy` - (Optional) JSON formatted policy document that controls access to the API Gateway. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide. Terraform will only perform drift detection of its value when present in a configuration. We recommend using the `aws_api_gateway_rest_api_policy` resource instead. If importing an OpenAPI specification via the `body` argument, this corresponds to the [`x-amazon-apigateway-policy` extension](https://docs.aws.amazon.com/apigateway/latest/developerguide/openapi-extensions-policy.html). If the argument value is provided and is different than the OpenAPI value, the argument value will override the OpenAPI value.",
      "new": "* `policy` - (Optional) JSON formatted policy document that controls access to the API Gateway. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide. Terraform will only perform drift detection of its value when present in a configuration. We recommend using the `aws_api_gateway_rest_api_policy` resource instead. If importing an OpenAPI specification via the `body` argument, this corresponds to the [`x-amazon-apigateway-policy` extension](https://docs.aws.amazon.com/apigateway/latest/developerguide/openapi-extensions-policy.html). If the argument value is provided and is different than the OpenAPI value, the argument value will override the OpenAPI value."
    }
  ],
  "website/docs/r/apigatewayv2_deployment.html.markdown": [
    {
      "old": "-> Enable the resource `lifecycle` configuration block `create_before_destroy` argument in this resource configuration to properly order redeployments in Terraform.",
      "new": "-> Enable the resource `lifecycle` configuration block `create_before_destroy` argument in this resource configuration to properly order redeployments in Terraform."
    },
    {
      "old": "-> **NOTE:** This is an optional and Terraform 0.12 (or later) advanced configuration that shows calculating a hash of the API's Terraform resources to determine changes that should trigger a new deployment. This value will change after the first Terraform apply of new resources, triggering an immediate redeployment, however it will stabilize afterwards except for resource changes. The `triggers` map can also be configured in other, more complex ways to fit the environment, avoiding the immediate redeployment issue.",
      "new": "-> **NOTE:** This is an optional and Terraform 0.12 (or later) advanced configuration that shows calculating a hash of the API's Terraform resources to determine changes that should trigger a new deployment. This value will change after the first Terraform apply of new resources, triggering an immediate redeployment, however it will stabilize afterwards except for resource changes. The `triggers` map can also be configured in other, more complex ways to fit the environment, avoiding the immediate redeployment issue."
    }
  ],
  "website/docs/r/apigatewayv2_stage.html.markdown": [
    {
      "old": "Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. Terraform will only perform drift detection of its value when present in a configuration.",
      "new": "Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. Terraform will only perform drift detection of its value when present in a configuration."
    },
    {
      "old": "Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. Terraform will only perform drift detection of its value when present in a configuration.",
      "new": "Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. Terraform will only perform drift detection of its value when present in a configuration."
    }
  ],
  "website/docs/r/athena_database.html.markdown": [
    {
      "old": "Certain resource arguments, like `encryption_configuration` and `bucket`, do not have an API method for reading the information after creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,",
      "new": "Certain resource arguments, like `encryption_configuration` and `bucket`, do not have an API method for reading the information after creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,"
    }
  ],
  "website/docs/r/autoscaling_group.html.markdown": [
    {
      "old": "~> **NOTE on Auto Scaling Groups and ASG Attachments:** Terraform currently provides",
      "new": "~> **NOTE on Auto Scaling Groups and ASG Attachments:** Terraform currently provides"
    },
    {
      "old": "* `name` - (Optional) Name of the Auto Scaling Group. By default generated by Terraform. Conflicts with `name_prefix`.",
      "new": "* `name` - (Optional) Name of the Auto Scaling Group. By default generated by Terraform. Conflicts with `name_prefix`."
    },
    {
      "old": "   even if it's in the process of scaling a resource. Normally, Terraform",
      "new": "   even if it's in the process of scaling a resource. Normally, Terraform"
    },
    {
      "old": "  [duration](https://golang.org/pkg/time/#ParseDuration) that Terraform should",
      "new": "  [duration](https://golang.org/pkg/time/#ParseDuration) that Terraform should"
    },
    {
      "old": "  Terraform to skip all Capacity Waiting behavior.",
      "new": "  Terraform to skip all Capacity Waiting behavior."
    },
    {
      "old": "* `min_elb_capacity` - (Optional) Setting this causes Terraform to wait for",
      "new": "* `min_elb_capacity` - (Optional) Setting this causes Terraform to wait for"
    },
    {
      "old": "* `wait_for_elb_capacity` - (Optional) Setting this will cause Terraform to wait",
      "new": "* `wait_for_elb_capacity` - (Optional) Setting this will cause Terraform to wait"
    },
    {
      "old": "~> **NOTE:** Other AWS APIs may automatically add special tags to their associated Auto Scaling Group for management purposes, such as ECS Capacity Providers adding the `AmazonECSManaged` tag. These generally should be included in the configuration so Terraform does not attempt to remove them and so if the `min_size` was greater than zero on creation, that these tag(s) are applied to any initial EC2 Instances in the Auto Scaling Group. If these tag(s) were missing in the Auto Scaling Group configuration on creation, affected EC2 Instances missing the tags may require manual intervention of adding the tags to ensure they work properly with the other AWS service.",
      "new": "~> **NOTE:** Other AWS APIs may automatically add special tags to their associated Auto Scaling Group for management purposes, such as ECS Capacity Providers adding the `AmazonECSManaged` tag. These generally should be included in the configuration so Terraform does not attempt to remove them and so if the `min_size` was greater than zero on creation, that these tag(s) are applied to any initial EC2 Instances in the Auto Scaling Group. If these tag(s) were missing in the Auto Scaling Group configuration on creation, affected EC2 Instances missing the tags may require manual intervention of adding the tags to ensure they work properly with the other AWS service."
    },
    {
      "old": "~> **NOTE:** Terraform has two types of ways you can add lifecycle hooks - via",
      "new": "~> **NOTE:** Terraform has two types of ways you can add lifecycle hooks - via"
    },
    {
      "old": "Terraform provides two mechanisms to help consistently manage ASG scale up",
      "new": "Terraform provides two mechanisms to help consistently manage ASG scale up"
    },
    {
      "old": "The first is default behavior. Terraform waits after ASG creation for",
      "new": "The first is default behavior. Terraform waits after ASG creation for"
    },
    {
      "old": "Terraform will also wait for the correct number of healthy instances before",
      "new": "Terraform will also wait for the correct number of healthy instances before"
    },
    {
      "old": "Terraform considers an instance \"healthy\" when the ASG reports `HealthStatus:",
      "new": "Terraform considers an instance \"healthy\" when the ASG reports `HealthStatus:"
    },
    {
      "old": "Terraform will wait for healthy instances for up to",
      "new": "Terraform will wait for healthy instances for up to"
    },
    {
      "old": "The `min_elb_capacity` parameter causes Terraform to wait for at least the",
      "new": "The `min_elb_capacity` parameter causes Terraform to wait for at least the"
    },
    {
      "old": "If `wait_for_elb_capacity` is set, Terraform will wait for exactly that number",
      "new": "If `wait_for_elb_capacity` is set, Terraform will wait for exactly that number"
    },
    {
      "old": "Terraform moves on. If new instances don't pass the ELB's health checks for any",
      "new": "Terraform moves on. If new instances don't pass the ELB's health checks for any"
    },
    {
      "old": "reason, the Terraform apply will time out, and the ASG will be marked as",
      "new": "reason, the Terraform apply will time out, and the ASG will be marked as"
    },
    {
      "old": "As with ASG Capacity, Terraform will wait for up to `wait_for_capacity_timeout`",
      "new": "As with ASG Capacity, Terraform will wait for up to `wait_for_capacity_timeout`"
    }
  ],
  "website/docs/r/autoscaling_group_tag.html.markdown": [
    {
      "old": "Manages an individual Autoscaling Group (ASG) tag. This resource should only be used in cases where ASGs are created outside Terraform (e.g., ASGs implicitly created by EKS Node Groups).",
      "new": "Manages an individual Autoscaling Group (ASG) tag. This resource should only be used in cases where ASGs are created outside Terraform (e.g., ASGs implicitly created by EKS Node Groups)."
    },
    {
      "old": "~> **NOTE:** This tagging resource should not be combined with the Terraform resource for managing the parent resource. For example, using `aws_autoscaling_group` and `aws_autoscaling_group_tag` to manage tags of the same ASG will cause a perpetual difference where the `aws_autoscaling_group` resource will try to remove the tag being added by the `aws_autoscaling_group_tag` resource.",
      "new": "~> **NOTE:** This tagging resource should not be combined with the Terraform resource for managing the parent resource. For example, using `aws_autoscaling_group` and `aws_autoscaling_group_tag` to manage tags of the same ASG will cause a perpetual difference where the `aws_autoscaling_group` resource will try to remove the tag being added by the `aws_autoscaling_group_tag` resource."
    }
  ],
  "website/docs/r/autoscaling_lifecycle_hook.html.markdown": [
    {
      "old": "~> **NOTE:** Terraform has two types of ways you can add lifecycle hooks - via",
      "new": "~> **NOTE:** Terraform has two types of ways you can add lifecycle hooks - via"
    }
  ],
  "website/docs/r/batch_compute_environment.html.markdown": [
    {
      "old": "* `compute_environment_name` - (Optional, Forces new resource) The name for your compute environment. Up to 128 letters (uppercase and lowercase), numbers, and underscores are allowed. If omitted, Terraform will assign a random, unique name.",
      "new": "* `compute_environment_name` - (Optional, Forces new resource) The name for your compute environment. Up to 128 letters (uppercase and lowercase), numbers, and underscores are allowed. If omitted, Terraform will assign a random, unique name."
    }
  ],
  "website/docs/r/cloudcontrolapi_resource.html.markdown": [
    {
      "old": "* `desired_state` - (Required) JSON string matching the CloudFormation resource type schema with desired configuration. Terraform configuration expressions can be converted into JSON using the `jsonencode()` function.",
      "new": "* `desired_state` - (Required) JSON string matching the CloudFormation resource type schema with desired configuration. Terraform configuration expressions can be converted into JSON using the `jsonencode()` function."
    }
  ],
  "website/docs/r/cloudformation_stack_set_instance.html.markdown": [
    {
      "old": "~> **NOTE:** To retain the Stack during Terraform resource destroy, ensure `retain_stack = true` has been successfully applied into the Terraform state first. This must be completed _before_ an apply that would destroy the resource.",
      "new": "~> **NOTE:** To retain the Stack during Terraform resource destroy, ensure `retain_stack = true` has been successfully applied into the Terraform state first. This must be completed _before_ an apply that would destroy the resource."
    },
    {
      "old": "* `retain_stack` - (Optional) During Terraform resource destroy, remove Instance from StackSet while keeping the Stack and its associated resources. Must be enabled in Terraform state _before_ destroy operation to take effect. You cannot reassociate a retained Stack or add an existing, saved Stack to a new StackSet. Defaults to `false`.",
      "new": "* `retain_stack` - (Optional) During Terraform resource destroy, remove Instance from StackSet while keeping the Stack and its associated resources. Must be enabled in Terraform state _before_ destroy operation to take effect. You cannot reassociate a retained Stack or add an existing, saved Stack to a new StackSet. Defaults to `false`."
    }
  ],
  "website/docs/r/cloudformation_type.html.markdown": [
    {
      "old": "~> **NOTE:** The destroy operation of this resource marks the version as deprecated. If this was the only `LIVE` version, the type is marked as deprecated. Enable the resource `lifecycle` configuration block `create_before_destroy` argument in this resource configuration to properly order redeployments in Terraform.",
      "new": "~> **NOTE:** The destroy operation of this resource marks the version as deprecated. If this was the only `LIVE` version, the type is marked as deprecated. Enable the resource `lifecycle` configuration block `create_before_destroy` argument in this resource configuration to properly order redeployments in Terraform."
    }
  ],
  "website/docs/r/cloudfront_origin_access_control.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS CloudFront Origin Access Control.",
      "new": "  Terraform resource for managing an AWS CloudFront Origin Access Control."
    }
  ],
  "website/docs/r/cloudsearch_domain.html.markdown": [
    {
      "old": "Terraform waits for the domain to become `Active` when applying a configuration.",
      "new": "Terraform waits for the domain to become `Active` when applying a configuration."
    }
  ],
  "website/docs/r/cloudsearch_domain_service_access_policy.html.markdown": [
    {
      "old": "Terraform waits for the domain service access policy to become `Active` when applying a configuration.",
      "new": "Terraform waits for the domain service access policy to become `Active` when applying a configuration."
    }
  ],
  "website/docs/r/cloudwatch_event_bus_policy.html.markdown": [
    {
      "old": "* `policy` - (Required) The text of the policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.",
      "new": "* `policy` - (Required) The text of the policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide."
    }
  ],
  "website/docs/r/cloudwatch_event_target.html.markdown": [
    {
      "old": "* `input_template` - (Required) Template to customize data sent to the target. Must be valid JSON. To send a string value, the string value must include double quotes. Values must be escaped for both JSON and Terraform, e.g., `\"\\\"Your string goes here.\\\\nA new line.\\\"\"`",
      "new": "* `input_template` - (Required) Template to customize data sent to the target. Must be valid JSON. To send a string value, the string value must include double quotes. Values must be escaped for both JSON and Terraform, e.g., `\"\\\"Your string goes here.\\\\nA new line.\\\"\"`"
    }
  ],
  "website/docs/r/cloudwatch_metric_stream.html.markdown": [
    {
      "old": "* `name` - (Optional, Forces new resource) Friendly name of the metric stream. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`.",
      "new": "* `name` - (Optional, Forces new resource) Friendly name of the metric stream. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`."
    }
  ],
  "website/docs/r/codebuild_project.html.markdown": [
    {
      "old": "* `id` - Name (if imported via `name`) or ARN (if created via Terraform or imported via ARN) of the CodeBuild project.",
      "new": "* `id` - Name (if imported via `name`) or ARN (if created via Terraform or imported via ARN) of the CodeBuild project."
    }
  ],
  "website/docs/r/codebuild_webhook.html.markdown": [
    {
      "old": "When working with [Bitbucket](https://bitbucket.org) and [GitHub](https://github.com) source CodeBuild webhooks, the CodeBuild service will automatically create (on `aws_codebuild_webhook` resource creation) and delete (on `aws_codebuild_webhook` resource deletion) the Bitbucket/GitHub repository webhook using its granted OAuth permissions. This behavior cannot be controlled by Terraform.",
      "new": "When working with [Bitbucket](https://bitbucket.org) and [GitHub](https://github.com) source CodeBuild webhooks, the CodeBuild service will automatically create (on `aws_codebuild_webhook` resource creation) and delete (on `aws_codebuild_webhook` resource deletion) the Bitbucket/GitHub repository webhook using its granted OAuth permissions. This behavior cannot be controlled by Terraform."
    },
    {
      "old": "~> **Note:** The AWS account that Terraform uses to create this resource *must* have authorized CodeBuild to access Bitbucket/GitHub's OAuth API in each applicable region. This is a manual step that must be done *before* creating webhooks with this resource. If OAuth is not configured, AWS will return an error similar to `ResourceNotFoundException: Could not find access token for server type github`. More information can be found in the CodeBuild User Guide for [Bitbucket](https://docs.aws.amazon.com/codebuild/latest/userguide/sample-bitbucket-pull-request.html) and [GitHub](https://docs.aws.amazon.com/codebuild/latest/userguide/sample-github-pull-request.html).",
      "new": "~> **Note:** The AWS account that Terraform uses to create this resource *must* have authorized CodeBuild to access Bitbucket/GitHub's OAuth API in each applicable region. This is a manual step that must be done *before* creating webhooks with this resource. If OAuth is not configured, AWS will return an error similar to `ResourceNotFoundException: Could not find access token for server type github`. More information can be found in the CodeBuild User Guide for [Bitbucket](https://docs.aws.amazon.com/codebuild/latest/userguide/sample-bitbucket-pull-request.html) and [GitHub](https://docs.aws.amazon.com/codebuild/latest/userguide/sample-github-pull-request.html)."
    }
  ],
  "website/docs/r/codecommit_trigger.html.markdown": [
    {
      "old": "~> **NOTE:** Terraform currently can create only one trigger per repository, even if multiple aws_codecommit_trigger resources are defined. Moreover, creating triggers with Terraform will delete all other triggers in the repository (also manually-created triggers).",
      "new": "~> **NOTE:** Terraform currently can create only one trigger per repository, even if multiple aws_codecommit_trigger resources are defined. Moreover, creating triggers with Terraform will delete all other triggers in the repository (also manually-created triggers)."
    }
  ],
  "website/docs/r/cognito_user_pool.markdown": [
    {
      "old": "~> **NOTE:** When defining an `attribute_data_type` of `String` or `Number`, the respective attribute constraints configuration block (e.g `string_attribute_constraints` or `number_attribute_constraints`) is **required** to prevent recreation of the Terraform resource. This requirement is true for both standard (e.g., name, email) and custom schema attributes.",
      "new": "~> **NOTE:** When defining an `attribute_data_type` of `String` or `Number`, the respective attribute constraints configuration block (e.g `string_attribute_constraints` or `number_attribute_constraints`) is **required** to prevent recreation of the Terraform resource. This requirement is true for both standard (e.g., name, email) and custom schema attributes."
    },
    {
      "old": "The [standard attributes](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#cognito-user-pools-standard-attributes) have the following defaults. Note that attributes which match the default values are not stored in Terraform state when importing.",
      "new": "The [standard attributes](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-settings-attributes.html#cognito-user-pools-standard-attributes) have the following defaults. Note that attributes which match the default values are not stored in Terraform state when importing."
    }
  ],
  "website/docs/r/comprehend_document_classifier.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Comprehend Document Classifier.",
      "new": "  Terraform resource for managing an AWS Comprehend Document Classifier."
    },
    {
      "old": "Terraform resource for managing an AWS Comprehend Document Classifier.",
      "new": "Terraform resource for managing an AWS Comprehend Document Classifier."
    },
    {
      "old": "  If omitted, Terraform will assign a random, unique version name.",
      "new": "  If omitted, Terraform will assign a random, unique version name."
    }
  ],
  "website/docs/r/comprehend_entity_recognizer.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Comprehend Entity Recognizer.",
      "new": "  Terraform resource for managing an AWS Comprehend Entity Recognizer."
    },
    {
      "old": "Terraform resource for managing an AWS Comprehend Entity Recognizer.",
      "new": "Terraform resource for managing an AWS Comprehend Entity Recognizer."
    },
    {
      "old": "  If omitted, Terraform will assign a random, unique version name.",
      "new": "  If omitted, Terraform will assign a random, unique version name."
    }
  ],
  "website/docs/r/connect_contact_flow.html.markdown": [
    {
      "old": "    \"Application\" = \"Terraform\",",
      "new": "    \"Application\" = \"Terraform\","
    },
    {
      "old": "    \"Application\" = \"Terraform\",",
      "new": "    \"Application\" = \"Terraform\","
    },
    {
      "old": "* `content_hash` - (Optional) Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the Contact Flow source specified with `filename`. The usual way to set this is filebase64sha256(\"mycontact_flow.json\") (Terraform 0.11.12 and later) or base64sha256(file(\"mycontact_flow.json\")) (Terraform 0.11.11 and earlier), where \"mycontact_flow.json\" is the local filename of the Contact Flow source.",
      "new": "* `content_hash` - (Optional) Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the Contact Flow source specified with `filename`. The usual way to set this is filebase64sha256(\"mycontact_flow.json\") (Terraform 0.11.12 and later) or base64sha256(file(\"mycontact_flow.json\")) (Terraform 0.11.11 and earlier), where \"mycontact_flow.json\" is the local filename of the Contact Flow source."
    }
  ],
  "website/docs/r/connect_contact_flow_module.html.markdown": [
    {
      "old": "    \"Application\" = \"Terraform\",",
      "new": "    \"Application\" = \"Terraform\","
    },
    {
      "old": "    \"Application\" = \"Terraform\",",
      "new": "    \"Application\" = \"Terraform\","
    },
    {
      "old": "* `content_hash` - (Optional) Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the Contact Flow Module source specified with `filename`. The usual way to set this is filebase64sha256(\"contact_flow_module.json\") (Terraform 0.11.12 and later) or base64sha256(file(\"contact_flow_module.json\")) (Terraform 0.11.11 and earlier), where \"contact_flow_module.json\" is the local filename of the Contact Flow Module source.",
      "new": "* `content_hash` - (Optional) Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the Contact Flow Module source specified with `filename`. The usual way to set this is filebase64sha256(\"contact_flow_module.json\") (Terraform 0.11.12 and later) or base64sha256(file(\"contact_flow_module.json\")) (Terraform 0.11.11 and earlier), where \"contact_flow_module.json\" is the local filename of the Contact Flow Module source."
    }
  ],
  "website/docs/r/datasync_agent.html.markdown": [
    {
      "old": "~> **NOTE:** One of `activation_key` or `ip_address` must be provided for resource creation (agent activation). Neither is required for resource import. If using `ip_address`, Terraform must be able to make an HTTP (port 80) GET request to the specified IP address from where it is running. The agent will turn off that HTTP server after activation.",
      "new": "~> **NOTE:** One of `activation_key` or `ip_address` must be provided for resource creation (agent activation). Neither is required for resource import. If using `ip_address`, Terraform must be able to make an HTTP (port 80) GET request to the specified IP address from where it is running. The agent will turn off that HTTP server after activation."
    },
    {
      "old": "* `activation_key` - (Optional) DataSync Agent activation key during resource creation. Conflicts with `ip_address`. If an `ip_address` is provided instead, Terraform will retrieve the `activation_key` as part of the resource creation.",
      "new": "* `activation_key` - (Optional) DataSync Agent activation key during resource creation. Conflicts with `ip_address`. If an `ip_address` is provided instead, Terraform will retrieve the `activation_key` as part of the resource creation."
    },
    {
      "old": "* `ip_address` - (Optional) DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with `activation_key`. DataSync Agent must be accessible on port 80 from where Terraform is running.",
      "new": "* `ip_address` - (Optional) DataSync Agent IP address to retrieve activation key during resource creation. Conflicts with `activation_key`. DataSync Agent must be accessible on port 80 from where Terraform is running."
    }
  ],
  "website/docs/r/db_instance.html.markdown": [
    {
      "old": "of this, Terraform may report a difference in its planning phase because a",
      "new": "of this, Terraform may report a difference in its planning phase because a"
    },
    {
      "old": "To enable Storage Autoscaling with instances that support the feature, define the `max_allocated_storage` argument higher than the `allocated_storage` argument. Terraform will automatically hide differences with the `allocated_storage` argument value if autoscaling occurs.",
      "new": "To enable Storage Autoscaling with instances that support the feature, define the `max_allocated_storage` argument higher than the `allocated_storage` argument. Terraform will automatically hide differences with the `allocated_storage` argument value if autoscaling occurs."
    },
    {
      "old": "if omitted, Terraform will assign a random, unique identifier. Required if `restore_to_point_in_time` is specified.",
      "new": "if omitted, Terraform will assign a random, unique identifier. Required if `restore_to_point_in_time` is specified."
    },
    {
      "old": "Replicate database managed by Terraform will promote the database to a fully",
      "new": "Replicate database managed by Terraform will promote the database to a fully"
    }
  ],
  "website/docs/r/db_option_group.html.markdown": [
    {
      "old": "  option_group_description = \"Terraform Option Group\"",
      "new": "  option_group_description = \"Terraform Option Group\""
    },
    {
      "old": "* `name` - (Optional, Forces new resource) The name of the option group. If omitted, Terraform will assign a random, unique name. Must be lowercase, to match as it is stored in AWS.",
      "new": "* `name` - (Optional, Forces new resource) The name of the option group. If omitted, Terraform will assign a random, unique name. Must be lowercase, to match as it is stored in AWS."
    },
    {
      "old": "* `option_group_description` - (Optional) The description of the option group. Defaults to \"Managed by Terraform\".",
      "new": "* `option_group_description` - (Optional) The description of the option group. Defaults to \"Managed by Terraform\"."
    }
  ],
  "website/docs/r/db_parameter_group.html.markdown": [
    {
      "old": "~> **NOTE:** After applying your changes, you may encounter a perpetual diff in your Terraform plan",
      "new": "~> **NOTE:** After applying your changes, you may encounter a perpetual diff in your Terraform plan"
    },
    {
      "old": "* `name` - (Optional, Forces new resource) The name of the DB parameter group. If omitted, Terraform will assign a random, unique name.",
      "new": "* `name` - (Optional, Forces new resource) The name of the DB parameter group. If omitted, Terraform will assign a random, unique name."
    },
    {
      "old": "* `description` - (Optional, Forces new resource) The description of the DB parameter group. Defaults to \"Managed by Terraform\".",
      "new": "* `description` - (Optional, Forces new resource) The description of the DB parameter group. Defaults to \"Managed by Terraform\"."
    }
  ],
  "website/docs/r/db_security_group.html.markdown": [
    {
      "old": "!> **WARNING:** With the retirement of EC2-Classic the `aws_db_security_group` resource has been deprecated and will be removed in a future version. Any existing resources can be removed from Terraform state using the `terraform state rm` command.",
      "new": "!> **WARNING:** With the retirement of EC2-Classic the `aws_db_security_group` resource has been deprecated and will be removed in a future version. Any existing resources can be removed from Terraform state using the `terraform state rm` command."
    },
    {
      "old": "* `description` - (Optional) The description of the DB security group. Defaults to \"Managed by Terraform\".",
      "new": "* `description` - (Optional) The description of the DB security group. Defaults to \"Managed by Terraform\"."
    }
  ],
  "website/docs/r/db_subnet_group.html.markdown": [
    {
      "old": "* `name` - (Optional, Forces new resource) The name of the DB subnet group. If omitted, Terraform will assign a random, unique name.",
      "new": "* `name` - (Optional, Forces new resource) The name of the DB subnet group. If omitted, Terraform will assign a random, unique name."
    },
    {
      "old": "* `description` - (Optional) The description of the DB subnet group. Defaults to \"Managed by Terraform\".",
      "new": "* `description` - (Optional) The description of the DB subnet group. Defaults to \"Managed by Terraform\"."
    }
  ],
  "website/docs/r/default_network_acl.html.markdown": [
    {
      "old": "~> **NOTE:** This is an advanced resource with special caveats. Please read this document in its entirety before using this resource. The `aws_default_network_acl` behaves differently from normal resources. Terraform does not _create_ this resource but instead attempts to \"adopt\" it into management.",
      "new": "~> **NOTE:** This is an advanced resource with special caveats. Please read this document in its entirety before using this resource. The `aws_default_network_acl` behaves differently from normal resources. Terraform does not _create_ this resource but instead attempts to \"adopt\" it into management."
    },
    {
      "old": "Every VPC has a default network ACL that can be managed but not destroyed. When Terraform first adopts the Default Network ACL, it **immediately removes all rules in the ACL**. It then proceeds to create any rules specified in the configuration. This step is required so that only the rules specified in the configuration are created.",
      "new": "Every VPC has a default network ACL that can be managed but not destroyed. When Terraform first adopts the Default Network ACL, it **immediately removes all rules in the ACL**. It then proceeds to create any rules specified in the configuration. This step is required so that only the rules specified in the configuration are created."
    },
    {
      "old": "The following config gives the Default Network ACL the same rules that AWS includes but pulls the resource under management by Terraform. This means that any ACL rules added or changed will be detected as drift.",
      "new": "The following config gives the Default Network ACL the same rules that AWS includes but pulls the resource under management by Terraform. This means that any ACL rules added or changed will be detected as drift."
    },
    {
      "old": "Each AWS VPC comes with a Default Network ACL that cannot be deleted. The `aws_default_network_acl` allows you to manage this Network ACL, but Terraform cannot destroy it. Removing this resource from your configuration will remove it from your statefile and management, **but will not destroy the Network ACL.** All Subnets associations and ingress or egress rules will be left as they are at the time of removal. You can resume managing them via the AWS Console.",
      "new": "Each AWS VPC comes with a Default Network ACL that cannot be deleted. The `aws_default_network_acl` allows you to manage this Network ACL, but Terraform cannot destroy it. Removing this resource from your configuration will remove it from your statefile and management, **but will not destroy the Network ACL.** All Subnets associations and ingress or egress rules will be left as they are at the time of removal. You can resume managing them via the AWS Console."
    }
  ],
  "website/docs/r/default_route_table.html.markdown": [
    {
      "old": "~> **NOTE:** This is an advanced resource with special caveats. Please read this document in its entirety before using this resource. The `aws_default_route_table` resource behaves differently from normal resources. Terraform does not _create_ this resource but instead attempts to \"adopt\" it into management. **Do not** use both `aws_default_route_table` to manage a default route table **and** `aws_main_route_table_association` with the same VPC due to possible route conflicts. See [aws_main_route_table_association][tf-main-route-table-association] documentation for more details.",
      "new": "~> **NOTE:** This is an advanced resource with special caveats. Please read this document in its entirety before using this resource. The `aws_default_route_table` resource behaves differently from normal resources. Terraform does not _create_ this resource but instead attempts to \"adopt\" it into management. **Do not** use both `aws_default_route_table` to manage a default route table **and** `aws_main_route_table_association` with the same VPC due to possible route conflicts. See [aws_main_route_table_association][tf-main-route-table-association] documentation for more details."
    },
    {
      "old": "Every VPC has a default route table that can be managed but not destroyed. When Terraform first adopts a default route table, it **immediately removes all defined routes**. It then proceeds to create any routes specified in the configuration. This step is required so that only the routes specified in the configuration exist in the default route table.",
      "new": "Every VPC has a default route table that can be managed but not destroyed. When Terraform first adopts a default route table, it **immediately removes all defined routes**. It then proceeds to create any routes specified in the configuration. This step is required so that only the routes specified in the configuration exist in the default route table."
    },
    {
      "old": "For more information, see the Amazon VPC User Guide on [Route Tables](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html). For information about managing normal route tables in Terraform, see `aws_route_table`.",
      "new": "For more information, see the Amazon VPC User Guide on [Route Tables](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html). For information about managing normal route tables in Terraform, see `aws_route_table`."
    }
  ],
  "website/docs/r/default_security_group.html.markdown": [
    {
      "old": "~> **NOTE:** This is an advanced resource with special caveats. Please read this document in its entirety before using this resource. The `aws_default_security_group` resource behaves differently from normal resources. Terraform does not _create_ this resource but instead attempts to \"adopt\" it into management.",
      "new": "~> **NOTE:** This is an advanced resource with special caveats. Please read this document in its entirety before using this resource. The `aws_default_security_group` resource behaves differently from normal resources. Terraform does not _create_ this resource but instead attempts to \"adopt\" it into management."
    },
    {
      "old": "When Terraform first begins managing the default security group, it **immediately removes all ingress and egress rules in the Security Group**. It then creates any rules specified in the configuration. This way only the rules specified in the configuration are created.",
      "new": "When Terraform first begins managing the default security group, it **immediately removes all ingress and egress rules in the Security Group**. It then creates any rules specified in the configuration. This way only the rules specified in the configuration are created."
    },
    {
      "old": "The following config gives the default security group the same rules that AWS provides by default but under management by Terraform. This means that any ingress or egress rules added or changed will be detected as drift.",
      "new": "The following config gives the default security group the same rules that AWS provides by default but under management by Terraform. This means that any ingress or egress rules added or changed will be detected as drift."
    }
  ],
  "website/docs/r/default_subnet.html.markdown": [
    {
      "old": "The `aws_default_subnet` resource behaves differently from normal resources in that if a default subnet exists in the specified Availability Zone, Terraform does not _create_ this resource, but instead \"adopts\" it into management.",
      "new": "The `aws_default_subnet` resource behaves differently from normal resources in that if a default subnet exists in the specified Availability Zone, Terraform does not _create_ this resource, but instead \"adopts\" it into management."
    },
    {
      "old": "If no default subnet exists, Terraform creates a new default subnet.",
      "new": "If no default subnet exists, Terraform creates a new default subnet."
    },
    {
      "old": "By default, `terraform destroy` does not delete the default subnet but does remove the resource from Terraform state.",
      "new": "By default, `terraform destroy` does not delete the default subnet but does remove the resource from Terraform state."
    }
  ],
  "website/docs/r/default_vpc.html.markdown": [
    {
      "old": "The `aws_default_vpc` resource behaves differently from normal resources in that if a default VPC exists, Terraform does not _create_ this resource, but instead \"adopts\" it into management.",
      "new": "The `aws_default_vpc` resource behaves differently from normal resources in that if a default VPC exists, Terraform does not _create_ this resource, but instead \"adopts\" it into management."
    },
    {
      "old": "If no default VPC exists, Terraform creates a new default VPC, which leads to the implicit creation of [other resources](https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html#default-vpc-components).",
      "new": "If no default VPC exists, Terraform creates a new default VPC, which leads to the implicit creation of [other resources](https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html#default-vpc-components)."
    },
    {
      "old": "By default, `terraform destroy` does not delete the default VPC but does remove the resource from Terraform state.",
      "new": "By default, `terraform destroy` does not delete the default VPC but does remove the resource from Terraform state."
    }
  ],
  "website/docs/r/default_vpc_dhcp_options.html.markdown": [
    {
      "old": "Terraform does not _create_ this resource, but instead \"adopts\" it",
      "new": "Terraform does not _create_ this resource, but instead \"adopts\" it"
    },
    {
      "old": "but Terraform cannot destroy it. Removing this resource from your configuration",
      "new": "but Terraform cannot destroy it. Removing this resource from your configuration"
    }
  ],
  "website/docs/r/docdb_cluster.html.markdown": [
    {
      "old": "window. Because of this, Terraform may report a difference in its planning",
      "new": "window. Because of this, Terraform may report a difference in its planning"
    },
    {
      "old": "* `cluster_identifier` - (Optional, Forces new resources) The cluster identifier. If omitted, Terraform will assign a random, unique identifier.",
      "new": "* `cluster_identifier` - (Optional, Forces new resources) The cluster identifier. If omitted, Terraform will assign a random, unique identifier."
    }
  ],
  "website/docs/r/docdb_cluster_parameter_group.html.markdown": [
    {
      "old": "* `name` - (Optional, Forces new resource) The name of the documentDB cluster parameter group. If omitted, Terraform will assign a random, unique name.",
      "new": "* `name` - (Optional, Forces new resource) The name of the documentDB cluster parameter group. If omitted, Terraform will assign a random, unique name."
    },
    {
      "old": "* `description` - (Optional, Forces new resource) The description of the documentDB cluster parameter group. Defaults to \"Managed by Terraform\".",
      "new": "* `description` - (Optional, Forces new resource) The description of the documentDB cluster parameter group. Defaults to \"Managed by Terraform\"."
    }
  ],
  "website/docs/r/docdb_event_subscription.html.markdown": [
    {
      "old": "* `name` - (Optional) The name of the DocDB event subscription. By default generated by Terraform.",
      "new": "* `name` - (Optional) The name of the DocDB event subscription. By default generated by Terraform."
    }
  ],
  "website/docs/r/docdb_global_cluster.html.markdown": [
    {
      "old": "  # Terraform will begin showing it as a difference. Do not configure:",
      "new": "  # Terraform will begin showing it as a difference. Do not configure:"
    },
    {
      "old": "* `engine` - (Optional, Forces new resources) Name of the database engine to be used for this DB cluster. Terraform will only perform drift detection if a configuration value is provided. Current Valid values: `docdb`. Defaults to `docdb`. Conflicts with `source_db_cluster_identifier`.",
      "new": "* `engine` - (Optional, Forces new resources) Name of the database engine to be used for this DB cluster. Terraform will only perform drift detection if a configuration value is provided. Current Valid values: `docdb`. Defaults to `docdb`. Conflicts with `source_db_cluster_identifier`."
    },
    {
      "old": "* `source_db_cluster_identifier` - (Optional) Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. Terraform cannot perform drift detection of this value.",
      "new": "* `source_db_cluster_identifier` - (Optional) Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. Terraform cannot perform drift detection of this value."
    },
    {
      "old": "* `storage_encrypted` - (Optional, Forces new resources) Specifies whether the DB cluster is encrypted. The default is `false` unless `source_db_cluster_identifier` is specified and encrypted. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `storage_encrypted` - (Optional, Forces new resources) Specifies whether the DB cluster is encrypted. The default is `false` unless `source_db_cluster_identifier` is specified and encrypted. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "Certain resource arguments, like `source_db_cluster_identifier`, do not have an API method for reading the information after creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.",
      "new": "Certain resource arguments, like `source_db_cluster_identifier`, do not have an API method for reading the information after creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g."
    }
  ],
  "website/docs/r/docdb_subnet_group.html.markdown": [
    {
      "old": "* `name` - (Optional, Forces new resource) The name of the docDB subnet group. If omitted, Terraform will assign a random, unique name.",
      "new": "* `name` - (Optional, Forces new resource) The name of the docDB subnet group. If omitted, Terraform will assign a random, unique name."
    },
    {
      "old": "* `description` - (Optional) The description of the docDB subnet group. Defaults to \"Managed by Terraform\".",
      "new": "* `description` - (Optional) The description of the docDB subnet group. Defaults to \"Managed by Terraform\"."
    }
  ],
  "website/docs/r/dynamodb_tag.html.markdown": [
    {
      "old": "Manages an individual DynamoDB resource tag. This resource should only be used in cases where DynamoDB resources are created outside Terraform (e.g., Table replicas in other regions).",
      "new": "Manages an individual DynamoDB resource tag. This resource should only be used in cases where DynamoDB resources are created outside Terraform (e.g., Table replicas in other regions)."
    },
    {
      "old": "~> **NOTE:** This tagging resource should not be combined with the Terraform resource for managing the parent resource. For example, using `aws_dynamodb_table` and `aws_dynamodb_tag` to manage tags of the same DynamoDB Table in the same region will cause a perpetual difference where the `aws_dynamodb_cluster` resource will try to remove the tag being added by the `aws_dynamodb_tag` resource.",
      "new": "~> **NOTE:** This tagging resource should not be combined with the Terraform resource for managing the parent resource. For example, using `aws_dynamodb_table` and `aws_dynamodb_tag` to manage tags of the same DynamoDB Table in the same region will cause a perpetual difference where the `aws_dynamodb_cluster` resource will try to remove the tag being added by the `aws_dynamodb_tag` resource."
    }
  ],
  "website/docs/r/ebs_volume.html.markdown": [
    {
      "old": "* `kms_key_id` - (Optional) The ARN for the KMS encryption key. When specifying `kms_key_id`, `encrypted` needs to be set to true. Note: Terraform must be running with credentials which have the `GenerateDataKeyWithoutPlaintext` permission on the specified KMS key as required by the [EBS KMS CMK volume provisioning process](https://docs.aws.amazon.com/kms/latest/developerguide/services-ebs.html#ebs-cmk) to prevent a volume from being created and almost immediately deleted.",
      "new": "* `kms_key_id` - (Optional) The ARN for the KMS encryption key. When specifying `kms_key_id`, `encrypted` needs to be set to true. Note: Terraform must be running with credentials which have the `GenerateDataKeyWithoutPlaintext` permission on the specified KMS key as required by the [EBS KMS CMK volume provisioning process](https://docs.aws.amazon.com/kms/latest/developerguide/services-ebs.html#ebs-cmk) to prevent a volume from being created and almost immediately deleted."
    }
  ],
  "website/docs/r/ec2_client_vpn_endpoint.html.markdown": [
    {
      "old": "~> **NOTE on Client VPN endpoint target network security groups:** Terraform provides both a standalone Client VPN endpoint network association resource with a (deprecated) `security_groups` argument and a Client VPN endpoint resource with a `security_group_ids` argument. Do not specify security groups in both resources. Doing so will cause a conflict and will overwrite the target network security group association.",
      "new": "~> **NOTE on Client VPN endpoint target network security groups:** Terraform provides both a standalone Client VPN endpoint network association resource with a (deprecated) `security_groups` argument and a Client VPN endpoint resource with a `security_group_ids` argument. Do not specify security groups in both resources. Doing so will cause a conflict and will overwrite the target network security group association."
    }
  ],
  "website/docs/r/ec2_client_vpn_network_association.html.markdown": [
    {
      "old": "~> **NOTE on Client VPN endpoint target network security groups:** Terraform provides both a standalone Client VPN endpoint network association resource with a (deprecated) `security_groups` argument and a Client VPN endpoint resource with a `security_group_ids` argument. Do not specify security groups in both resources. Doing so will cause a conflict and will overwrite the target network security group association.",
      "new": "~> **NOTE on Client VPN endpoint target network security groups:** Terraform provides both a standalone Client VPN endpoint network association resource with a (deprecated) `security_groups` argument and a Client VPN endpoint resource with a `security_group_ids` argument. Do not specify security groups in both resources. Doing so will cause a conflict and will overwrite the target network security group association."
    }
  ],
  "website/docs/r/ec2_managed_prefix_list.html.markdown": [
    {
      "old": "~> **NOTE on Managed Prefix Lists and Managed Prefix List Entries:** Terraform",
      "new": "~> **NOTE on Managed Prefix Lists and Managed Prefix List Entries:** Terraform"
    }
  ],
  "website/docs/r/ec2_managed_prefix_list_entry.html.markdown": [
    {
      "old": "~> **NOTE on Managed Prefix Lists and Managed Prefix List Entries:** Terraform",
      "new": "~> **NOTE on Managed Prefix Lists and Managed Prefix List Entries:** Terraform"
    }
  ],
  "website/docs/r/ec2_serial_console_access.html.markdown": [
    {
      "old": "~> **NOTE:** Removing this Terraform resource disables serial console access.",
      "new": "~> **NOTE:** Removing this Terraform resource disables serial console access."
    }
  ],
  "website/docs/r/ec2_tag.html.markdown": [
    {
      "old": "Manages an individual EC2 resource tag. This resource should only be used in cases where EC2 resources are created outside Terraform (e.g., AMIs), being shared via Resource Access Manager (RAM), or implicitly created by other means (e.g., Transit Gateway VPN Attachments).",
      "new": "Manages an individual EC2 resource tag. This resource should only be used in cases where EC2 resources are created outside Terraform (e.g., AMIs), being shared via Resource Access Manager (RAM), or implicitly created by other means (e.g., Transit Gateway VPN Attachments)."
    },
    {
      "old": "~> **NOTE:** This tagging resource should not be combined with the Terraform resource for managing the parent resource. For example, using `aws_vpc` and `aws_ec2_tag` to manage tags of the same VPC will cause a perpetual difference where the `aws_vpc` resource will try to remove the tag being added by the `aws_ec2_tag` resource.",
      "new": "~> **NOTE:** This tagging resource should not be combined with the Terraform resource for managing the parent resource. For example, using `aws_vpc` and `aws_ec2_tag` to manage tags of the same VPC will cause a perpetual difference where the `aws_vpc` resource will try to remove the tag being added by the `aws_ec2_tag` resource."
    }
  ],
  "website/docs/r/ecr_registry_policy.html.markdown": [
    {
      "old": "* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide",
      "new": "* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide"
    }
  ],
  "website/docs/r/ecrpublic_repository_policy.html.markdown": [
    {
      "old": "* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide",
      "new": "* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide"
    }
  ],
  "website/docs/r/ecs_cluster_capacity_providers.html.markdown": [
    {
      "old": "~> **NOTE on Clusters and Cluster Capacity Providers:** Terraform provides both a standalone `aws_ecs_cluster_capacity_providers` resource, as well as allowing the capacity providers and default strategies to be managed in-line by the `aws_ecs_cluster` resource. You cannot use a Cluster with in-line capacity providers in conjunction with the Capacity Providers resource, nor use more than one Capacity Providers resource with a single Cluster, as doing so will cause a conflict and will lead to mutual overwrites.",
      "new": "~> **NOTE on Clusters and Cluster Capacity Providers:** Terraform provides both a standalone `aws_ecs_cluster_capacity_providers` resource, as well as allowing the capacity providers and default strategies to be managed in-line by the `aws_ecs_cluster` resource. You cannot use a Cluster with in-line capacity providers in conjunction with the Capacity Providers resource, nor use more than one Capacity Providers resource with a single Cluster, as doing so will cause a conflict and will lead to mutual overwrites."
    }
  ],
  "website/docs/r/ecs_service.html.markdown": [
    {
      "old": "You can utilize the generic Terraform resource lifecycle configuration block with `ignore_changes` to create an ECS service with an initial count of running instances, then ignore any changes to that count caused externally (e.g., Application Autoscaling).",
      "new": "You can utilize the generic Terraform resource lifecycle configuration block with `ignore_changes` to create an ECS service with an initial count of running instances, then ignore any changes to that count caused externally (e.g., Application Autoscaling)."
    },
    {
      "old": "  # Optional: Allow external changes without Terraform plan difference",
      "new": "  # Optional: Allow external changes without Terraform plan difference"
    },
    {
      "old": "* `wait_for_steady_state` - (Optional) If `true`, Terraform will wait for the service to reach a steady state (like [`aws ecs wait services-stable`](https://docs.aws.amazon.com/cli/latest/reference/ecs/wait/services-stable.html)) before continuing. Default `false`.",
      "new": "* `wait_for_steady_state` - (Optional) If `true`, Terraform will wait for the service to reach a steady state (like [`aws ecs wait services-stable`](https://docs.aws.amazon.com/cli/latest/reference/ecs/wait/services-stable.html)) before continuing. Default `false`."
    },
    {
      "old": "-> **Version note:** Multiple `load_balancer` configuration block support was added in Terraform AWS Provider version 2.22.0. This allows configuration of [ECS service support for multiple target groups](https://aws.amazon.com/about-aws/whats-new/2019/07/amazon-ecs-services-now-support-multiple-load-balancer-target-groups/).",
      "new": "-> **Version note:** Multiple `load_balancer` configuration block support was added in Terraform AWS Provider version 2.22.0. This allows configuration of [ECS service support for multiple target groups](https://aws.amazon.com/about-aws/whats-new/2019/07/amazon-ecs-services-now-support-multiple-load-balancer-target-groups/)."
    }
  ],
  "website/docs/r/ecs_tag.html.markdown": [
    {
      "old": "Manages an individual ECS resource tag. This resource should only be used in cases where ECS resources are created outside Terraform (e.g., ECS Clusters implicitly created by Batch Compute Environments).",
      "new": "Manages an individual ECS resource tag. This resource should only be used in cases where ECS resources are created outside Terraform (e.g., ECS Clusters implicitly created by Batch Compute Environments)."
    },
    {
      "old": "~> **NOTE:** This tagging resource should not be combined with the Terraform resource for managing the parent resource. For example, using `aws_ecs_cluster` and `aws_ecs_tag` to manage tags of the same ECS Cluster will cause a perpetual difference where the `aws_ecs_cluster` resource will try to remove the tag being added by the `aws_ecs_tag` resource.",
      "new": "~> **NOTE:** This tagging resource should not be combined with the Terraform resource for managing the parent resource. For example, using `aws_ecs_cluster` and `aws_ecs_tag` to manage tags of the same ECS Cluster will cause a perpetual difference where the `aws_ecs_cluster` resource will try to remove the tag being added by the `aws_ecs_tag` resource."
    }
  ],
  "website/docs/r/ecs_task_set.html.markdown": [
    {
      "old": "You can utilize the generic Terraform resource lifecycle configuration block with `ignore_changes` to create an ECS service with an initial count of running instances, then ignore any changes to that count caused externally (e.g. Application Autoscaling).",
      "new": "You can utilize the generic Terraform resource lifecycle configuration block with `ignore_changes` to create an ECS service with an initial count of running instances, then ignore any changes to that count caused externally (e.g. Application Autoscaling)."
    },
    {
      "old": "  # Optional: Allow external changes without Terraform plan difference",
      "new": "  # Optional: Allow external changes without Terraform plan difference"
    },
    {
      "old": "* `force_delete` - (Optional) Whether to allow deleting the task set without waiting for scaling down to 0. You can force a task set to delete even if it's in the process of scaling a resource. Normally, Terraform drains all the tasks before deleting the task set. This bypasses that behavior and potentially leaves resources dangling.",
      "new": "* `force_delete` - (Optional) Whether to allow deleting the task set without waiting for scaling down to 0. You can force a task set to delete even if it's in the process of scaling a resource. Normally, Terraform drains all the tasks before deleting the task set. This bypasses that behavior and potentially leaves resources dangling."
    }
  ],
  "website/docs/r/eks_cluster.html.markdown": [
    {
      "old": "* `kubernetes_network_config` - (Optional) Configuration block with kubernetes network configuration for the cluster. Detailed below. If removed, Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `kubernetes_network_config` - (Optional) Configuration block with kubernetes network configuration for the cluster. Detailed below. If removed, Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "* `public_access_cidrs` - (Optional) List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with `0.0.0.0/0`. Terraform will only perform drift detection of its value when present in a configuration.",
      "new": "* `public_access_cidrs` - (Optional) List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint when enabled. EKS defaults this to a list with `0.0.0.0/0`. Terraform will only perform drift detection of its value when present in a configuration."
    }
  ],
  "website/docs/r/eks_node_group.html.markdown": [
    {
      "old": "You can utilize the generic Terraform resource lifecycle configuration block with `ignore_changes` to create an EKS Node Group with an initial size of running instances, then ignore any changes to that count caused externally (e.g., Application Autoscaling).",
      "new": "You can utilize the generic Terraform resource lifecycle configuration block with `ignore_changes` to create an EKS Node Group with an initial size of running instances, then ignore any changes to that count caused externally (e.g., Application Autoscaling)."
    },
    {
      "old": "  # Optional: Allow external changes without Terraform plan difference",
      "new": "  # Optional: Allow external changes without Terraform plan difference"
    },
    {
      "old": "* `ami_type` - (Optional) Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the [AWS documentation](https://docs.aws.amazon.com/eks/latest/APIReference/API_Nodegroup.html#AmazonEKS-Type-Nodegroup-amiType) for valid values. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `ami_type` - (Optional) Type of Amazon Machine Image (AMI) associated with the EKS Node Group. See the [AWS documentation](https://docs.aws.amazon.com/eks/latest/APIReference/API_Nodegroup.html#AmazonEKS-Type-Nodegroup-amiType) for valid values. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "* `capacity_type` - (Optional) Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `capacity_type` - (Optional) Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "* `disk_size` - (Optional) Disk size in GiB for worker nodes. Defaults to `20`. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `disk_size` - (Optional) Disk size in GiB for worker nodes. Defaults to `20`. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "* `instance_types` - (Optional) List of instance types associated with the EKS Node Group. Defaults to `[\"t3.medium\"]`. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `instance_types` - (Optional) List of instance types associated with the EKS Node Group. Defaults to `[\"t3.medium\"]`. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "* `node_group_name` – (Optional) Name of the EKS Node Group. If omitted, Terraform will assign a random, unique name. Conflicts with `node_group_name_prefix`.",
      "new": "* `node_group_name` – (Optional) Name of the EKS Node Group. If omitted, Terraform will assign a random, unique name. Conflicts with `node_group_name_prefix`."
    },
    {
      "old": "* `version` – (Optional) Kubernetes version. Defaults to EKS Cluster Kubernetes version. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `version` – (Optional) Kubernetes version. Defaults to EKS Cluster Kubernetes version. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "* `version` - (Required) EC2 Launch Template version number. While the API accepts values like `$Default` and `$Latest`, the API will convert the value to the associated version number (e.g., `1`) on read and Terraform will show a difference on next plan. Using the `default_version` or `latest_version` attribute of the `aws_launch_template` resource or data source is recommended for this argument.",
      "new": "* `version` - (Required) EC2 Launch Template version number. While the API accepts values like `$Default` and `$Latest`, the API will convert the value to the associated version number (e.g., `1`) on read and Terraform will show a difference on next plan. Using the `default_version` or `latest_version` attribute of the `aws_launch_template` resource or data source is recommended for this argument."
    }
  ],
  "website/docs/r/elasticache_global_replication_group.html.markdown": [
    {
      "old": "The global replication group depends on the primary group existing. Secondary replication groups depend on the global replication group. Terraform dependency management will handle this transparently using resource value references.",
      "new": "The global replication group depends on the primary group existing. Secondary replication groups depend on the global replication group. Terraform dependency management will handle this transparently using resource value references."
    },
    {
      "old": "or Terraform will always return a diff.",
      "new": "or Terraform will always return a diff."
    }
  ],
  "website/docs/r/elasticache_parameter_group.html.markdown": [
    {
      "old": "~> **NOTE:** Attempting to remove the `reserved-memory` parameter when `family` is set to `redis2.6` or `redis2.8` may show a perpetual difference in Terraform due to an ElastiCache API limitation. Leave that parameter configured with any value to workaround the issue.",
      "new": "~> **NOTE:** Attempting to remove the `reserved-memory` parameter when `family` is set to `redis2.6` or `redis2.8` may show a perpetual difference in Terraform due to an ElastiCache API limitation. Leave that parameter configured with any value to workaround the issue."
    },
    {
      "old": "* `description` - (Optional) The description of the ElastiCache parameter group. Defaults to \"Managed by Terraform\".",
      "new": "* `description` - (Optional) The description of the ElastiCache parameter group. Defaults to \"Managed by Terraform\"."
    }
  ],
  "website/docs/r/elasticache_replication_group.html.markdown": [
    {
      "old": "of this, Terraform may report a difference in its planning phase because the",
      "new": "of this, Terraform may report a difference in its planning phase because the"
    },
    {
      "old": "* Otherwise for fine grained control of the underlying cache clusters, they can be added or removed with the `aws_elasticache_cluster` resource and its `replication_group_id` attribute. In this situation, you will need to utilize the lifecycle configuration block with `ignore_changes` to prevent perpetual differences during Terraform plan with the `num_cache_cluster` attribute.",
      "new": "* Otherwise for fine grained control of the underlying cache clusters, they can be added or removed with the `aws_elasticache_cluster` resource and its `replication_group_id` attribute. In this situation, you will need to utilize the lifecycle configuration block with `ignore_changes` to prevent perpetual differences during Terraform plan with the `num_cache_cluster` attribute."
    }
  ],
  "website/docs/r/elasticache_security_group.html.markdown": [
    {
      "old": "!> **WARNING:** With the retirement of EC2-Classic the `aws_elasticache_security_group` resource has been deprecated and will be removed in a future version. Any existing resources can be removed from Terraform state using the `terraform state rm` command.",
      "new": "!> **WARNING:** With the retirement of EC2-Classic the `aws_elasticache_security_group` resource has been deprecated and will be removed in a future version. Any existing resources can be removed from Terraform state using the `terraform state rm` command."
    },
    {
      "old": "* `description` – (Optional) description for the cache security group. Defaults to \"Managed by Terraform\".",
      "new": "* `description` – (Optional) description for the cache security group. Defaults to \"Managed by Terraform\"."
    }
  ],
  "website/docs/r/elasticache_user_group_association.html.markdown": [
    {
      "old": "~> **NOTE:** Terraform will detect changes in the `aws_elasticache_user_group` since `aws_elasticache_user_group_association` changes the user IDs associated with the user group. You can ignore these changes with the `lifecycle` `ignore_changes` meta argument as shown in the example.",
      "new": "~> **NOTE:** Terraform will detect changes in the `aws_elasticache_user_group` since `aws_elasticache_user_group_association` changes the user IDs associated with the user group. You can ignore these changes with the `lifecycle` `ignore_changes` meta argument as shown in the example."
    }
  ],
  "website/docs/r/elasticsearch_domain.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Elasticsearch Domain.",
      "new": "  Terraform resource for managing an AWS Elasticsearch Domain."
    },
    {
      "old": "  description = \"Managed by Terraform\"",
      "new": "  description = \"Managed by Terraform\""
    },
    {
      "old": "* `advanced_options` - (Optional) Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing Terraform to want to recreate your Elasticsearch domain on every apply.",
      "new": "* `advanced_options` - (Optional) Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing Terraform to want to recreate your Elasticsearch domain on every apply."
    },
    {
      "old": "* `tls_security_policy` - (Optional) Name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values:  `Policy-Min-TLS-1-0-2019-07` and `Policy-Min-TLS-1-2-2019-07`. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `tls_security_policy` - (Optional) Name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values:  `Policy-Min-TLS-1-0-2019-07` and `Policy-Min-TLS-1-2-2019-07`. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "~> **Note:** You can enable `encrypt_at_rest` _in place_ for an existing, unencrypted domain only if your Elasticsearch version is 6.7 or greater. For lower versions, if you enable `encrypt_at_rest`, Terraform with recreate the domain, potentially causing data loss. For any version, if you disable `encrypt_at_rest` for an existing, encrypted domain, Terraform will recreate the domain, potentially causing data loss. If you change the `kms_key_id`, Terraform will also recreate the domain, potentially causing data loss.",
      "new": "~> **Note:** You can enable `encrypt_at_rest` _in place_ for an existing, unencrypted domain only if your Elasticsearch version is 6.7 or greater. For lower versions, if you enable `encrypt_at_rest`, Terraform with recreate the domain, potentially causing data loss. For any version, if you disable `encrypt_at_rest` for an existing, encrypted domain, Terraform will recreate the domain, potentially causing data loss. If you change the `kms_key_id`, Terraform will also recreate the domain, potentially causing data loss."
    },
    {
      "old": "* `kms_key_id` - (Optional) KMS key ARN to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key. Note that KMS will accept a KMS key ID but will return the key ARN. To prevent Terraform detecting unwanted changes, use the key ARN instead.",
      "new": "* `kms_key_id` - (Optional) KMS key ARN to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key. Note that KMS will accept a KMS key ID but will return the key ARN. To prevent Terraform detecting unwanted changes, use the key ARN instead."
    },
    {
      "old": "~> **Note:** You can enable `node_to_node_encryption` _in place_ for an existing, unencrypted domain only if your Elasticsearch version is 6.7 or greater. For lower versions, if you enable `node_to_node_encryption`, Terraform will recreate the domain, potentially causing data loss. For any version, if you disable `node_to_node_encryption` for an existing, node-to-node encrypted domain, Terraform will recreate the domain, potentially causing data loss.",
      "new": "~> **Note:** You can enable `node_to_node_encryption` _in place_ for an existing, unencrypted domain only if your Elasticsearch version is 6.7 or greater. For lower versions, if you enable `node_to_node_encryption`, Terraform will recreate the domain, potentially causing data loss. For any version, if you disable `node_to_node_encryption` for an existing, node-to-node encrypted domain, Terraform will recreate the domain, potentially causing data loss."
    }
  ],
  "website/docs/r/elasticsearch_domain_saml_options.html.markdown": [
    {
      "old": "  Terraform resource for managing SAML authentication options for an AWS Elasticsearch Domain.",
      "new": "  Terraform resource for managing SAML authentication options for an AWS Elasticsearch Domain."
    }
  ],
  "website/docs/r/elb.html.markdown": [
    {
      "old": "~> **NOTE on ELB Instances and ELB Attachments:** Terraform currently",
      "new": "~> **NOTE on ELB Instances and ELB Attachments:** Terraform currently"
    },
    {
      "old": "* `name` - (Optional) The name of the ELB. By default generated by Terraform.",
      "new": "* `name` - (Optional) The name of the ELB. By default generated by Terraform."
    }
  ],
  "website/docs/r/emr_cluster.html.markdown": [
    {
      "old": "The `aws_emr_cluster` resource typically requires two IAM roles, one for the EMR Cluster to use as a service, and another to place on your Cluster Instances to interact with AWS from those instances. The suggested role policy template for the EMR service is `AmazonElasticMapReduceRole`, and `AmazonElasticMapReduceforEC2Role` for the EC2 profile. See the [Getting Started](https://docs.aws.amazon.com/ElasticMapReduce/latest/ManagementGuide/emr-gs-launch-sample-cluster.html) guide for more information on these IAM roles. There is also a fully-bootable example Terraform configuration at the bottom of this page.",
      "new": "The `aws_emr_cluster` resource typically requires two IAM roles, one for the EMR Cluster to use as a service, and another to place on your Cluster Instances to interact with AWS from those instances. The suggested role policy template for the EMR service is `AmazonElasticMapReduceRole`, and `AmazonElasticMapReduceforEC2Role` for the EC2 profile. See the [Getting Started](https://docs.aws.amazon.com/ElasticMapReduce/latest/ManagementGuide/emr-gs-launch-sample-cluster.html) guide for more information on these IAM roles. There is also a fully-bootable example Terraform configuration at the bottom of this page."
    },
    {
      "old": "[Debug logging in EMR](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-debugging.html) is implemented as a step. It is highly recommended that you utilize the lifecycle configuration block with `ignore_changes` if other steps are being managed outside of Terraform.",
      "new": "[Debug logging in EMR](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-debugging.html) is implemented as a step. It is highly recommended that you utilize the lifecycle configuration block with `ignore_changes` if other steps are being managed outside of Terraform."
    },
    {
      "old": "* `additional_info` - (Optional) JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore Terraform cannot detect drift from the actual EMR cluster if its value is changed outside Terraform.",
      "new": "* `additional_info` - (Optional) JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore Terraform cannot detect drift from the actual EMR cluster if its value is changed outside Terraform."
    },
    {
      "old": "* `step` - (Optional) List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle configuration block with `ignore_changes` if other steps are being managed outside of Terraform. This argument is processed in attribute-as-blocks mode.",
      "new": "* `step` - (Optional) List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle configuration block with `ignore_changes` if other steps are being managed outside of Terraform. This argument is processed in attribute-as-blocks mode."
    },
    {
      "old": "~> **NOTE on EMR-Managed security groups:** These security groups will have any missing inbound or outbound access rules added and maintained by AWS, to ensure proper communication between instances in a cluster. The EMR service will maintain these rules for groups provided in `emr_managed_master_security_group` and `emr_managed_slave_security_group`; attempts to remove the required rules may succeed, only for the EMR service to re-add them in a matter of minutes. This may cause Terraform to fail to destroy an environment that contains an EMR cluster, because the EMR service does not revoke rules added on deletion, leaving a cyclic dependency between the security groups that prevents their deletion. To avoid this, use the `revoke_rules_on_delete` optional attribute for any Security Group used in `emr_managed_master_security_group` and `emr_managed_slave_security_group`. See [Amazon EMR-Managed Security Groups](http://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-man-sec-groups.html) for more information about the EMR-managed security group rules.",
      "new": "~> **NOTE on EMR-Managed security groups:** These security groups will have any missing inbound or outbound access rules added and maintained by AWS, to ensure proper communication between instances in a cluster. The EMR service will maintain these rules for groups provided in `emr_managed_master_security_group` and `emr_managed_slave_security_group`; attempts to remove the required rules may succeed, only for the EMR service to re-add them in a matter of minutes. This may cause Terraform to fail to destroy an environment that contains an EMR cluster, because the EMR service does not revoke rules added on deletion, leaving a cyclic dependency between the security groups that prevents their deletion. To avoid this, use the `revoke_rules_on_delete` optional attribute for any Security Group used in `emr_managed_master_security_group` and `emr_managed_slave_security_group`. See [Amazon EMR-Managed Security Groups](http://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-man-sec-groups.html) for more information about the EMR-managed security group rules."
    },
    {
      "old": "* `ad_domain_join_password` - (Optional) Active Directory password for `ad_domain_join_user`. Terraform cannot perform drift detection of this configuration.",
      "new": "* `ad_domain_join_password` - (Optional) Active Directory password for `ad_domain_join_user`. Terraform cannot perform drift detection of this configuration."
    },
    {
      "old": "* `ad_domain_join_user` - (Optional) Required only when establishing a cross-realm trust with an Active Directory domain. A user with sufficient privileges to join resources to the domain. Terraform cannot perform drift detection of this configuration.",
      "new": "* `ad_domain_join_user` - (Optional) Required only when establishing a cross-realm trust with an Active Directory domain. A user with sufficient privileges to join resources to the domain. Terraform cannot perform drift detection of this configuration."
    },
    {
      "old": "* `cross_realm_trust_principal_password` - (Optional) Required only when establishing a cross-realm trust with a KDC in a different realm. The cross-realm principal password, which must be identical across realms. Terraform cannot perform drift detection of this configuration.",
      "new": "* `cross_realm_trust_principal_password` - (Optional) Required only when establishing a cross-realm trust with a KDC in a different realm. The cross-realm principal password, which must be identical across realms. Terraform cannot perform drift detection of this configuration."
    },
    {
      "old": "* `kdc_admin_password` - (Required) Password used within the cluster for the kadmin service on the cluster-dedicated KDC, which maintains Kerberos principals, password policies, and keytabs for the cluster. Terraform cannot perform drift detection of this configuration.",
      "new": "* `kdc_admin_password` - (Required) Password used within the cluster for the kadmin service on the cluster-dedicated KDC, which maintains Kerberos principals, password policies, and keytabs for the cluster. Terraform cannot perform drift detection of this configuration."
    },
    {
      "old": "* `instance_count` - (Optional) Target number of instances for the instance group. Must be 1 or 3. Defaults to 1. Launching with multiple master nodes is only supported in EMR version 5.23.0+, and requires this resource's `core_instance_group` to be configured. Public (Internet accessible) instances must be created in VPC subnets that have map public IP on launch enabled. Termination protection is automatically enabled when launched with multiple master nodes and Terraform must have the `termination_protection = false` configuration applied before destroying this resource.",
      "new": "* `instance_count` - (Optional) Target number of instances for the instance group. Must be 1 or 3. Defaults to 1. Launching with multiple master nodes is only supported in EMR version 5.23.0+, and requires this resource's `core_instance_group` to be configured. Public (Internet accessible) instances must be created in VPC subnets that have map public IP on launch enabled. Termination protection is automatically enabled when launched with multiple master nodes and Terraform must have the `termination_protection = false` configuration applied before destroying this resource."
    },
    {
      "old": "Since the API does not return the actual values for Kerberos configurations, environments with those Terraform configurations will need to use the `lifecycle` configuration block `ignore_changes` argument available to all Terraform resources to prevent perpetual differences, e.g.,",
      "new": "Since the API does not return the actual values for Kerberos configurations, environments with those Terraform configurations will need to use the `lifecycle` configuration block `ignore_changes` argument available to all Terraform resources to prevent perpetual differences, e.g.,"
    }
  ],
  "website/docs/r/fsx_ontap_file_system.html.markdown": [
    {
      "old": "Certain resource arguments, like `security_group_ids`, do not have a FSx API method for reading the information after creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,",
      "new": "Certain resource arguments, like `security_group_ids`, do not have a FSx API method for reading the information after creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,"
    }
  ],
  "website/docs/r/fsx_ontap_storage_virtual_machine.html.markdown": [
    {
      "old": "Certain resource arguments, like `svm_admin_password` and the `self_managed_active_directory` configuation block `password`, do not have a FSx API method for reading the information after creation. If these arguments are set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,",
      "new": "Certain resource arguments, like `svm_admin_password` and the `self_managed_active_directory` configuation block `password`, do not have a FSx API method for reading the information after creation. If these arguments are set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,"
    }
  ],
  "website/docs/r/fsx_openzfs_file_system.html.markdown": [
    {
      "old": "Certain resource arguments, like `security_group_ids`, do not have a FSx API method for reading the information after creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,",
      "new": "Certain resource arguments, like `security_group_ids`, do not have a FSx API method for reading the information after creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,"
    }
  ],
  "website/docs/r/glacier_vault_lock.html.markdown": [
    {
      "old": "~> **NOTE:** This resource allows you to test Glacier Vault Lock policies by setting the `complete_lock` argument to `false`. When testing policies in this manner, the Glacier Vault Lock automatically expires after 24 hours and Terraform will show this resource as needing recreation after that time. To permanently apply the policy, set the `complete_lock` argument to `true`. When changing `complete_lock` to `true`, it is expected the resource will show as recreating.",
      "new": "~> **NOTE:** This resource allows you to test Glacier Vault Lock policies by setting the `complete_lock` argument to `false`. When testing policies in this manner, the Glacier Vault Lock automatically expires after 24 hours and Terraform will show this resource as needing recreation after that time. To permanently apply the policy, set the `complete_lock` argument to `true`. When changing `complete_lock` to `true`, it is expected the resource will show as recreating."
    },
    {
      "old": "!> **WARNING:** Once a Glacier Vault Lock is completed, it is immutable. The deletion of the Glacier Vault Lock is not be possible and attempting to remove it from Terraform will return an error. Set the `ignore_deletion_error` argument to `true` and apply this configuration before attempting to delete this resource via Terraform or use `terraform state rm` to remove this resource from Terraform management.",
      "new": "!> **WARNING:** Once a Glacier Vault Lock is completed, it is immutable. The deletion of the Glacier Vault Lock is not be possible and attempting to remove it from Terraform will return an error. Set the `ignore_deletion_error` argument to `true` and apply this configuration before attempting to delete this resource via Terraform or use `terraform state rm` to remove this resource from Terraform management."
    },
    {
      "old": "* `complete_lock` - (Required) Boolean whether to permanently apply this Glacier Lock Policy. Once completed, this cannot be undone. If set to `false`, the Glacier Lock Policy remains in a testing mode for 24 hours. After that time, the Glacier Lock Policy is automatically removed by Glacier and the Terraform resource will show as needing recreation. Changing this from `false` to `true` will show as resource recreation, which is expected. Changing this from `true` to `false` is not possible unless the Glacier Vault is recreated at the same time.",
      "new": "* `complete_lock` - (Required) Boolean whether to permanently apply this Glacier Lock Policy. Once completed, this cannot be undone. If set to `false`, the Glacier Lock Policy remains in a testing mode for 24 hours. After that time, the Glacier Lock Policy is automatically removed by Glacier and the Terraform resource will show as needing recreation. Changing this from `false` to `true` will show as resource recreation, which is expected. Changing this from `true` to `false` is not possible unless the Glacier Vault is recreated at the same time."
    },
    {
      "old": "* `ignore_deletion_error` - (Optional) Allow Terraform to ignore the error returned when attempting to delete the Glacier Lock Policy. This can be used to delete or recreate the Glacier Vault via Terraform, for example, if the Glacier Vault Lock policy permits that action. This should only be used in conjunction with `complete_lock` being set to `true`.",
      "new": "* `ignore_deletion_error` - (Optional) Allow Terraform to ignore the error returned when attempting to delete the Glacier Lock Policy. This can be used to delete or recreate the Glacier Vault via Terraform, for example, if the Glacier Vault Lock policy permits that action. This should only be used in conjunction with `complete_lock` being set to `true`."
    }
  ],
  "website/docs/r/globalaccelerator_endpoint_group.html.markdown": [
    {
      "old": "* `health_check_path` - (Optional) If the protocol is HTTP/S, then this specifies the path that is the destination for health check targets. The default value is slash (`/`). Terraform will only perform drift detection of its value when present in a configuration.",
      "new": "* `health_check_path` - (Optional) If the protocol is HTTP/S, then this specifies the path that is the destination for health check targets. The default value is slash (`/`). Terraform will only perform drift detection of its value when present in a configuration."
    },
    {
      "old": "Terraform will only perform drift detection of its value when present in a configuration.",
      "new": "Terraform will only perform drift detection of its value when present in a configuration."
    },
    {
      "old": "**Note:** When client IP address preservation is enabled, the Global Accelerator service creates an EC2 Security Group in the VPC named `GlobalAccelerator` that must be deleted (potentially outside of Terraform) before the VPC will successfully delete. If this EC2 Security Group is not deleted, Terraform will retry the VPC deletion for a few minutes before reporting a `DependencyViolation` error. This cannot be resolved by re-running Terraform.",
      "new": "**Note:** When client IP address preservation is enabled, the Global Accelerator service creates an EC2 Security Group in the VPC named `GlobalAccelerator` that must be deleted (potentially outside of Terraform) before the VPC will successfully delete. If this EC2 Security Group is not deleted, Terraform will retry the VPC deletion for a few minutes before reporting a `DependencyViolation` error. This cannot be resolved by re-running Terraform."
    }
  ],
  "website/docs/r/iam_group.html.markdown": [
    {
      "old": "~> **NOTE on user management:** Using `aws_iam_group_membership` or `aws_iam_user_group_membership` resources in addition to manually managing user/group membership using the console may lead to configuration drift or conflicts. For this reason, it's recommended to either manage membership entirely with Terraform or entirely within the AWS console.",
      "new": "~> **NOTE on user management:** Using `aws_iam_group_membership` or `aws_iam_user_group_membership` resources in addition to manually managing user/group membership using the console may lead to configuration drift or conflicts. For this reason, it's recommended to either manage membership entirely with Terraform or entirely within the AWS console."
    }
  ],
  "website/docs/r/iam_group_policy.html.markdown": [
    {
      "old": "  # Terraform's \"jsonencode\" function converts a",
      "new": "  # Terraform's \"jsonencode\" function converts a"
    },
    {
      "old": "  # Terraform expression result to valid JSON syntax.",
      "new": "  # Terraform expression result to valid JSON syntax."
    },
    {
      "old": "* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide",
      "new": "* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide"
    },
    {
      "old": "* `name` - (Optional) The name of the policy. If omitted, Terraform will",
      "new": "* `name` - (Optional) The name of the policy. If omitted, Terraform will"
    }
  ],
  "website/docs/r/iam_policy.html.markdown": [
    {
      "old": "  # Terraform's \"jsonencode\" function converts a",
      "new": "  # Terraform's \"jsonencode\" function converts a"
    },
    {
      "old": "  # Terraform expression result to valid JSON syntax.",
      "new": "  # Terraform expression result to valid JSON syntax."
    },
    {
      "old": "* `name` - (Optional, Forces new resource) The name of the policy. If omitted, Terraform will assign a random, unique name.",
      "new": "* `name` - (Optional, Forces new resource) The name of the policy. If omitted, Terraform will assign a random, unique name."
    },
    {
      "old": "* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide",
      "new": "* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide"
    }
  ],
  "website/docs/r/iam_policy_attachment.html.markdown": [
    {
      "old": "!> **WARNING:** The aws_iam_policy_attachment resource creates **exclusive** attachments of IAM policies. Across the entire AWS account, all of the users/roles/groups to which a single policy is attached must be declared by a single aws_iam_policy_attachment resource. This means that even any users/roles/groups that have the attached policy via any other mechanism (including other Terraform resources) will have that attached policy revoked by this resource. Consider `aws_iam_role_policy_attachment`, `aws_iam_user_policy_attachment`, or `aws_iam_group_policy_attachment` instead. These resources do not enforce exclusive attachment of an IAM policy.",
      "new": "!> **WARNING:** The aws_iam_policy_attachment resource creates **exclusive** attachments of IAM policies. Across the entire AWS account, all of the users/roles/groups to which a single policy is attached must be declared by a single aws_iam_policy_attachment resource. This means that even any users/roles/groups that have the attached policy via any other mechanism (including other Terraform resources) will have that attached policy revoked by this resource. Consider `aws_iam_role_policy_attachment`, `aws_iam_user_policy_attachment`, or `aws_iam_group_policy_attachment` instead. These resources do not enforce exclusive attachment of an IAM policy."
    },
    {
      "old": "~> **NOTE:** For a given role, this resource is incompatible with using the `aws_iam_role` resource `managed_policy_arns` argument. When using that argument and this resource, both will attempt to manage the role's managed policy attachments and Terraform will show a permanent difference.",
      "new": "~> **NOTE:** For a given role, this resource is incompatible with using the `aws_iam_role` resource `managed_policy_arns` argument. When using that argument and this resource, both will attempt to manage the role's managed policy attachments and Terraform will show a permanent difference."
    }
  ],
  "website/docs/r/iam_role.html.markdown": [
    {
      "old": "  # Terraform's \"jsonencode\" function converts a",
      "new": "  # Terraform's \"jsonencode\" function converts a"
    },
    {
      "old": "  # Terraform expression result to valid JSON syntax.",
      "new": "  # Terraform expression result to valid JSON syntax."
    },
    {
      "old": "This example creates an IAM role with two inline IAM policies. If someone adds another inline policy out-of-band, on the next apply, Terraform will remove that policy. If someone deletes these policies out-of-band, Terraform will recreate them.",
      "new": "This example creates an IAM role with two inline IAM policies. If someone adds another inline policy out-of-band, on the next apply, Terraform will remove that policy. If someone deletes these policies out-of-band, Terraform will recreate them."
    },
    {
      "old": "This example creates an IAM role with what appears to be empty IAM `inline_policy` argument instead of using `inline_policy` as a configuration block. The result is that if someone were to add an inline policy out-of-band, on the next apply, Terraform will remove that policy.",
      "new": "This example creates an IAM role with what appears to be empty IAM `inline_policy` argument instead of using `inline_policy` as a configuration block. The result is that if someone were to add an inline policy out-of-band, on the next apply, Terraform will remove that policy."
    },
    {
      "old": "This example creates an IAM role and attaches two managed IAM policies. If someone attaches another managed policy out-of-band, on the next apply, Terraform will detach that policy. If someone detaches these policies out-of-band, Terraform will attach them again.",
      "new": "This example creates an IAM role and attaches two managed IAM policies. If someone attaches another managed policy out-of-band, on the next apply, Terraform will detach that policy. If someone detaches these policies out-of-band, Terraform will attach them again."
    },
    {
      "old": "This example creates an IAM role with an empty `managed_policy_arns` argument. If someone attaches a policy out-of-band, on the next apply, Terraform will detach that policy.",
      "new": "This example creates an IAM role with an empty `managed_policy_arns` argument. If someone attaches a policy out-of-band, on the next apply, Terraform will detach that policy."
    },
    {
      "old": "* `inline_policy` - (Optional) Configuration block defining an exclusive set of IAM inline policies associated with the IAM role. See below. If no blocks are configured, Terraform will not manage any inline policies in this resource. Configuring one empty block (i.e., `inline_policy {}`) will cause Terraform to remove _all_ inline policies added out of band on `apply`.",
      "new": "* `inline_policy` - (Optional) Configuration block defining an exclusive set of IAM inline policies associated with the IAM role. See below. If no blocks are configured, Terraform will not manage any inline policies in this resource. Configuring one empty block (i.e., `inline_policy {}`) will cause Terraform to remove _all_ inline policies added out of band on `apply`."
    },
    {
      "old": "* `managed_policy_arns` - (Optional) Set of exclusive IAM managed policy ARNs to attach to the IAM role. If this attribute is not configured, Terraform will ignore policy attachments to this resource. When configured, Terraform will align the role's managed policy attachments with this set by attaching or detaching managed policies. Configuring an empty set (i.e., `managed_policy_arns = []`) will cause Terraform to remove _all_ managed policy attachments.",
      "new": "* `managed_policy_arns` - (Optional) Set of exclusive IAM managed policy ARNs to attach to the IAM role. If this attribute is not configured, Terraform will ignore policy attachments to this resource. When configured, Terraform will align the role's managed policy attachments with this set by attaching or detaching managed policies. Configuring an empty set (i.e., `managed_policy_arns = []`) will cause Terraform to remove _all_ managed policy attachments."
    },
    {
      "old": "* `name` - (Optional, Forces new resource) Friendly name of the role. If omitted, Terraform will assign a random, unique name. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) for more information.",
      "new": "* `name` - (Optional, Forces new resource) Friendly name of the role. If omitted, Terraform will assign a random, unique name. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) for more information."
    },
    {
      "old": "~> **NOTE:** Since one empty block (i.e., `inline_policy {}`) is valid syntactically to remove out of band policies on `apply`, `name` and `policy` are technically _optional_. However, they are both _required_ in order to manage actual inline policies. Not including one or the other may not result in Terraform errors but will result in unpredictable and incorrect behavior.",
      "new": "~> **NOTE:** Since one empty block (i.e., `inline_policy {}`) is valid syntactically to remove out of band policies on `apply`, `name` and `policy` are technically _optional_. However, they are both _required_ in order to manage actual inline policies. Not including one or the other may not result in Terraform errors but will result in unpredictable and incorrect behavior."
    },
    {
      "old": "* `policy` - (Required) Policy document as a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.",
      "new": "* `policy` - (Required) Policy document as a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide."
    }
  ],
  "website/docs/r/iam_role_policy.html.markdown": [
    {
      "old": "~> **NOTE:** For a given role, this resource is incompatible with using the `aws_iam_role` resource `inline_policy` argument. When using that argument and this resource, both will attempt to manage the role's inline policies and Terraform will show a permanent difference.",
      "new": "~> **NOTE:** For a given role, this resource is incompatible with using the `aws_iam_role` resource `inline_policy` argument. When using that argument and this resource, both will attempt to manage the role's inline policies and Terraform will show a permanent difference."
    },
    {
      "old": "  # Terraform's \"jsonencode\" function converts a",
      "new": "  # Terraform's \"jsonencode\" function converts a"
    },
    {
      "old": "  # Terraform expression result to valid JSON syntax.",
      "new": "  # Terraform expression result to valid JSON syntax."
    },
    {
      "old": "* `name` - (Optional) The name of the role policy. If omitted, Terraform will",
      "new": "* `name` - (Optional) The name of the role policy. If omitted, Terraform will"
    },
    {
      "old": "* `policy` - (Required) The inline policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide",
      "new": "* `policy` - (Required) The inline policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the AWS IAM Policy Document Guide"
    }
  ],
  "website/docs/r/iam_server_certificate.html.markdown": [
    {
      "old": "in use. In order for Terraform to effectively manage a Certificate in this situation, it is",
      "new": "in use. In order for Terraform to effectively manage a Certificate in this situation, it is"
    },
    {
      "old": "`create_before_destroy` [lifecycle block][lifecycle]. This will allow Terraform",
      "new": "`create_before_destroy` [lifecycle block][lifecycle]. This will allow Terraform"
    },
    {
      "old": "  path in this value. If omitted, Terraform will assign a random, unique name.",
      "new": "  path in this value. If omitted, Terraform will assign a random, unique name."
    }
  ],
  "website/docs/r/iam_user.html.markdown": [
    {
      "old": "  has non-Terraform-managed IAM access keys, login profile or MFA devices. Without `force_destroy`",
      "new": "  has non-Terraform-managed IAM access keys, login profile or MFA devices. Without `force_destroy`"
    },
    {
      "old": "  a user with non-Terraform-managed access keys and login profile will fail to be destroyed.",
      "new": "  a user with non-Terraform-managed access keys and login profile will fail to be destroyed."
    }
  ],
  "website/docs/r/iam_user_login_profile.html.markdown": [
    {
      "old": "Manages an IAM User Login Profile with limited support for password creation during Terraform resource creation. Uses PGP to encrypt the password for safe transport to the user. PGP keys can be obtained from Keybase.",
      "new": "Manages an IAM User Login Profile with limited support for password creation during Terraform resource creation. Uses PGP to encrypt the password for safe transport to the user. PGP keys can be obtained from Keybase."
    },
    {
      "old": "-> To reset an IAM User login password via Terraform, you can use the `terraform taint` command or change any of the arguments.",
      "new": "-> To reset an IAM User login password via Terraform, you can use the `terraform taint` command or change any of the arguments."
    },
    {
      "old": "* `key_fingerprint` - The fingerprint of the PGP key used to encrypt the password. Only available if password was handled on Terraform resource creation, not import.",
      "new": "* `key_fingerprint` - The fingerprint of the PGP key used to encrypt the password. Only available if password was handled on Terraform resource creation, not import."
    },
    {
      "old": "* `encrypted_password` - The encrypted password, base64 encoded. Only available if password was handled on Terraform resource creation, not import.",
      "new": "* `encrypted_password` - The encrypted password, base64 encoded. Only available if password was handled on Terraform resource creation, not import."
    },
    {
      "old": "Since Terraform has no method to read the PGP or password information during import, use the Terraform resource `lifecycle` configuration block `ignore_changes` argument to ignore them unless password recreation is desiredE.g.,",
      "new": "Since Terraform has no method to read the PGP or password information during import, use the Terraform resource `lifecycle` configuration block `ignore_changes` argument to ignore them unless password recreation is desiredE.g.,"
    }
  ],
  "website/docs/r/iam_user_policy.html.markdown": [
    {
      "old": "  # Terraform's \"jsonencode\" function converts a",
      "new": "  # Terraform's \"jsonencode\" function converts a"
    },
    {
      "old": "  # Terraform expression result to valid JSON syntax.",
      "new": "  # Terraform expression result to valid JSON syntax."
    },
    {
      "old": "* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.",
      "new": "* `policy` - (Required) The policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide."
    },
    {
      "old": "* `name` - (Optional) The name of the policy. If omitted, Terraform will assign a random, unique name.",
      "new": "* `name` - (Optional) The name of the policy. If omitted, Terraform will assign a random, unique name."
    }
  ],
  "website/docs/r/identitystore_group.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS IdentityStore Group.",
      "new": "  Terraform resource for managing an AWS IdentityStore Group."
    },
    {
      "old": "Terraform resource for managing an AWS IdentityStore Group.",
      "new": "Terraform resource for managing an AWS IdentityStore Group."
    }
  ],
  "website/docs/r/identitystore_group_membership.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS IdentityStore Group Membership.",
      "new": "  Terraform resource for managing an AWS IdentityStore Group Membership."
    },
    {
      "old": "Terraform resource for managing an AWS IdentityStore Group Membership.",
      "new": "Terraform resource for managing an AWS IdentityStore Group Membership."
    }
  ],
  "website/docs/r/identitystore_user.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Identity Store User.",
      "new": "  Terraform resource for managing an AWS Identity Store User."
    }
  ],
  "website/docs/r/imagebuilder_component.html.markdown": [
    {
      "old": "* `data` - (Optional) Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. Terraform will only perform drift detection of its value when present in a configuration.",
      "new": "* `data` - (Optional) Inline YAML string with data of the component. Exactly one of `data` and `uri` can be specified. Terraform will only perform drift detection of its value when present in a configuration."
    },
    {
      "old": "Certain resource arguments, such as `uri`, cannot be read via the API and imported into Terraform. Terraform will display a difference for these arguments the first run after import if declared in the Terraform configuration for an imported resource.",
      "new": "Certain resource arguments, such as `uri`, cannot be read via the API and imported into Terraform. Terraform will display a difference for these arguments the first run after import if declared in the Terraform configuration for an imported resource."
    }
  ],
  "website/docs/r/inspector2_delegated_admin_account.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Inspector V2 Delegated Admin Account.",
      "new": "  Terraform resource for managing an AWS Inspector V2 Delegated Admin Account."
    },
    {
      "old": "Terraform resource for managing an AWS Inspector V2 Delegated Admin Account.",
      "new": "Terraform resource for managing an AWS Inspector V2 Delegated Admin Account."
    }
  ],
  "website/docs/r/inspector2_organization_configuration.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Inspector V2 Organization Configuration.",
      "new": "  Terraform resource for managing an AWS Inspector V2 Organization Configuration."
    },
    {
      "old": "Terraform resource for managing an AWS Inspector V2 Organization Configuration.",
      "new": "Terraform resource for managing an AWS Inspector V2 Organization Configuration."
    }
  ],
  "website/docs/r/instance.html.markdown": [
    {
      "old": "* `credit_specification` - (Optional) Configuration block for customizing the credit specification of the instance. See [Credit Specification](#credit-specification) below for more details. Terraform will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.",
      "new": "* `credit_specification` - (Optional) Configuration block for customizing the credit specification of the instance. See [Credit Specification](#credit-specification) below for more details. Terraform will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type."
    },
    {
      "old": "~> **NOTE:** Currently, changes to the `ebs_block_device` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes and attachments of an EBS block to an instance, use the `aws_ebs_volume` and `aws_volume_attachment` resources instead. If you use `ebs_block_device` on an `aws_instance`, Terraform will assume management over the full set of non-root EBS block devices for the instance, treating additional block devices as drift. For this reason, `ebs_block_device` cannot be mixed with external `aws_ebs_volume` and `aws_volume_attachment` resources for a given instance.",
      "new": "~> **NOTE:** Currently, changes to the `ebs_block_device` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes and attachments of an EBS block to an instance, use the `aws_ebs_volume` and `aws_volume_attachment` resources instead. If you use `ebs_block_device` on an `aws_instance`, Terraform will assume management over the full set of non-root EBS block devices for the instance, treating additional block devices as drift. For this reason, `ebs_block_device` cannot be mixed with external `aws_ebs_volume` and `aws_volume_attachment` resources for a given instance."
    }
  ],
  "website/docs/r/iot_policy.html.markdown": [
    {
      "old": "  # Terraform's \"jsonencode\" function converts a",
      "new": "  # Terraform's \"jsonencode\" function converts a"
    },
    {
      "old": "  # Terraform expression result to valid JSON syntax.",
      "new": "  # Terraform expression result to valid JSON syntax."
    },
    {
      "old": "* `policy` - (Required) The policy document. This is a JSON formatted string. Use the [IoT Developer Guide](http://docs.aws.amazon.com/iot/latest/developerguide/iot-policies.html) for more information on IoT Policies. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.",
      "new": "* `policy` - (Required) The policy document. This is a JSON formatted string. Use the [IoT Developer Guide](http://docs.aws.amazon.com/iot/latest/developerguide/iot-policies.html) for more information on IoT Policies. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide."
    }
  ],
  "website/docs/r/kendra_data_source.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Kendra Data Source.",
      "new": "  Terraform resource for managing an AWS Kendra Data Source."
    },
    {
      "old": "Terraform resource for managing an AWS Kendra Data Source.",
      "new": "Terraform resource for managing an AWS Kendra Data Source."
    }
  ],
  "website/docs/r/kendra_experience.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Kendra Experience.",
      "new": "  Terraform resource for managing an AWS Kendra Experience."
    },
    {
      "old": "Terraform resource for managing an AWS Kendra Experience.",
      "new": "Terraform resource for managing an AWS Kendra Experience."
    },
    {
      "old": "* `configuration` - (Optional) Configuration information for your Amazon Kendra experience. Terraform will only perform drift detection of its value when present in a configuration. [Detailed below](#configuration).",
      "new": "* `configuration` - (Optional) Configuration information for your Amazon Kendra experience. Terraform will only perform drift detection of its value when present in a configuration. [Detailed below](#configuration)."
    },
    {
      "old": "* `content_source_configuration` - (Optional, Required if `user_identity_configuration` not provided) The identifiers of your data sources and FAQs. Or, you can specify that you want to use documents indexed via the `BatchPutDocument API`. Terraform will only perform drift detection of its value when present in a configuration. [Detailed below](#content_source_configuration).",
      "new": "* `content_source_configuration` - (Optional, Required if `user_identity_configuration` not provided) The identifiers of your data sources and FAQs. Or, you can specify that you want to use documents indexed via the `BatchPutDocument API`. Terraform will only perform drift detection of its value when present in a configuration. [Detailed below](#content_source_configuration)."
    }
  ],
  "website/docs/r/kendra_faq.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Kendra FAQ.",
      "new": "  Terraform resource for managing an AWS Kendra FAQ."
    },
    {
      "old": "Terraform resource for managing an AWS Kendra FAQ.",
      "new": "Terraform resource for managing an AWS Kendra FAQ."
    }
  ],
  "website/docs/r/kendra_query_suggestions_block_list.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Kendra block list used for query suggestions for an index",
      "new": "  Terraform resource for managing an AWS Kendra block list used for query suggestions for an index"
    },
    {
      "old": "Terraform resource for managing an AWS Kendra block list used for query suggestions for an index.",
      "new": "Terraform resource for managing an AWS Kendra block list used for query suggestions for an index."
    }
  ],
  "website/docs/r/kendra_thesaurus.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Kendra Thesaurus.",
      "new": "  Terraform resource for managing an AWS Kendra Thesaurus."
    },
    {
      "old": "Terraform resource for managing an AWS Kendra Thesaurus.",
      "new": "Terraform resource for managing an AWS Kendra Thesaurus."
    }
  ],
  "website/docs/r/key_pair.html.markdown": [
    {
      "old": "* `key_name` - (Optional) The name for the key pair. If neither `key_name` nor `key_name_prefix` is provided, Terraform will create a unique key name using the prefix `terraform-`.",
      "new": "* `key_name` - (Optional) The name for the key pair. If neither `key_name` nor `key_name_prefix` is provided, Terraform will create a unique key name using the prefix `terraform-`."
    },
    {
      "old": "* `key_name_prefix` - (Optional) Creates a unique name beginning with the specified prefix. Conflicts with `key_name`. If neither `key_name` nor `key_name_prefix` is provided, Terraform will create a unique key name using the prefix `terraform-`.",
      "new": "* `key_name_prefix` - (Optional) Creates a unique name beginning with the specified prefix. Conflicts with `key_name`. If neither `key_name` nor `key_name_prefix` is provided, Terraform will create a unique key name using the prefix `terraform-`."
    }
  ],
  "website/docs/r/kms_custom_key_store.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS KMS (Key Management) Custom Key Store.",
      "new": "  Terraform resource for managing an AWS KMS (Key Management) Custom Key Store."
    },
    {
      "old": "Terraform resource for managing an AWS KMS (Key Management) Custom Key Store.",
      "new": "Terraform resource for managing an AWS KMS (Key Management) Custom Key Store."
    }
  ],
  "website/docs/r/kms_replica_external_key.html.markdown": [
    {
      "old": "For more information about building policy documents with Terraform, see the AWS IAM Policy Document Guide.",
      "new": "For more information about building policy documents with Terraform, see the AWS IAM Policy Document Guide."
    }
  ],
  "website/docs/r/kms_replica_key.html.markdown": [
    {
      "old": "For more information about building policy documents with Terraform, see the AWS IAM Policy Document Guide.",
      "new": "For more information about building policy documents with Terraform, see the AWS IAM Policy Document Guide."
    }
  ],
  "website/docs/r/lakeformation_permissions.html.markdown": [
    {
      "old": "~> **NOTE:** In general, the `principal` should _NOT_ be a Lake Formation administrator or the entity (e.g., IAM role) that is running Terraform. Administrators have implicit permissions. These should be managed by granting or not granting administrator rights using `aws_lakeformation_data_lake_settings`, _not_ with this resource.",
      "new": "~> **NOTE:** In general, the `principal` should _NOT_ be a Lake Formation administrator or the entity (e.g., IAM role) that is running Terraform. Administrators have implicit permissions. These should be managed by granting or not granting administrator rights using `aws_lakeformation_data_lake_settings`, _not_ with this resource."
    },
    {
      "old": "~> **NOTE:** We highly recommend that the `principal` _NOT_ be a Lake Formation administrator (granted using `aws_lakeformation_data_lake_settings`). The entity (e.g., IAM role) running Terraform will most likely need to be a Lake Formation administrator. As such, the entity will have implicit permissions and does not need permissions granted through this resource.",
      "new": "~> **NOTE:** We highly recommend that the `principal` _NOT_ be a Lake Formation administrator (granted using `aws_lakeformation_data_lake_settings`). The entity (e.g., IAM role) running Terraform will most likely need to be a Lake Formation administrator. As such, the entity will have implicit permissions and does not need permissions granted through this resource."
    },
    {
      "old": "* `wildcard` - (Required, at least one of `column_names` or `wildcard`) Whether to use a column wildcard. If `excluded_column_names` is included, `wildcard` must be set to `true` to avoid Terraform reporting a difference.",
      "new": "* `wildcard` - (Required, at least one of `column_names` or `wildcard`) Whether to use a column wildcard. If `excluded_column_names` is included, `wildcard` must be set to `true` to avoid Terraform reporting a difference."
    },
    {
      "old": "* `excluded_column_names` - (Optional) Set of column names for the table to exclude. If `excluded_column_names` is included, `wildcard` must be set to `true` to avoid Terraform reporting a difference.",
      "new": "* `excluded_column_names` - (Optional) Set of column names for the table to exclude. If `excluded_column_names` is included, `wildcard` must be set to `true` to avoid Terraform reporting a difference."
    }
  ],
  "website/docs/r/lakeformation_resource_lf_tags.html.markdown": [
    {
      "old": "* `wildcard` - (Required, at least one of `column_names` or `wildcard`) Whether to use a column wildcard. If `excluded_column_names` is included, `wildcard` must be set to `true` to avoid Terraform reporting a difference.",
      "new": "* `wildcard` - (Required, at least one of `column_names` or `wildcard`) Whether to use a column wildcard. If `excluded_column_names` is included, `wildcard` must be set to `true` to avoid Terraform reporting a difference."
    },
    {
      "old": "* `excluded_column_names` - (Optional) Set of column names for the table to exclude. If `excluded_column_names` is included, `wildcard` must be set to `true` to avoid Terraform reporting a difference.",
      "new": "* `excluded_column_names` - (Optional) Set of column names for the table to exclude. If `excluded_column_names` is included, `wildcard` must be set to `true` to avoid Terraform reporting a difference."
    }
  ],
  "website/docs/r/lambda_function.html.markdown": [
    {
      "old": "~> **NOTE:** Due to [AWS Lambda improved VPC networking changes that began deploying in September 2019](https://aws.amazon.com/blogs/compute/announcing-improved-vpc-networking-for-aws-lambda-functions/), EC2 subnets and security groups associated with Lambda Functions can take up to 45 minutes to successfully delete. Terraform AWS Provider version 2.31.0 and later automatically handles this increased timeout, however prior versions require setting the customizable deletion timeouts of those Terraform resources to 45 minutes (`delete = \"45m\"`). AWS and HashiCorp are working together to reduce the amount of time required for resource deletion and updates can be tracked in this [GitHub issue](https://github.com/hashicorp/terraform-provider-aws/issues/10329).",
      "new": "~> **NOTE:** Due to [AWS Lambda improved VPC networking changes that began deploying in September 2019](https://aws.amazon.com/blogs/compute/announcing-improved-vpc-networking-for-aws-lambda-functions/), EC2 subnets and security groups associated with Lambda Functions can take up to 45 minutes to successfully delete. Terraform AWS Provider version 2.31.0 and later automatically handles this increased timeout, however prior versions require setting the customizable deletion timeouts of those Terraform resources to 45 minutes (`delete = \"45m\"`). AWS and HashiCorp are working together to reduce the amount of time required for resource deletion and updates can be tracked in this [GitHub issue](https://github.com/hashicorp/terraform-provider-aws/issues/10329)."
    },
    {
      "old": "  # The filebase64sha256() function is available in Terraform 0.11.12 and later",
      "new": "  # The filebase64sha256() function is available in Terraform 0.11.12 and later"
    },
    {
      "old": "  # For Terraform 0.11.11 and earlier, use the base64sha256() function and the file() function:",
      "new": "  # For Terraform 0.11.11 and earlier, use the base64sha256() function and the file() function:"
    },
    {
      "old": "~> **NOTE:** The `aws_lambda_layer_version` attribute values for `arn` and `layer_arn` were swapped in version 2.0.0 of the Terraform AWS Provider. For version 1.x, use `layer_arn` references. For version 2.x, use `arn` references.",
      "new": "~> **NOTE:** The `aws_lambda_layer_version` attribute values for `arn` and `layer_arn` were swapped in version 2.0.0 of the Terraform AWS Provider. For version 1.x, use `layer_arn` references. For version 2.x, use `arn` references."
    },
    {
      "old": "* `kms_key_arn` - (Optional) Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key that is used to encrypt environment variables. If this configuration is not provided when environment variables are in use, AWS Lambda uses a default service key. If this configuration is provided when environment variables are not in use, the AWS Lambda API does not save this configuration and Terraform will show a perpetual difference of adding the key. To fix the perpetual difference, remove this configuration.",
      "new": "* `kms_key_arn` - (Optional) Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key that is used to encrypt environment variables. If this configuration is not provided when environment variables are in use, AWS Lambda uses a default service key. If this configuration is provided when environment variables are not in use, the AWS Lambda API does not save this configuration and Terraform will show a perpetual difference of adding the key. To fix the perpetual difference, remove this configuration."
    },
    {
      "old": "* `source_code_hash` - (Optional) Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3_key`. The usual way to set this is `filebase64sha256(\"file.zip\")` (Terraform 0.11.12 and later) or `base64sha256(file(\"file.zip\"))` (Terraform 0.11.11 and earlier), where \"file.zip\" is the local filename of the lambda function source archive.",
      "new": "* `source_code_hash` - (Optional) Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3_key`. The usual way to set this is `filebase64sha256(\"file.zip\")` (Terraform 0.11.12 and later) or `base64sha256(file(\"file.zip\"))` (Terraform 0.11.11 and earlier), where \"file.zip\" is the local filename of the lambda function source archive."
    }
  ],
  "website/docs/r/lambda_layer_version.html.markdown": [
    {
      "old": "~> **NOTE:** Setting `skip_destroy` to `true` means that the AWS Provider will _not_ destroy any layer version, even when running `terraform destroy`. Layer versions are thus intentional dangling resources that are _not_ managed by Terraform and may incur extra expense in your AWS account.",
      "new": "~> **NOTE:** Setting `skip_destroy` to `true` means that the AWS Provider will _not_ destroy any layer version, even when running `terraform destroy`. Layer versions are thus intentional dangling resources that are _not_ managed by Terraform and may incur extra expense in your AWS account."
    },
    {
      "old": "* `source_code_hash` - (Optional) Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3_key`. The usual way to set this is `${filebase64sha256(\"file.zip\")}` (Terraform 0.11.12 or later) or `${base64sha256(file(\"file.zip\"))}` (Terraform 0.11.11 and earlier), where \"file.zip\" is the local filename of the lambda layer source archive.",
      "new": "* `source_code_hash` - (Optional) Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3_key`. The usual way to set this is `${filebase64sha256(\"file.zip\")}` (Terraform 0.11.12 or later) or `${base64sha256(file(\"file.zip\"))}` (Terraform 0.11.11 and earlier), where \"file.zip\" is the local filename of the lambda layer source archive."
    }
  ],
  "website/docs/r/lambda_permission.html.markdown": [
    {
      "old": "  # Terraform's \"jsonencode\" function converts a",
      "new": "  # Terraform's \"jsonencode\" function converts a"
    },
    {
      "old": "  # Terraform expression result to valid JSON syntax.",
      "new": "  # Terraform expression result to valid JSON syntax."
    },
    {
      "old": "  # Terraform's \"jsonencode\" function converts a",
      "new": "  # Terraform's \"jsonencode\" function converts a"
    },
    {
      "old": "  # Terraform expression result to valid JSON syntax.",
      "new": "  # Terraform expression result to valid JSON syntax."
    },
    {
      "old": "* `statement_id` - (Optional) A unique statement identifier. By default generated by Terraform.",
      "new": "* `statement_id` - (Optional) A unique statement identifier. By default generated by Terraform."
    },
    {
      "old": "* `statement_id_prefix` - (Optional) A statement identifier prefix. Terraform will generate a unique suffix. Conflicts with `statement_id`.",
      "new": "* `statement_id_prefix` - (Optional) A statement identifier prefix. Terraform will generate a unique suffix. Conflicts with `statement_id`."
    }
  ],
  "website/docs/r/launch_configuration.html.markdown": [
    {
      "old": "Web Service API. In order to update a Launch Configuration, Terraform will",
      "new": "Web Service API. In order to update a Launch Configuration, Terraform will"
    },
    {
      "old": "With this setup Terraform generates a unique name for your Launch",
      "new": "With this setup Terraform generates a unique name for your Launch"
    },
    {
      "old": "for more information or how to launch [Spot Instances][3] with Terraform.",
      "new": "for more information or how to launch [Spot Instances][3] with Terraform."
    },
    {
      "old": "  this blank, Terraform will auto-generate a unique name. Conflicts with `name_prefix`.",
      "new": "  this blank, Terraform will auto-generate a unique name. Conflicts with `name_prefix`."
    },
    {
      "old": "cannot currently be detected by Terraform. After updating to block device",
      "new": "cannot currently be detected by Terraform. After updating to block device"
    }
  ],
  "website/docs/r/launch_template.html.markdown": [
    {
      "old": "* `name` - (Optional) The name of the launch template. If you leave this blank, Terraform will auto-generate a unique name.",
      "new": "* `name` - (Optional) The name of the launch template. If you leave this blank, Terraform will auto-generate a unique name."
    }
  ],
  "website/docs/r/lb.html.markdown": [
    {
      "old": "Terraform will autogenerate a name beginning with `tf-lb`.",
      "new": "Terraform will autogenerate a name beginning with `tf-lb`."
    },
    {
      "old": "   the AWS API. This will prevent Terraform from deleting the load balancer. Defaults to `false`.",
      "new": "   the AWS API. This will prevent Terraform from deleting the load balancer. Defaults to `false`."
    }
  ],
  "website/docs/r/lightsail_container_service_deployment_version.html.markdown": [
    {
      "old": "~> **NOTE:** This resource allows you to manage an Amazon Lightsail container service deployment version but Terraform cannot destroy it. Removing this resource from your configuration will remove it from your statefile and Terraform management.",
      "new": "~> **NOTE:** This resource allows you to manage an Amazon Lightsail container service deployment version but Terraform cannot destroy it. Removing this resource from your configuration will remove it from your statefile and Terraform management."
    }
  ],
  "website/docs/r/location_geofence_collection.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Location Geofence Collection.",
      "new": "  Terraform resource for managing an AWS Location Geofence Collection."
    },
    {
      "old": "Terraform resource for managing an AWS Location Geofence Collection.",
      "new": "Terraform resource for managing an AWS Location Geofence Collection."
    }
  ],
  "website/docs/r/location_tracker_association.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Location Tracker Association.",
      "new": "  Terraform resource for managing an AWS Location Tracker Association."
    },
    {
      "old": "Terraform resource for managing an AWS Location Tracker Association.",
      "new": "Terraform resource for managing an AWS Location Tracker Association."
    }
  ],
  "website/docs/r/macie2_classification_job.html.markdown": [
    {
      "old": "* `name` -  (Optional) A custom name for the job. The name can contain as many as 500 characters. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`.",
      "new": "* `name` -  (Optional) A custom name for the job. The name can contain as many as 500 characters. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`."
    }
  ],
  "website/docs/r/macie2_custom_data_identifier.html.markdown": [
    {
      "old": "* `name` - (Optional) A custom name for the custom data identifier. The name can contain as many as 128 characters. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`.",
      "new": "* `name` - (Optional) A custom name for the custom data identifier. The name can contain as many as 128 characters. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`."
    }
  ],
  "website/docs/r/macie2_findings_filter.html.markdown": [
    {
      "old": "* `name` - (Optional) A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`.",
      "new": "* `name` - (Optional) A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`."
    }
  ],
  "website/docs/r/main_route_table_association.html.markdown": [
    {
      "old": "For more information, see the Amazon VPC User Guide on [Route Tables](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html). For information about managing normal route tables in Terraform, see `aws_route_table`.",
      "new": "For more information, see the Amazon VPC User Guide on [Route Tables](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html). For information about managing normal route tables in Terraform, see `aws_route_table`."
    }
  ],
  "website/docs/r/medialive_input.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS MediaLive Input.",
      "new": "  Terraform resource for managing an AWS MediaLive Input."
    },
    {
      "old": "Terraform resource for managing an AWS MediaLive Input.",
      "new": "Terraform resource for managing an AWS MediaLive Input."
    }
  ],
  "website/docs/r/medialive_input_security_group.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS MediaLive InputSecurityGroup.",
      "new": "  Terraform resource for managing an AWS MediaLive InputSecurityGroup."
    },
    {
      "old": "Terraform resource for managing an AWS MediaLive InputSecurityGroup.",
      "new": "Terraform resource for managing an AWS MediaLive InputSecurityGroup."
    }
  ],
  "website/docs/r/medialive_multiplex.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS MediaLive Multiplex.",
      "new": "  Terraform resource for managing an AWS MediaLive Multiplex."
    },
    {
      "old": "Terraform resource for managing an AWS MediaLive Multiplex.",
      "new": "Terraform resource for managing an AWS MediaLive Multiplex."
    }
  ],
  "website/docs/r/medialive_multiplex_program.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS MediaLive MultiplexProgram.",
      "new": "  Terraform resource for managing an AWS MediaLive MultiplexProgram."
    },
    {
      "old": "Terraform resource for managing an AWS MediaLive MultiplexProgram.",
      "new": "Terraform resource for managing an AWS MediaLive MultiplexProgram."
    }
  ],
  "website/docs/r/memorydb_acl.html.markdown": [
    {
      "old": "* `name` - (Optional, Forces new resource) Name of the ACL. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`.",
      "new": "* `name` - (Optional, Forces new resource) Name of the ACL. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`."
    }
  ],
  "website/docs/r/memorydb_cluster.html.markdown": [
    {
      "old": "* `description` - (Optional) Description for the cluster. Defaults to `\"Managed by Terraform\"`.",
      "new": "* `description` - (Optional) Description for the cluster. Defaults to `\"Managed by Terraform\"`."
    },
    {
      "old": "* `name` - (Optional, Forces new resource) Name of the cluster. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`.",
      "new": "* `name` - (Optional, Forces new resource) Name of the cluster. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`."
    }
  ],
  "website/docs/r/memorydb_parameter_group.html.markdown": [
    {
      "old": "* `name` - (Optional, Forces new resource) Name of the parameter group. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`.",
      "new": "* `name` - (Optional, Forces new resource) Name of the parameter group. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`."
    },
    {
      "old": "* `description` - (Optional, Forces new resource) Description for the parameter group. Defaults to `\"Managed by Terraform\"`.",
      "new": "* `description` - (Optional, Forces new resource) Description for the parameter group. Defaults to `\"Managed by Terraform\"`."
    }
  ],
  "website/docs/r/memorydb_snapshot.html.markdown": [
    {
      "old": "* `name` - (Optional, Forces new resource) Name of the snapshot. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`.",
      "new": "* `name` - (Optional, Forces new resource) Name of the snapshot. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`."
    }
  ],
  "website/docs/r/memorydb_subnet_group.html.markdown": [
    {
      "old": "* `name` - (Optional, Forces new resource) Name of the subnet group. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`.",
      "new": "* `name` - (Optional, Forces new resource) Name of the subnet group. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`."
    },
    {
      "old": "* `description` - (Optional) Description for the subnet group. Defaults to `\"Managed by Terraform\"`.",
      "new": "* `description` - (Optional) Description for the subnet group. Defaults to `\"Managed by Terraform\"`."
    }
  ],
  "website/docs/r/msk_cluster.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Managed Streaming for Kafka cluster.",
      "new": "  Terraform resource for managing an AWS Managed Streaming for Kafka cluster."
    }
  ],
  "website/docs/r/msk_serverless_cluster.html.markdown": [
    {
      "old": "  Terraform resource for managing an Amazon MSK Serverless cluster.",
      "new": "  Terraform resource for managing an Amazon MSK Serverless cluster."
    }
  ],
  "website/docs/r/neptune_cluster.html.markdown": [
    {
      "old": "window. Because of this, Terraform may report a difference in its planning",
      "new": "window. Because of this, Terraform may report a difference in its planning"
    },
    {
      "old": "* `cluster_identifier` - (Optional, Forces new resources) The cluster identifier. If omitted, Terraform will assign a random, unique identifier.",
      "new": "* `cluster_identifier` - (Optional, Forces new resources) The cluster identifier. If omitted, Terraform will assign a random, unique identifier."
    }
  ],
  "website/docs/r/neptune_cluster_parameter_group.html.markdown": [
    {
      "old": "* `name` - (Optional, Forces new resource) The name of the neptune cluster parameter group. If omitted, Terraform will assign a random, unique name.",
      "new": "* `name` - (Optional, Forces new resource) The name of the neptune cluster parameter group. If omitted, Terraform will assign a random, unique name."
    },
    {
      "old": "* `description` - (Optional) The description of the neptune cluster parameter group. Defaults to \"Managed by Terraform\".",
      "new": "* `description` - (Optional) The description of the neptune cluster parameter group. Defaults to \"Managed by Terraform\"."
    }
  ],
  "website/docs/r/neptune_subnet_group.html.markdown": [
    {
      "old": "* `name` - (Optional, Forces new resource) The name of the neptune subnet group. If omitted, Terraform will assign a random, unique name.",
      "new": "* `name` - (Optional, Forces new resource) The name of the neptune subnet group. If omitted, Terraform will assign a random, unique name."
    },
    {
      "old": "* `description` - (Optional) The description of the neptune subnet group. Defaults to \"Managed by Terraform\".",
      "new": "* `description` - (Optional) The description of the neptune subnet group. Defaults to \"Managed by Terraform\"."
    }
  ],
  "website/docs/r/network_acl.html.markdown": [
    {
      "old": "~> **NOTE on Network ACLs and Network ACL Rules:** Terraform currently",
      "new": "~> **NOTE on Network ACLs and Network ACL Rules:** Terraform currently"
    },
    {
      "old": "~> **NOTE on Network ACLs and Network ACL Associations:** Terraform provides both a standalone network ACL association",
      "new": "~> **NOTE on Network ACLs and Network ACL Associations:** Terraform provides both a standalone network ACL association"
    }
  ],
  "website/docs/r/network_acl_association.html.markdown": [
    {
      "old": "~> **NOTE on Network ACLs and Network ACL Associations:** Terraform provides both a standalone network ACL association resource",
      "new": "~> **NOTE on Network ACLs and Network ACL Associations:** Terraform provides both a standalone network ACL association resource"
    }
  ],
  "website/docs/r/network_acl_rule.html.markdown": [
    {
      "old": "~> **NOTE on Network ACLs and Network ACL Rules:** Terraform currently",
      "new": "~> **NOTE on Network ACLs and Network ACL Rules:** Terraform currently"
    },
    {
      "old": "If importing a rule previously provisioned by Terraform, the `PROTOCOL` must be the input value used at creation time.",
      "new": "If importing a rule previously provisioned by Terraform, the `PROTOCOL` must be the input value used at creation time."
    }
  ],
  "website/docs/r/network_interface_sg_attachment.html.markdown": [
    {
      "old": "~> **NOTE on instances, interfaces, and security groups:** Terraform currently",
      "new": "~> **NOTE on instances, interfaces, and security groups:** Terraform currently"
    },
    {
      "old": "fetching an external instance, possibly not managed by Terraform.",
      "new": "fetching an external instance, possibly not managed by Terraform."
    }
  ],
  "website/docs/r/networkmanager_attachment_accepter.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS NetworkManager Attachment Accepter.",
      "new": "  Terraform resource for managing an AWS NetworkManager Attachment Accepter."
    },
    {
      "old": "Terraform resource for managing an AWS NetworkManager Attachment Accepter.",
      "new": "Terraform resource for managing an AWS NetworkManager Attachment Accepter."
    }
  ],
  "website/docs/r/networkmanager_vpc_attachment.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS NetworkManager VpcAttachment.",
      "new": "  Terraform resource for managing an AWS NetworkManager VpcAttachment."
    },
    {
      "old": "Terraform resource for managing an AWS NetworkManager VpcAttachment.",
      "new": "Terraform resource for managing an AWS NetworkManager VpcAttachment."
    }
  ],
  "website/docs/r/opensearch_domain.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS OpenSearch Domain.",
      "new": "  Terraform resource for managing an AWS OpenSearch Domain."
    },
    {
      "old": "  description = \"Managed by Terraform\"",
      "new": "  description = \"Managed by Terraform\""
    },
    {
      "old": "* `advanced_options` - (Optional) Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing Terraform to want to recreate your OpenSearch domain on every apply.",
      "new": "* `advanced_options` - (Optional) Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing Terraform to want to recreate your OpenSearch domain on every apply."
    },
    {
      "old": "* `tls_security_policy` - (Optional) Name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values:  `Policy-Min-TLS-1-0-2019-07` and `Policy-Min-TLS-1-2-2019-07`. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `tls_security_policy` - (Optional) Name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values:  `Policy-Min-TLS-1-0-2019-07` and `Policy-Min-TLS-1-2-2019-07`. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "~> **Note:** You can enable `encrypt_at_rest` _in place_ for an existing, unencrypted domain only if you are using OpenSearch or your Elasticsearch version is 6.7 or greater. For other versions, if you enable `encrypt_at_rest`, Terraform with recreate the domain, potentially causing data loss. For any version, if you disable `encrypt_at_rest` for an existing, encrypted domain, Terraform will recreate the domain, potentially causing data loss. If you change the `kms_key_id`, Terraform will also recreate the domain, potentially causing data loss.",
      "new": "~> **Note:** You can enable `encrypt_at_rest` _in place_ for an existing, unencrypted domain only if you are using OpenSearch or your Elasticsearch version is 6.7 or greater. For other versions, if you enable `encrypt_at_rest`, Terraform with recreate the domain, potentially causing data loss. For any version, if you disable `encrypt_at_rest` for an existing, encrypted domain, Terraform will recreate the domain, potentially causing data loss. If you change the `kms_key_id`, Terraform will also recreate the domain, potentially causing data loss."
    },
    {
      "old": "* `kms_key_id` - (Optional) KMS key ARN to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key. Note that KMS will accept a KMS key ID but will return the key ARN. To prevent Terraform detecting unwanted changes, use the key ARN instead.",
      "new": "* `kms_key_id` - (Optional) KMS key ARN to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key. Note that KMS will accept a KMS key ID but will return the key ARN. To prevent Terraform detecting unwanted changes, use the key ARN instead."
    },
    {
      "old": "~> **Note:** You can enable `node_to_node_encryption` _in place_ for an existing, unencrypted domain only if you are using OpenSearch or your Elasticsearch version is 6.7 or greater. For other versions, if you enable `node_to_node_encryption`, Terraform will recreate the domain, potentially causing data loss. For any version, if you disable `node_to_node_encryption` for an existing, node-to-node encrypted domain, Terraform will recreate the domain, potentially causing data loss.",
      "new": "~> **Note:** You can enable `node_to_node_encryption` _in place_ for an existing, unencrypted domain only if you are using OpenSearch or your Elasticsearch version is 6.7 or greater. For other versions, if you enable `node_to_node_encryption`, Terraform will recreate the domain, potentially causing data loss. For any version, if you disable `node_to_node_encryption` for an existing, node-to-node encrypted domain, Terraform will recreate the domain, potentially causing data loss."
    }
  ],
  "website/docs/r/opensearch_domain_saml_options.html.markdown": [
    {
      "old": "  Terraform resource for managing SAML authentication options for an AWS OpenSearch Domain.",
      "new": "  Terraform resource for managing SAML authentication options for an AWS OpenSearch Domain."
    }
  ],
  "website/docs/r/opsworks_application.html.markdown": [
    {
      "old": "* `password` - (Optional) Password to use when authenticating to the source. Terraform cannot perform drift detection of this configuration.",
      "new": "* `password` - (Optional) Password to use when authenticating to the source. Terraform cannot perform drift detection of this configuration."
    },
    {
      "old": "* `ssh_key` - (Optional) SSH key to use when authenticating to the source. Terraform cannot perform drift detection of this configuration.",
      "new": "* `ssh_key` - (Optional) SSH key to use when authenticating to the source. Terraform cannot perform drift detection of this configuration."
    }
  ],
  "website/docs/r/opsworks_stack.html.markdown": [
    {
      "old": "* `password` - (Optional) Password to use when authenticating to the source. Terraform cannot perform drift detection of this configuration.",
      "new": "* `password` - (Optional) Password to use when authenticating to the source. Terraform cannot perform drift detection of this configuration."
    },
    {
      "old": "* `ssh_key` - (Optional) SSH key to use when authenticating to the source. Terraform cannot perform drift detection of this configuration.",
      "new": "* `ssh_key` - (Optional) SSH key to use when authenticating to the source. Terraform cannot perform drift detection of this configuration."
    }
  ],
  "website/docs/r/organizations_account.html.markdown": [
    {
      "old": "~> **Note:** By default, deleting this Terraform resource will only remove an AWS account from an organization. You must set the `close_on_deletion` flag to true to close the account. It is worth noting that quotas are enforced when using the `close_on_deletion` argument, which can produce a [CLOSE_ACCOUNT_QUOTA_EXCEEDED](https://docs.aws.amazon.com/organizations/latest/APIReference/API_CloseAccount.html) error, and require you to close the account manually.",
      "new": "~> **Note:** By default, deleting this Terraform resource will only remove an AWS account from an organization. You must set the `close_on_deletion` flag to true to close the account. It is worth noting that quotas are enforced when using the `close_on_deletion` argument, which can produce a [CLOSE_ACCOUNT_QUOTA_EXCEEDED](https://docs.aws.amazon.com/organizations/latest/APIReference/API_CloseAccount.html) error, and require you to close the account manually."
    },
    {
      "old": "* `create_govcloud` - (Optional) Whether to also create a GovCloud account. The GovCloud account is tied to the main (commercial) account this resource creates. If `true`, the GovCloud account ID is available in the `govcloud_id` attribute. The only way to manage the GovCloud account with Terraform is to subsequently import the account using this resource.",
      "new": "* `create_govcloud` - (Optional) Whether to also create a GovCloud account. The GovCloud account is tied to the main (commercial) account this resource creates. If `true`, the GovCloud account ID is available in the `govcloud_id` attribute. The only way to manage the GovCloud account with Terraform is to subsequently import the account using this resource."
    },
    {
      "old": "* `role_name` - (Optional) The name of an IAM role that Organizations automatically preconfigures in the new member account. This role trusts the root account, allowing users in the root account to assume the role, as permitted by the root account administrator. The role has administrator permissions in the new member account. The Organizations API provides no method for reading this information after account creation, so Terraform cannot perform drift detection on its value and will always show a difference for a configured value after import unless `ignore_changes` is used.",
      "new": "* `role_name` - (Optional) The name of an IAM role that Organizations automatically preconfigures in the new member account. This role trusts the root account, allowing users in the root account to assume the role, as permitted by the root account administrator. The role has administrator permissions in the new member account. The Organizations API provides no method for reading this information after account creation, so Terraform cannot perform drift detection on its value and will always show a difference for a configured value after import unless `ignore_changes` is used."
    },
    {
      "old": "Certain resource arguments, like `role_name`, do not have an Organizations API method for reading the information after account creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,",
      "new": "Certain resource arguments, like `role_name`, do not have an Organizations API method for reading the information after account creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,"
    }
  ],
  "website/docs/r/qldb_ledger.html.markdown": [
    {
      "old": "~> **NOTE:** Deletion protection is enabled by default. To successfully delete this resource via Terraform, `deletion_protection = false` must be applied before attempting deletion.",
      "new": "~> **NOTE:** Deletion protection is enabled by default. To successfully delete this resource via Terraform, `deletion_protection = false` must be applied before attempting deletion."
    },
    {
      "old": "* `deletion_protection` - (Optional) The deletion protection for the QLDB Ledger instance. By default it is `true`. To delete this resource via Terraform, this value must be configured to `false` and applied first before attempting deletion.",
      "new": "* `deletion_protection` - (Optional) The deletion protection for the QLDB Ledger instance. By default it is `true`. To delete this resource via Terraform, this value must be configured to `false` and applied first before attempting deletion."
    },
    {
      "old": "* `name` - (Optional) The friendly name for the QLDB Ledger instance. By default generated by Terraform.",
      "new": "* `name` - (Optional) The friendly name for the QLDB Ledger instance. By default generated by Terraform."
    }
  ],
  "website/docs/r/rds_cluster.html.markdown": [
    {
      "old": "window. Because of this, Terraform may report a difference in its planning",
      "new": "window. Because of this, Terraform may report a difference in its planning"
    },
    {
      "old": "~> **NOTE on RDS Clusters and RDS Cluster Role Associations:** Terraform provides both a standalone RDS Cluster Role Association - (an association between an RDS Cluster and a single IAM Role) and",
      "new": "~> **NOTE on RDS Clusters and RDS Cluster Role Associations:** Terraform provides both a standalone RDS Cluster Role Association - (an association between an RDS Cluster and a single IAM Role) and"
    },
    {
      "old": "* `availability_zones` - (Optional) List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next Terraform apply. We recommend specifying 3 AZs or using the `lifecycle` configuration block `ignore_changes` argument if necessary.",
      "new": "* `availability_zones` - (Optional) List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next Terraform apply. We recommend specifying 3 AZs or using the `lifecycle` configuration block `ignore_changes` argument if necessary."
    },
    {
      "old": "* `cluster_identifier` - (Optional, Forces new resources) The cluster identifier. If omitted, Terraform will assign a random, unique identifier.",
      "new": "* `cluster_identifier` - (Optional, Forces new resources) The cluster identifier. If omitted, Terraform will assign a random, unique identifier."
    },
    {
      "old": "* `replication_source_identifier` - (Optional) ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use the `lifecycle` configuration block `ignore_changes` argument to prevent Terraform from showing differences for this argument instead of configuring this value.",
      "new": "* `replication_source_identifier` - (Optional) ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use the `lifecycle` configuration block `ignore_changes` argument to prevent Terraform from showing differences for this argument instead of configuring this value."
    },
    {
      "old": "* `storage_encrypted` - (Optional) Specifies whether the DB cluster is encrypted. The default is `false` for `provisioned` `engine_mode` and `true` for `serverless` `engine_mode`. When restoring an unencrypted `snapshot_identifier`, the `kms_key_id` argument must be provided to encrypt the restored cluster. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `storage_encrypted` - (Optional) Specifies whether the DB cluster is encrypted. The default is `false` for `provisioned` `engine_mode` and `true` for `serverless` `engine_mode`. When restoring an unencrypted `snapshot_identifier`, the `kms_key_id` argument must be provided to encrypt the restored cluster. Terraform will only perform drift detection if a configuration value is provided."
    }
  ],
  "website/docs/r/rds_cluster_activity_stream.html.markdown": [
    {
      "old": "~> **Note:** This resource always calls the RDS [`StartActivityStream`][2] API with the `ApplyImmediately` parameter set to `true`. This is because the Terraform needs the activity stream to be started in order for it to get the associated attributes.",
      "new": "~> **Note:** This resource always calls the RDS [`StartActivityStream`][2] API with the `ApplyImmediately` parameter set to `true`. This is because the Terraform needs the activity stream to be started in order for it to get the associated attributes."
    }
  ],
  "website/docs/r/rds_cluster_instance.html.markdown": [
    {
      "old": "~> **NOTE:** Deletion Protection from the RDS service can only be enabled at the cluster level, not for individual cluster instances. You can still add the `prevent_destroy` lifecycle behavior to your Terraform resource configuration if you desire protection from accidental deletion.",
      "new": "~> **NOTE:** Deletion Protection from the RDS service can only be enabled at the cluster level, not for individual cluster instances. You can still add the `prevent_destroy` lifecycle behavior to your Terraform resource configuration if you desire protection from accidental deletion."
    },
    {
      "old": "* `identifier` - (Optional, Forces new resource) The identifier for the RDS instance, if omitted, Terraform will assign a random, unique identifier.",
      "new": "* `identifier` - (Optional, Forces new resource) The identifier for the RDS instance, if omitted, Terraform will assign a random, unique identifier."
    }
  ],
  "website/docs/r/rds_cluster_parameter_group.markdown": [
    {
      "old": "* `name` - (Optional, Forces new resource) The name of the DB cluster parameter group. If omitted, Terraform will assign a random, unique name.",
      "new": "* `name` - (Optional, Forces new resource) The name of the DB cluster parameter group. If omitted, Terraform will assign a random, unique name."
    },
    {
      "old": "* `description` - (Optional) The description of the DB cluster parameter group. Defaults to \"Managed by Terraform\".",
      "new": "* `description` - (Optional) The description of the DB cluster parameter group. Defaults to \"Managed by Terraform\"."
    }
  ],
  "website/docs/r/rds_global_cluster.html.markdown": [
    {
      "old": "  # Terraform will begin showing it as a difference. Do not configure:",
      "new": "  # Terraform will begin showing it as a difference. Do not configure:"
    },
    {
      "old": "When you upgrade the version of an `aws_rds_global_cluster`, Terraform will attempt to in-place upgrade the engine versions of all associated clusters. Since the `aws_rds_cluster` resource is being updated through the `aws_rds_global_cluster`, you are likely to get an error (`Provider produced inconsistent final plan`). To avoid this, use the `lifecycle` `ignore_changes` meta argument as shown below on the `aws_rds_cluster`.",
      "new": "When you upgrade the version of an `aws_rds_global_cluster`, Terraform will attempt to in-place upgrade the engine versions of all associated clusters. Since the `aws_rds_cluster` resource is being updated through the `aws_rds_global_cluster`, you are likely to get an error (`Provider produced inconsistent final plan`). To avoid this, use the `lifecycle` `ignore_changes` meta argument as shown below on the `aws_rds_cluster`."
    },
    {
      "old": "* `engine` - (Optional, Forces new resources) Name of the database engine to be used for this DB cluster. Terraform will only perform drift detection if a configuration value is provided. Valid values: `aurora`, `aurora-mysql`, `aurora-postgresql`. Defaults to `aurora`. Conflicts with `source_db_cluster_identifier`.",
      "new": "* `engine` - (Optional, Forces new resources) Name of the database engine to be used for this DB cluster. Terraform will only perform drift detection if a configuration value is provided. Valid values: `aurora`, `aurora-mysql`, `aurora-postgresql`. Defaults to `aurora`. Conflicts with `source_db_cluster_identifier`."
    },
    {
      "old": "* `engine_version` - (Optional) Engine version of the Aurora global database. The `engine`, `engine_version`, and `instance_class` (on the `aws_rds_cluster_instance`) must together support global databases. See [Using Amazon Aurora global databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html) for more information. By upgrading the engine version, Terraform will upgrade cluster members. **NOTE:** To avoid an `inconsistent final plan` error while upgrading, use the `lifecycle` `ignore_changes` for `engine_version` meta argument on the associated `aws_rds_cluster` resource as shown above in [Upgrading Engine Versions](#upgrading-engine-versions) example.",
      "new": "* `engine_version` - (Optional) Engine version of the Aurora global database. The `engine`, `engine_version`, and `instance_class` (on the `aws_rds_cluster_instance`) must together support global databases. See [Using Amazon Aurora global databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html) for more information. By upgrading the engine version, Terraform will upgrade cluster members. **NOTE:** To avoid an `inconsistent final plan` error while upgrading, use the `lifecycle` `ignore_changes` for `engine_version` meta argument on the associated `aws_rds_cluster` resource as shown above in [Upgrading Engine Versions](#upgrading-engine-versions) example."
    },
    {
      "old": "* `source_db_cluster_identifier` - (Optional) Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. Terraform cannot perform drift detection of this value.",
      "new": "* `source_db_cluster_identifier` - (Optional) Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. Terraform cannot perform drift detection of this value."
    },
    {
      "old": "* `storage_encrypted` - (Optional, Forces new resources) Specifies whether the DB cluster is encrypted. The default is `false` unless `source_db_cluster_identifier` is specified and encrypted. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `storage_encrypted` - (Optional, Forces new resources) Specifies whether the DB cluster is encrypted. The default is `false` unless `source_db_cluster_identifier` is specified and encrypted. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "Certain resource arguments, like `force_destroy`, only exist within Terraform. If the argument is set in the Terraform configuration on an imported resource, Terraform will show a difference on the first plan after import to update the state value. This change is safe to apply immediately so the state matches the desired configuration.",
      "new": "Certain resource arguments, like `force_destroy`, only exist within Terraform. If the argument is set in the Terraform configuration on an imported resource, Terraform will show a difference on the first plan after import to update the state value. This change is safe to apply immediately so the state matches the desired configuration."
    },
    {
      "old": "Certain resource arguments, like `source_db_cluster_identifier`, do not have an API method for reading the information after creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,",
      "new": "Certain resource arguments, like `source_db_cluster_identifier`, do not have an API method for reading the information after creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,"
    }
  ],
  "website/docs/r/redshift_parameter_group.html.markdown": [
    {
      "old": "* `description` - (Optional) The description of the Redshift parameter group. Defaults to \"Managed by Terraform\".",
      "new": "* `description` - (Optional) The description of the Redshift parameter group. Defaults to \"Managed by Terraform\"."
    }
  ],
  "website/docs/r/redshift_security_group.html.markdown": [
    {
      "old": "!> **WARNING:** With the retirement of EC2-Classic the `aws_redshift_security_group` resource has been deprecated and will be removed in a future version. Any existing resources can be removed from Terraform state using the `terraform state rm` command.",
      "new": "!> **WARNING:** With the retirement of EC2-Classic the `aws_redshift_security_group` resource has been deprecated and will be removed in a future version. Any existing resources can be removed from Terraform state using the `terraform state rm` command."
    },
    {
      "old": "* `description` - (Optional) The description of the Redshift security group. Defaults to \"Managed by Terraform\".",
      "new": "* `description` - (Optional) The description of the Redshift security group. Defaults to \"Managed by Terraform\"."
    }
  ],
  "website/docs/r/rolesanywhere_profile.html.markdown": [
    {
      "old": "Terraform resource for managing a Roles Anywhere Profile.",
      "new": "Terraform resource for managing a Roles Anywhere Profile."
    }
  ],
  "website/docs/r/rolesanywhere_trust_anchor.html.markdown": [
    {
      "old": "Terraform resource for managing a Roles Anywhere Trust Anchor.",
      "new": "Terraform resource for managing a Roles Anywhere Trust Anchor."
    }
  ],
  "website/docs/r/route.html.markdown": [
    {
      "old": "~> **NOTE on Route Tables and Routes:** Terraform currently provides both a standalone Route resource and a Route Table resource with routes defined in-line. At this time you cannot use a Route Table with in-line routes in conjunction with any Route resources. Doing so will cause a conflict of rule settings and will overwrite rules.",
      "new": "~> **NOTE on Route Tables and Routes:** Terraform currently provides both a standalone Route resource and a Route Table resource with routes defined in-line. At this time you cannot use a Route Table with in-line routes in conjunction with any Route resources. Doing so will cause a conflict of rule settings and will overwrite rules."
    },
    {
      "old": "~> **NOTE on `gateway_id` attribute:** The AWS API is very forgiving with the resource ID passed in the `gateway_id` attribute. For example an `aws_route` resource can be created with an `aws_nat_gateway` or `aws_egress_only_internet_gateway` ID specified for the `gateway_id` attribute. Specifying anything other than an `aws_internet_gateway` or `aws_vpn_gateway` ID will lead to Terraform reporting a permanent diff between your configuration and recorded state, as the AWS API returns the more-specific attribute. If you are experiencing constant diffs with an `aws_route` resource, the first thing to check is that the correct attribute is being specified.",
      "new": "~> **NOTE on `gateway_id` attribute:** The AWS API is very forgiving with the resource ID passed in the `gateway_id` attribute. For example an `aws_route` resource can be created with an `aws_nat_gateway` or `aws_egress_only_internet_gateway` ID specified for the `gateway_id` attribute. Specifying anything other than an `aws_internet_gateway` or `aws_vpn_gateway` ID will lead to Terraform reporting a permanent diff between your configuration and recorded state, as the AWS API returns the more-specific attribute. If you are experiencing constant diffs with an `aws_route` resource, the first thing to check is that the correct attribute is being specified."
    }
  ],
  "website/docs/r/route53_record.html.markdown": [
    {
      "old": "When creating Route 53 zones, the `NS` and `SOA` records for the zone are automatically created. Enabling the `allow_overwrite` argument will allow managing these records in a single Terraform run without the requirement for `terraform import`.",
      "new": "When creating Route 53 zones, the `NS` and `SOA` records for the zone are automatically created. Enabling the `allow_overwrite` argument will allow managing these records in a single Terraform run without the requirement for `terraform import`."
    },
    {
      "old": "* `records` - (Required for non-alias records) A string list of records. To specify a single record value longer than 255 characters such as a TXT record for DKIM, add `\\\"\\\"` inside the Terraform configuration string (e.g., `\"first255characters\\\"\\\"morecharacters\"`).",
      "new": "* `records` - (Required for non-alias records) A string list of records. To specify a single record value longer than 255 characters such as a TXT record for DKIM, add `\\\"\\\"` inside the Terraform configuration string (e.g., `\"first255characters\\\"\\\"morecharacters\"`)."
    },
    {
      "old": "* `allow_overwrite` - (Optional) Allow creation of this record in Terraform to overwrite an existing record, if any. This does not affect the ability to update the record in Terraform and does not prevent other resources within Terraform or manual Route 53 changes outside Terraform from overwriting this record. `false` by default. This configuration is not recommended for most environments.",
      "new": "* `allow_overwrite` - (Optional) Allow creation of this record in Terraform to overwrite an existing record, if any. This does not affect the ability to update the record in Terraform and does not prevent other resources within Terraform or manual Route 53 changes outside Terraform from overwriting this record. `false` by default. This configuration is not recommended for most environments."
    }
  ],
  "website/docs/r/route53_zone.html.markdown": [
    {
      "old": "~> **NOTE:** Terraform provides both exclusive VPC associations defined in-line in this resource via `vpc` configuration blocks and a separate Zone VPC Association resource. At this time, you cannot use in-line VPC associations in conjunction with any `aws_route53_zone_association` resources with the same zone ID otherwise it will cause a perpetual difference in plan output. You can optionally use the generic Terraform resource lifecycle configuration block with `ignore_changes` to manage additional associations via the `aws_route53_zone_association` resource.",
      "new": "~> **NOTE:** Terraform provides both exclusive VPC associations defined in-line in this resource via `vpc` configuration blocks and a separate Zone VPC Association resource. At this time, you cannot use in-line VPC associations in conjunction with any `aws_route53_zone_association` resources with the same zone ID otherwise it will cause a perpetual difference in plan output. You can optionally use the generic Terraform resource lifecycle configuration block with `ignore_changes` to manage additional associations via the `aws_route53_zone_association` resource."
    },
    {
      "old": "* `comment` - (Optional) A comment for the hosted zone. Defaults to 'Managed by Terraform'.",
      "new": "* `comment` - (Optional) A comment for the hosted zone. Defaults to 'Managed by Terraform'."
    },
    {
      "old": "* `force_destroy` - (Optional) Whether to destroy all records (possibly managed outside of Terraform) in the zone when destroying the zone.",
      "new": "* `force_destroy` - (Optional) Whether to destroy all records (possibly managed outside of Terraform) in the zone when destroying the zone."
    }
  ],
  "website/docs/r/route53_zone_association.html.markdown": [
    {
      "old": "~> **NOTE:** Terraform provides both this standalone Zone VPC Association resource and exclusive VPC associations defined in-line in the `aws_route53_zone` resource via `vpc` configuration blocks. At this time, you cannot use those in-line VPC associations in conjunction with this resource and the same zone ID otherwise it will cause a perpetual difference in plan output. You can optionally use the generic Terraform resource lifecycle configuration block with `ignore_changes` in the `aws_route53_zone` resource to manage additional associations via this resource.",
      "new": "~> **NOTE:** Terraform provides both this standalone Zone VPC Association resource and exclusive VPC associations defined in-line in the `aws_route53_zone` resource via `vpc` configuration blocks. At this time, you cannot use those in-line VPC associations in conjunction with this resource and the same zone ID otherwise it will cause a perpetual difference in plan output. You can optionally use the generic Terraform resource lifecycle configuration block with `ignore_changes` in the `aws_route53_zone` resource to manage additional associations via this resource."
    },
    {
      "old": "If the VPC is in a different region than the Terraform AWS Provider region configuration, the VPC Region can be added to the endE.g.,",
      "new": "If the VPC is in a different region than the Terraform AWS Provider region configuration, the VPC Region can be added to the endE.g.,"
    }
  ],
  "website/docs/r/route53domains_registered_domain.html.markdown": [
    {
      "old": "The `aws_route53domains_registered_domain` resource behaves differently from normal resources in that if a domain has been registered, Terraform does not _register_ this domain, but instead \"adopts\" it into management. `terraform destroy` does not delete the domain but does remove the resource from Terraform state.",
      "new": "The `aws_route53domains_registered_domain` resource behaves differently from normal resources in that if a domain has been registered, Terraform does not _register_ this domain, but instead \"adopts\" it into management. `terraform destroy` does not delete the domain but does remove the resource from Terraform state."
    }
  ],
  "website/docs/r/s3_access_point.html.markdown": [
    {
      "old": "~> **NOTE on Access Points and Access Point Policies:** Terraform provides both a standalone Access Point Policy resource and an Access Point resource with a resource policy defined in-line. You cannot use an Access Point with in-line resource policy in conjunction with an Access Point Policy resource. Doing so will cause a conflict of policies and will overwrite the access point's resource policy.",
      "new": "~> **NOTE on Access Points and Access Point Policies:** Terraform provides both a standalone Access Point Policy resource and an Access Point resource with a resource policy defined in-line. You cannot use an Access Point with in-line resource policy in conjunction with an Access Point Policy resource. Doing so will cause a conflict of policies and will overwrite the access point's resource policy."
    },
    {
      "old": "-> Advanced usage: To use a custom API endpoint for this Terraform resource, use the `s3control` endpoint provider configuration, not the `s3` endpoint provider configuration.",
      "new": "-> Advanced usage: To use a custom API endpoint for this Terraform resource, use the `s3control` endpoint provider configuration, not the `s3` endpoint provider configuration."
    },
    {
      "old": "* `account_id` - (Optional) AWS account ID for the owner of the bucket for which you want to create an access point. Defaults to automatically determined account ID of the Terraform AWS provider.",
      "new": "* `account_id` - (Optional) AWS account ID for the owner of the bucket for which you want to create an access point. Defaults to automatically determined account ID of the Terraform AWS provider."
    }
  ],
  "website/docs/r/s3_account_public_access_block.html.markdown": [
    {
      "old": "-> Advanced usage: To use a custom API endpoint for this Terraform resource, use the `s3control` endpoint provider configuration, not the `s3` endpoint provider configuration.",
      "new": "-> Advanced usage: To use a custom API endpoint for this Terraform resource, use the `s3control` endpoint provider configuration, not the `s3` endpoint provider configuration."
    },
    {
      "old": "* `account_id` - (Optional) AWS account ID to configure. Defaults to automatically determined account ID of the Terraform AWS provider.",
      "new": "* `account_id` - (Optional) AWS account ID to configure. Defaults to automatically determined account ID of the Terraform AWS provider."
    }
  ],
  "website/docs/r/s3_bucket.html.markdown": [
    {
      "old": "* `bucket` - (Optional, Forces new resource) The name of the bucket. If omitted, Terraform will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).",
      "new": "* `bucket` - (Optional, Forces new resource) The name of the bucket. If omitted, Terraform will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html)."
    },
    {
      "old": "* `acceleration_status` - (Optional, **Deprecated**) Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`. Cannot be used in `cn-north-1` or `us-gov-west-1`. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `acceleration_status` - (Optional, **Deprecated**) Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`. Cannot be used in `cn-north-1` or `us-gov-west-1`. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "* `acl` - (Optional, **Deprecated**) The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`. Terraform will only perform drift detection if a configuration value is provided. Use the resource `aws_s3_bucket_acl` instead.",
      "new": "* `acl` - (Optional, **Deprecated**) The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`. Terraform will only perform drift detection if a configuration value is provided. Use the resource `aws_s3_bucket_acl` instead."
    },
    {
      "old": "* `grant` - (Optional, **Deprecated**) An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl). See [Grant](#grant) below for details. Conflicts with `acl`. Terraform will only perform drift detection if a configuration value is provided. Use the resource `aws_s3_bucket_acl` instead.",
      "new": "* `grant` - (Optional, **Deprecated**) An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl). See [Grant](#grant) below for details. Conflicts with `acl`. Terraform will only perform drift detection if a configuration value is provided. Use the resource `aws_s3_bucket_acl` instead."
    },
    {
      "old": "* `cors_rule` - (Optional, **Deprecated**) A rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html). See [CORS rule](#cors-rule) below for details. Terraform will only perform drift detection if a configuration value is provided. Use the resource `aws_s3_bucket_cors_configuration` instead.",
      "new": "* `cors_rule` - (Optional, **Deprecated**) A rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html). See [CORS rule](#cors-rule) below for details. Terraform will only perform drift detection if a configuration value is provided. Use the resource `aws_s3_bucket_cors_configuration` instead."
    },
    {
      "old": "* `lifecycle_rule` - (Optional, **Deprecated**) A configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html). See [Lifecycle Rule](#lifecycle-rule) below for details. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `lifecycle_rule` - (Optional, **Deprecated**) A configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html). See [Lifecycle Rule](#lifecycle-rule) below for details. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "* `logging` - (Optional, **Deprecated**) A configuration of [S3 bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) parameters. See [Logging](#logging) below for details. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `logging` - (Optional, **Deprecated**) A configuration of [S3 bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) parameters. See [Logging](#logging) below for details. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "  Terraform wil only perform drift detection if a configuration value is provided.",
      "new": "  Terraform wil only perform drift detection if a configuration value is provided."
    },
    {
      "old": "* `policy` - (Optional, **Deprecated**) A valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), Terraform may view the policy as constantly changing in a `terraform plan`. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.",
      "new": "* `policy` - (Optional, **Deprecated**) A valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), Terraform may view the policy as constantly changing in a `terraform plan`. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide."
    },
    {
      "old": "  Terraform will only perform drift detection if a configuration value is provided.",
      "new": "  Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "* `replication_configuration` - (Optional, **Deprecated**) A configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html). See [Replication Configuration](#replication-configuration) below for details. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `replication_configuration` - (Optional, **Deprecated**) A configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html). See [Replication Configuration](#replication-configuration) below for details. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "  Terraform will only perform drift detection if a configuration value is provided.",
      "new": "  Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "  Terraform will only perform drift detection if a configuration value is provided.",
      "new": "  Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "* `versioning` - (Optional, **Deprecated**) A configuration of the [S3 bucket versioning state](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html). See [Versioning](#versioning) below for details. Terraform will only perform drift detection if a configuration value is provided. Use the resource `aws_s3_bucket_versioning` instead.",
      "new": "* `versioning` - (Optional, **Deprecated**) A configuration of the [S3 bucket versioning state](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html). See [Versioning](#versioning) below for details. Terraform will only perform drift detection if a configuration value is provided. Use the resource `aws_s3_bucket_versioning` instead."
    },
    {
      "old": "* `website` - (Optional, **Deprecated**) A configuration of the [S3 bucket website](https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html). See [Website](#website) below for details. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `website` - (Optional, **Deprecated**) A configuration of the [S3 bucket website](https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html). See [Website](#website) below for details. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "~> **NOTE:** Currently, changes to the `cors_rule` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes of CORS rules to an S3 bucket, use the `aws_s3_bucket_cors_configuration` resource instead. If you use `cors_rule` on an `aws_s3_bucket`, Terraform will assume management over the full set of CORS rules for the S3 bucket, treating additional CORS rules as drift. For this reason, `cors_rule` cannot be mixed with the external `aws_s3_bucket_cors_configuration` resource for a given S3 bucket.",
      "new": "~> **NOTE:** Currently, changes to the `cors_rule` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes of CORS rules to an S3 bucket, use the `aws_s3_bucket_cors_configuration` resource instead. If you use `cors_rule` on an `aws_s3_bucket`, Terraform will assume management over the full set of CORS rules for the S3 bucket, treating additional CORS rules as drift. For this reason, `cors_rule` cannot be mixed with the external `aws_s3_bucket_cors_configuration` resource for a given S3 bucket."
    },
    {
      "old": "~> **NOTE:** Currently, changes to the `grant` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes of ACL grants to an S3 bucket, use the `aws_s3_bucket_acl` resource instead. If you use `grant` on an `aws_s3_bucket`, Terraform will assume management over the full set of ACL grants for the S3 bucket, treating additional ACL grants as drift. For this reason, `grant` cannot be mixed with the external `aws_s3_bucket_acl` resource for a given S3 bucket.",
      "new": "~> **NOTE:** Currently, changes to the `grant` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes of ACL grants to an S3 bucket, use the `aws_s3_bucket_acl` resource instead. If you use `grant` on an `aws_s3_bucket`, Terraform will assume management over the full set of ACL grants for the S3 bucket, treating additional ACL grants as drift. For this reason, `grant` cannot be mixed with the external `aws_s3_bucket_acl` resource for a given S3 bucket."
    },
    {
      "old": "~> **NOTE:** Currently, changes to the `lifecycle_rule` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes of Lifecycle rules to an S3 bucket, use the `aws_s3_bucket_lifecycle_configuration` resource instead. If you use `lifecycle_rule` on an `aws_s3_bucket`, Terraform will assume management over the full set of Lifecycle rules for the S3 bucket, treating additional Lifecycle rules as drift. For this reason, `lifecycle_rule` cannot be mixed with the external `aws_s3_bucket_lifecycle_configuration` resource for a given S3 bucket.",
      "new": "~> **NOTE:** Currently, changes to the `lifecycle_rule` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes of Lifecycle rules to an S3 bucket, use the `aws_s3_bucket_lifecycle_configuration` resource instead. If you use `lifecycle_rule` on an `aws_s3_bucket`, Terraform will assume management over the full set of Lifecycle rules for the S3 bucket, treating additional Lifecycle rules as drift. For this reason, `lifecycle_rule` cannot be mixed with the external `aws_s3_bucket_lifecycle_configuration` resource for a given S3 bucket."
    },
    {
      "old": "~> **NOTE:** Currently, changes to the `logging` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes of logging parameters to an S3 bucket, use the `aws_s3_bucket_logging` resource instead. If you use `logging` on an `aws_s3_bucket`, Terraform will assume management over the full set of logging parameters for the S3 bucket, treating additional logging parameters as drift. For this reason, `logging` cannot be mixed with the external `aws_s3_bucket_logging` resource for a given S3 bucket.",
      "new": "~> **NOTE:** Currently, changes to the `logging` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes of logging parameters to an S3 bucket, use the `aws_s3_bucket_logging` resource instead. If you use `logging` on an `aws_s3_bucket`, Terraform will assume management over the full set of logging parameters for the S3 bucket, treating additional logging parameters as drift. For this reason, `logging` cannot be mixed with the external `aws_s3_bucket_logging` resource for a given S3 bucket."
    },
    {
      "old": "~> **NOTE:** Currently, changes to the `object_lock_configuration` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes of Object Lock settings to an S3 bucket, use the `aws_s3_bucket_object_lock_configuration` resource instead. If you use `object_lock_configuration` on an `aws_s3_bucket`, Terraform will assume management over the full set of Object Lock configuration parameters for the S3 bucket, treating additional Object Lock configuration parameters as drift. For this reason, `object_lock_configuration` cannot be mixed with the external `aws_s3_bucket_object_lock_configuration` resource for a given S3 bucket.",
      "new": "~> **NOTE:** Currently, changes to the `object_lock_configuration` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes of Object Lock settings to an S3 bucket, use the `aws_s3_bucket_object_lock_configuration` resource instead. If you use `object_lock_configuration` on an `aws_s3_bucket`, Terraform will assume management over the full set of Object Lock configuration parameters for the S3 bucket, treating additional Object Lock configuration parameters as drift. For this reason, `object_lock_configuration` cannot be mixed with the external `aws_s3_bucket_object_lock_configuration` resource for a given S3 bucket."
    },
    {
      "old": "~> **NOTE:** Currently, changes to the `replication_configuration` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage replication configuration changes to an S3 bucket, use the `aws_s3_bucket_replication_configuration` resource instead. If you use `replication_configuration` on an `aws_s3_bucket`, Terraform will assume management over the full replication configuration for the S3 bucket, treating additional replication configuration rules as drift. For this reason, `replication_configuration` cannot be mixed with the external `aws_s3_bucket_replication_configuration` resource for a given S3 bucket.",
      "new": "~> **NOTE:** Currently, changes to the `replication_configuration` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage replication configuration changes to an S3 bucket, use the `aws_s3_bucket_replication_configuration` resource instead. If you use `replication_configuration` on an `aws_s3_bucket`, Terraform will assume management over the full replication configuration for the S3 bucket, treating additional replication configuration rules as drift. For this reason, `replication_configuration` cannot be mixed with the external `aws_s3_bucket_replication_configuration` resource for a given S3 bucket."
    },
    {
      "old": "~> **NOTE:** Currently, changes to the `server_side_encryption_configuration` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes in encryption of an S3 bucket, use the `aws_s3_bucket_server_side_encryption_configuration` resource instead. If you use `server_side_encryption_configuration` on an `aws_s3_bucket`, Terraform will assume management over the encryption configuration for the S3 bucket, treating additional encryption changes as drift. For this reason, `server_side_encryption_configuration` cannot be mixed with the external `aws_s3_bucket_server_side_encryption_configuration` resource for a given S3 bucket.",
      "new": "~> **NOTE:** Currently, changes to the `server_side_encryption_configuration` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes in encryption of an S3 bucket, use the `aws_s3_bucket_server_side_encryption_configuration` resource instead. If you use `server_side_encryption_configuration` on an `aws_s3_bucket`, Terraform will assume management over the encryption configuration for the S3 bucket, treating additional encryption changes as drift. For this reason, `server_side_encryption_configuration` cannot be mixed with the external `aws_s3_bucket_server_side_encryption_configuration` resource for a given S3 bucket."
    },
    {
      "old": "~> **NOTE:** Currently, changes to the `versioning` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes of versioning state to an S3 bucket, use the `aws_s3_bucket_versioning` resource instead. If you use `versioning` on an `aws_s3_bucket`, Terraform will assume management over the versioning state of the S3 bucket, treating additional versioning state changes as drift. For this reason, `versioning` cannot be mixed with the external `aws_s3_bucket_versioning` resource for a given S3 bucket.",
      "new": "~> **NOTE:** Currently, changes to the `versioning` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes of versioning state to an S3 bucket, use the `aws_s3_bucket_versioning` resource instead. If you use `versioning` on an `aws_s3_bucket`, Terraform will assume management over the versioning state of the S3 bucket, treating additional versioning state changes as drift. For this reason, `versioning` cannot be mixed with the external `aws_s3_bucket_versioning` resource for a given S3 bucket."
    },
    {
      "old": "~> **NOTE:** Currently, changes to the `website` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes to the website configuration of an S3 bucket, use the `aws_s3_bucket_website_configuration` resource instead. If you use `website` on an `aws_s3_bucket`, Terraform will assume management over the configuration of the website of the S3 bucket, treating additional website configuration changes as drift. For this reason, `website` cannot be mixed with the external `aws_s3_bucket_website_configuration` resource for a given S3 bucket.",
      "new": "~> **NOTE:** Currently, changes to the `website` configuration of _existing_ resources cannot be automatically detected by Terraform. To manage changes to the website configuration of an S3 bucket, use the `aws_s3_bucket_website_configuration` resource instead. If you use `website` on an `aws_s3_bucket`, Terraform will assume management over the configuration of the website of the S3 bucket, treating additional website configuration changes as drift. For this reason, `website` cannot be mixed with the external `aws_s3_bucket_website_configuration` resource for a given S3 bucket."
    }
  ],
  "website/docs/r/s3_bucket_accelerate_configuration.html.markdown": [
    {
      "old": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,"
    },
    {
      "old": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,"
    }
  ],
  "website/docs/r/s3_bucket_acl.html.markdown": [
    {
      "old": "~> **Note:** `terraform destroy` does not delete the S3 Bucket ACL but does remove the resource from Terraform state.",
      "new": "~> **Note:** `terraform destroy` does not delete the S3 Bucket ACL but does remove the resource from Terraform state."
    },
    {
      "old": "If the owner (account ID) of the source bucket is the _same_ account used to configure the Terraform AWS Provider, and the source bucket is **not configured** with a",
      "new": "If the owner (account ID) of the source bucket is the _same_ account used to configure the Terraform AWS Provider, and the source bucket is **not configured** with a"
    },
    {
      "old": "If the owner (account ID) of the source bucket is the _same_ account used to configure the Terraform AWS Provider, and the source bucket is **configured** with a",
      "new": "If the owner (account ID) of the source bucket is the _same_ account used to configure the Terraform AWS Provider, and the source bucket is **configured** with a"
    },
    {
      "old": "If the owner (account ID) of the source bucket _differs_ from the account used to configure the Terraform AWS Provider, and the source bucket is **not configured** with a",
      "new": "If the owner (account ID) of the source bucket _differs_ from the account used to configure the Terraform AWS Provider, and the source bucket is **not configured** with a"
    },
    {
      "old": "If the owner (account ID) of the source bucket _differs_ from the account used to configure the Terraform AWS Provider, and the source bucket is **configured** with a",
      "new": "If the owner (account ID) of the source bucket _differs_ from the account used to configure the Terraform AWS Provider, and the source bucket is **configured** with a"
    }
  ],
  "website/docs/r/s3_bucket_cors_configuration.html.markdown": [
    {
      "old": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,"
    },
    {
      "old": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,"
    }
  ],
  "website/docs/r/s3_bucket_lifecycle_configuration.html.markdown": [
    {
      "old": "parameter in the Terraform AWS Provider `aws_s3_bucket` resource prior to `v4.0`.",
      "new": "parameter in the Terraform AWS Provider `aws_s3_bucket` resource prior to `v4.0`."
    },
    {
      "old": "Since `prefix` is deprecated by Amazon S3 and will be removed in the next major version of the Terraform AWS Provider, we recommend users either specify `filter` or leave both `filter` and `prefix` unspecified.",
      "new": "Since `prefix` is deprecated by Amazon S3 and will be removed in the next major version of the Terraform AWS Provider, we recommend users either specify `filter` or leave both `filter` and `prefix` unspecified."
    },
    {
      "old": "~> **NOTE** Terraform cannot distinguish a difference between configurations that use `rule.filter {}` and configurations that neither use `rule.filter` nor `rule.prefix`, so a rule cannot be updated from applying to all objects in the bucket via `rule.filter {}` to applying to a subset of objects based on the key prefix `\"\"` and vice versa.",
      "new": "~> **NOTE** Terraform cannot distinguish a difference between configurations that use `rule.filter {}` and configurations that neither use `rule.filter` nor `rule.prefix`, so a rule cannot be updated from applying to all objects in the bucket via `rule.filter {}` to applying to a subset of objects based on the key prefix `\"\"` and vice versa."
    },
    {
      "old": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,"
    },
    {
      "old": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,"
    }
  ],
  "website/docs/r/s3_bucket_logging.html.markdown": [
    {
      "old": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,"
    },
    {
      "old": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,"
    }
  ],
  "website/docs/r/s3_bucket_notification.html.markdown": [
    {
      "old": "For Terraform's JSON syntax, use an array instead of defining the `queue` key twice.",
      "new": "For Terraform's JSON syntax, use an array instead of defining the `queue` key twice."
    }
  ],
  "website/docs/r/s3_bucket_object.html.markdown": [
    {
      "old": "~> **NOTE:** The `aws_s3_bucket_object` resource is DEPRECATED and will be removed in a future version! Use `aws_s3_object` instead, where new features and fixes will be added. When replacing `aws_s3_bucket_object` with `aws_s3_object` in your configuration, on the next apply, Terraform will recreate the object. If you prefer to not have Terraform recreate the object, import the object using `aws_s3_object`.",
      "new": "~> **NOTE:** The `aws_s3_bucket_object` resource is DEPRECATED and will be removed in a future version! Use `aws_s3_object` instead, where new features and fixes will be added. When replacing `aws_s3_bucket_object` with `aws_s3_object` in your configuration, on the next apply, Terraform will recreate the object. If you prefer to not have Terraform recreate the object, import the object using `aws_s3_object`."
    },
    {
      "old": "  # The filemd5() function is available in Terraform 0.11.12 and later",
      "new": "  # The filemd5() function is available in Terraform 0.11.12 and later"
    },
    {
      "old": "  # For Terraform 0.11.11 and earlier, use the md5() function and the file() function:",
      "new": "  # For Terraform 0.11.11 and earlier, use the md5() function and the file() function:"
    },
    {
      "old": "* `etag` - (Optional) Triggers updates when the value changes. The only meaningful value is `filemd5(\"path/to/file\")` (Terraform 0.11.12 or later) or `${md5(file(\"path/to/file\"))}` (Terraform 0.11.11 or earlier). This attribute is not compatible with KMS encryption, `kms_key_id` or `server_side_encryption = \"aws:kms\"` (see `source_hash` instead).",
      "new": "* `etag` - (Optional) Triggers updates when the value changes. The only meaningful value is `filemd5(\"path/to/file\")` (Terraform 0.11.12 or later) or `${md5(file(\"path/to/file\"))}` (Terraform 0.11.11 or earlier). This attribute is not compatible with KMS encryption, `kms_key_id` or `server_side_encryption = \"aws:kms\"` (see `source_hash` instead)."
    },
    {
      "old": "* `kms_key_id` - (Optional) ARN of the KMS Key to use for object encryption. If the S3 Bucket has server-side encryption enabled, that value will automatically be used. If referencing the `aws_kms_key` resource, use the `arn` attribute. If referencing the `aws_kms_alias` data source or resource, use the `target_key_arn` attribute. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `kms_key_id` - (Optional) ARN of the KMS Key to use for object encryption. If the S3 Bucket has server-side encryption enabled, that value will automatically be used. If referencing the `aws_kms_key` resource, use the `arn` attribute. If referencing the `aws_kms_alias` data source or resource, use the `target_key_arn` attribute. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "* `source_hash` - (Optional) Triggers updates like `etag` but useful to address `etag` encryption limitations. Set using `filemd5(\"path/to/source\")` (Terraform 0.11.12 or later). (The value is only stored in state and not saved by AWS.)",
      "new": "* `source_hash` - (Optional) Triggers updates like `etag` but useful to address `etag` encryption limitations. Set using `filemd5(\"path/to/source\")` (Terraform 0.11.12 or later). (The value is only stored in state and not saved by AWS.)"
    },
    {
      "old": "-> **Note:** Terraform ignores all leading `/`s in the object's `key` and treats multiple `/`s in the rest of the object's `key` as a single `/`, so values of `/index.html` and `index.html` correspond to the same S3 object as do `first//second///third//` and `first/second/third/`.",
      "new": "-> **Note:** Terraform ignores all leading `/`s in the object's `key` and treats multiple `/`s in the rest of the object's `key` as a single `/`, so values of `/index.html` and `index.html` correspond to the same S3 object as do `first//second///third//` and `first/second/third/`."
    }
  ],
  "website/docs/r/s3_bucket_object_lock_configuration.html.markdown": [
    {
      "old": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,"
    },
    {
      "old": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,"
    }
  ],
  "website/docs/r/s3_bucket_request_payment_configuration.html.markdown": [
    {
      "old": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,"
    },
    {
      "old": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,"
    }
  ],
  "website/docs/r/s3_bucket_server_side_encryption_configuration.html.markdown": [
    {
      "old": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,"
    },
    {
      "old": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,"
    }
  ],
  "website/docs/r/s3_bucket_versioning.html.markdown": [
    {
      "old": "simply remove the resource from Terraform state if the associated S3 bucket is unversioned.",
      "new": "simply remove the resource from Terraform state if the associated S3 bucket is unversioned."
    },
    {
      "old": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,"
    },
    {
      "old": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,"
    }
  ],
  "website/docs/r/s3_bucket_website_configuration.html.markdown": [
    {
      "old": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider,"
    },
    {
      "old": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,",
      "new": "If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider,"
    }
  ],
  "website/docs/r/s3_object.html.markdown": [
    {
      "old": "  # The filemd5() function is available in Terraform 0.11.12 and later",
      "new": "  # The filemd5() function is available in Terraform 0.11.12 and later"
    },
    {
      "old": "  # For Terraform 0.11.11 and earlier, use the md5() function and the file() function:",
      "new": "  # For Terraform 0.11.11 and earlier, use the md5() function and the file() function:"
    },
    {
      "old": "* `etag` - (Optional) Triggers updates when the value changes. The only meaningful value is `filemd5(\"path/to/file\")` (Terraform 0.11.12 or later) or `${md5(file(\"path/to/file\"))}` (Terraform 0.11.11 or earlier). This attribute is not compatible with KMS encryption, `kms_key_id` or `server_side_encryption = \"aws:kms\"`, also if an object is larger than 16 MB, the AWS Management Console will upload or copy that object as a Multipart Upload, and therefore the ETag will not be an MD5 digest (see `source_hash` instead).",
      "new": "* `etag` - (Optional) Triggers updates when the value changes. The only meaningful value is `filemd5(\"path/to/file\")` (Terraform 0.11.12 or later) or `${md5(file(\"path/to/file\"))}` (Terraform 0.11.11 or earlier). This attribute is not compatible with KMS encryption, `kms_key_id` or `server_side_encryption = \"aws:kms\"`, also if an object is larger than 16 MB, the AWS Management Console will upload or copy that object as a Multipart Upload, and therefore the ETag will not be an MD5 digest (see `source_hash` instead)."
    },
    {
      "old": "* `kms_key_id` - (Optional) ARN of the KMS Key to use for object encryption. If the S3 Bucket has server-side encryption enabled, that value will automatically be used. If referencing the `aws_kms_key` resource, use the `arn` attribute. If referencing the `aws_kms_alias` data source or resource, use the `target_key_arn` attribute. Terraform will only perform drift detection if a configuration value is provided.",
      "new": "* `kms_key_id` - (Optional) ARN of the KMS Key to use for object encryption. If the S3 Bucket has server-side encryption enabled, that value will automatically be used. If referencing the `aws_kms_key` resource, use the `arn` attribute. If referencing the `aws_kms_alias` data source or resource, use the `target_key_arn` attribute. Terraform will only perform drift detection if a configuration value is provided."
    },
    {
      "old": "* `source_hash` - (Optional) Triggers updates like `etag` but useful to address `etag` encryption limitations. Set using `filemd5(\"path/to/source\")` (Terraform 0.11.12 or later). (The value is only stored in state and not saved by AWS.)",
      "new": "* `source_hash` - (Optional) Triggers updates like `etag` but useful to address `etag` encryption limitations. Set using `filemd5(\"path/to/source\")` (Terraform 0.11.12 or later). (The value is only stored in state and not saved by AWS.)"
    },
    {
      "old": "-> **Note:** Terraform ignores all leading `/`s in the object's `key` and treats multiple `/`s in the rest of the object's `key` as a single `/`, so values of `/index.html` and `index.html` correspond to the same S3 object as do `first//second///third//` and `first/second/third/`.",
      "new": "-> **Note:** Terraform ignores all leading `/`s in the object's `key` and treats multiple `/`s in the rest of the object's `key` as a single `/`, so values of `/index.html` and `index.html` correspond to the same S3 object as do `first//second///third//` and `first/second/third/`."
    }
  ],
  "website/docs/r/s3_object_copy.html.markdown": [
    {
      "old": "-> **Note:** Terraform ignores all leading `/`s in the object's `key` and treats multiple `/`s in the rest of the object's `key` as a single `/`, so values of `/index.html` and `index.html` correspond to the same S3 object as do `first//second///third//` and `first/second/third/`.",
      "new": "-> **Note:** Terraform ignores all leading `/`s in the object's `key` and treats multiple `/`s in the rest of the object's `key` as a single `/`, so values of `/index.html` and `index.html` correspond to the same S3 object as do `first//second///third//` and `first/second/third/`."
    }
  ],
  "website/docs/r/s3control_access_point_policy.html.markdown": [
    {
      "old": "~> **NOTE on Access Points and Access Point Policies:** Terraform provides both a standalone Access Point Policy resource and an Access Point resource with a resource policy defined in-line. You cannot use an Access Point with in-line resource policy in conjunction with an Access Point Policy resource. Doing so will cause a conflict of policies and will overwrite the access point's resource policy.",
      "new": "~> **NOTE on Access Points and Access Point Policies:** Terraform provides both a standalone Access Point Policy resource and an Access Point resource with a resource policy defined in-line. You cannot use an Access Point with in-line resource policy in conjunction with an Access Point Policy resource. Doing so will cause a conflict of policies and will overwrite the access point's resource policy."
    }
  ],
  "website/docs/r/s3control_multi_region_access_point_policy.html.markdown": [
    {
      "old": "* `account_id` - (Optional) The AWS account ID for the owner of the Multi-Region Access Point. Defaults to automatically determined account ID of the Terraform AWS provider.",
      "new": "* `account_id` - (Optional) The AWS account ID for the owner of the Multi-Region Access Point. Defaults to automatically determined account ID of the Terraform AWS provider."
    }
  ],
  "website/docs/r/s3control_object_lambda_access_point.html.markdown": [
    {
      "old": "* `account_id` - (Optional) The AWS account ID for the owner of the bucket for which you want to create an Object Lambda Access Point. Defaults to automatically determined account ID of the Terraform AWS provider.",
      "new": "* `account_id` - (Optional) The AWS account ID for the owner of the bucket for which you want to create an Object Lambda Access Point. Defaults to automatically determined account ID of the Terraform AWS provider."
    }
  ],
  "website/docs/r/s3control_object_lambda_access_point_policy.html.markdown": [
    {
      "old": "* `account_id` - (Optional) The AWS account ID for the account that owns the Object Lambda Access Point. Defaults to automatically determined account ID of the Terraform AWS provider.",
      "new": "* `account_id` - (Optional) The AWS account ID for the account that owns the Object Lambda Access Point. Defaults to automatically determined account ID of the Terraform AWS provider."
    }
  ],
  "website/docs/r/s3control_storage_lens_configuration.html.markdown": [
    {
      "old": "* `account_id` - (Optional) The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the Terraform AWS provider.",
      "new": "* `account_id` - (Optional) The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the Terraform AWS provider."
    }
  ],
  "website/docs/r/sagemaker_endpoint.html.markdown": [
    {
      "old": "* `name` - (Optional) The name of the endpoint. If omitted, Terraform will assign a random, unique name.",
      "new": "* `name` - (Optional) The name of the endpoint. If omitted, Terraform will assign a random, unique name."
    }
  ],
  "website/docs/r/sagemaker_endpoint_configuration.html.markdown": [
    {
      "old": "* `name` - (Optional) The name of the endpoint configuration. If omitted, Terraform will assign a random, unique name.",
      "new": "* `name` - (Optional) The name of the endpoint configuration. If omitted, Terraform will assign a random, unique name."
    },
    {
      "old": "* `variant_name` - (Optional) The name of the variant. If omitted, Terraform will assign a random, unique name.",
      "new": "* `variant_name` - (Optional) The name of the variant. If omitted, Terraform will assign a random, unique name."
    }
  ],
  "website/docs/r/secretsmanager_secret_version.html.markdown": [
    {
      "old": "~> **NOTE:** If the `AWSCURRENT` staging label is present on this version during resource deletion, that label cannot be removed and will be skipped to prevent errors when fully deleting the secret. That label will leave this secret version active even after the resource is deleted from Terraform unless the secret itself is deleted. Move the `AWSCURRENT` staging label before or after deleting this resource from Terraform to fully trigger version deprecation if necessary.",
      "new": "~> **NOTE:** If the `AWSCURRENT` staging label is present on this version during resource deletion, that label cannot be removed and will be skipped to prevent errors when fully deleting the secret. That label will leave this secret version active even after the resource is deleted from Terraform unless the secret itself is deleted. Move the `AWSCURRENT` staging label before or after deleting this resource from Terraform to fully trigger version deprecation if necessary."
    },
    {
      "old": "-> **Note:** In Terraform 0.14 and later, use `sensitive = true` to protect the values of the variable from being printed in logs and console output (see Protect Sensitive Input Variables).",
      "new": "-> **Note:** In Terraform 0.14 and later, use `sensitive = true` to protect the values of the variable from being printed in logs and console output (see Protect Sensitive Input Variables)."
    },
    {
      "old": "Reading key-value pairs from JSON back into a native Terraform map can be accomplished in Terraform 0.12 and later with the `jsondecode()` function:",
      "new": "Reading key-value pairs from JSON back into a native Terraform map can be accomplished in Terraform 0.12 and later with the `jsondecode()` function:"
    },
    {
      "old": "~> **NOTE:** If `version_stages` is configured, you must include the `AWSCURRENT` staging label if this secret version is the only version or if the label is currently present on this secret version, otherwise Terraform will show a perpetual difference.",
      "new": "~> **NOTE:** If `version_stages` is configured, you must include the `AWSCURRENT` staging label if this secret version is the only version or if the label is currently present on this secret version, otherwise Terraform will show a perpetual difference."
    }
  ],
  "website/docs/r/security_group.html.markdown": [
    {
      "old": "~> **NOTE on Security Groups and Security Group Rules:** Terraform currently",
      "new": "~> **NOTE on Security Groups and Security Group Rules:** Terraform currently"
    },
    {
      "old": "~> **NOTE:** Due to [AWS Lambda improved VPC networking changes that began deploying in September 2019](https://aws.amazon.com/blogs/compute/announcing-improved-vpc-networking-for-aws-lambda-functions/), security groups associated with Lambda Functions can take up to 45 minutes to successfully delete. Terraform AWS Provider version 2.31.0 and later automatically handles this increased timeout, however prior versions require setting the [customizable deletion timeout](#timeouts) to 45 minutes (`delete = \"45m\"`). AWS and HashiCorp are working together to reduce the amount of time required for resource deletion and updates can be tracked in this [GitHub issue](https://github.com/hashicorp/terraform-provider-aws/issues/10329).",
      "new": "~> **NOTE:** Due to [AWS Lambda improved VPC networking changes that began deploying in September 2019](https://aws.amazon.com/blogs/compute/announcing-improved-vpc-networking-for-aws-lambda-functions/), security groups associated with Lambda Functions can take up to 45 minutes to successfully delete. Terraform AWS Provider version 2.31.0 and later automatically handles this increased timeout, however prior versions require setting the [customizable deletion timeout](#timeouts) to 45 minutes (`delete = \"45m\"`). AWS and HashiCorp are working together to reduce the amount of time required for resource deletion and updates can be tracked in this [GitHub issue](https://github.com/hashicorp/terraform-provider-aws/issues/10329)."
    },
    {
      "old": "~> **NOTE on Egress rules:** By default, AWS creates an `ALLOW ALL` egress rule when creating a new Security Group inside of a VPC. When creating a new Security Group inside a VPC, **Terraform will remove this default rule**, and require you specifically re-create it if you desire that rule. We feel this leads to fewer surprises in terms of controlling your egress rules. If you desire this rule to be in place, you can use this `egress` block:",
      "new": "~> **NOTE on Egress rules:** By default, AWS creates an `ALLOW ALL` egress rule when creating a new Security Group inside of a VPC. When creating a new Security Group inside a VPC, **Terraform will remove this default rule**, and require you specifically re-create it if you desire that rule. We feel this leads to fewer surprises in terms of controlling your egress rules. If you desire this rule to be in place, you can use this `egress` block:"
    },
    {
      "old": "Security Group's Name [cannot be edited after the resource is created](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#creating-security-group). In fact, the `name` and `name-prefix` arguments force the creation of a new Security Group resource when they change value. In that case, Terraform first deletes the existing Security Group resource and then it creates a new one. If the existing Security Group is associated to a Network Interface resource, the deletion cannot complete. The reason is that Network Interface resources cannot be left with no Security Group attached and the new one is not yet available at that point.",
      "new": "Security Group's Name [cannot be edited after the resource is created](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#creating-security-group). In fact, the `name` and `name-prefix` arguments force the creation of a new Security Group resource when they change value. In that case, Terraform first deletes the existing Security Group resource and then it creates a new one. If the existing Security Group is associated to a Network Interface resource, the deletion cannot complete. The reason is that Network Interface resources cannot be left with no Security Group attached and the new one is not yet available at that point."
    },
    {
      "old": "You must invert the default behavior of Terraform. That is, first the new Security Group resource must be created, then associated to possible Network Interface resources and finally the old Security Group can be detached and deleted. To force this behavior, you must set the create_before_destroy property:",
      "new": "You must invert the default behavior of Terraform. That is, first the new Security Group resource must be created, then associated to possible Network Interface resources and finally the old Security Group can be detached and deleted. To force this behavior, you must set the create_before_destroy property:"
    },
    {
      "old": "* `description` - (Optional, Forces new resource) Security group description. Defaults to `Managed by Terraform`. Cannot be `\"\"`. **NOTE**: This field maps to the AWS `GroupDescription` attribute, for which there is no Update API. If you'd like to classify your security groups in a way that can be updated, use `tags`.",
      "new": "* `description` - (Optional, Forces new resource) Security group description. Defaults to `Managed by Terraform`. Cannot be `\"\"`. **NOTE**: This field maps to the AWS `GroupDescription` attribute, for which there is no Update API. If you'd like to classify your security groups in a way that can be updated, use `tags`."
    },
    {
      "old": "* `name` - (Optional, Forces new resource) Name of the security group. If omitted, Terraform will assign a random, unique name.",
      "new": "* `name` - (Optional, Forces new resource) Name of the security group. If omitted, Terraform will assign a random, unique name."
    },
    {
      "old": "* `revoke_rules_on_delete` - (Optional) Instruct Terraform to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. This is normally not needed, however certain AWS services such as Elastic Map Reduce may automatically add required rules to security groups used with the service, and those rules may contain a cyclic dependency that prevent the security groups from being destroyed without removing the dependency first. Default `false`.",
      "new": "* `revoke_rules_on_delete` - (Optional) Instruct Terraform to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. This is normally not needed, however certain AWS services such as Elastic Map Reduce may automatically add required rules to security groups used with the service, and those rules may contain a cyclic dependency that prevent the security groups from being destroyed without removing the dependency first. Default `false`."
    },
    {
      "old": "* `protocol` - (Required) Protocol. If you select a protocol of `-1` (semantically equivalent to `all`, which is not a valid value here), you must specify a `from_port` and `to_port` equal to 0.  The supported values are defined in the `IpProtocol` argument on the [IpPermission](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IpPermission.html) API reference. This argument is normalized to a lowercase value to match the AWS API requirement when using with Terraform 0.12.x and above, please make sure that the value of the protocol is specified as lowercase when using with older version of Terraform to avoid an issue during upgrade.",
      "new": "* `protocol` - (Required) Protocol. If you select a protocol of `-1` (semantically equivalent to `all`, which is not a valid value here), you must specify a `from_port` and `to_port` equal to 0.  The supported values are defined in the `IpProtocol` argument on the [IpPermission](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IpPermission.html) API reference. This argument is normalized to a lowercase value to match the AWS API requirement when using with Terraform 0.12.x and above, please make sure that the value of the protocol is specified as lowercase when using with older version of Terraform to avoid an issue during upgrade."
    },
    {
      "old": "* `protocol` - (Required) Protocol. If you select a protocol of `-1` (semantically equivalent to `all`, which is not a valid value here), you must specify a `from_port` and `to_port` equal to 0.  The supported values are defined in the `IpProtocol` argument in the [IpPermission](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IpPermission.html) API reference. This argument is normalized to a lowercase value to match the AWS API requirement when using Terraform 0.12.x and above. Please make sure that the value of the protocol is specified as lowercase when used with older version of Terraform to avoid issues during upgrade.",
      "new": "* `protocol` - (Required) Protocol. If you select a protocol of `-1` (semantically equivalent to `all`, which is not a valid value here), you must specify a `from_port` and `to_port` equal to 0.  The supported values are defined in the `IpProtocol` argument in the [IpPermission](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IpPermission.html) API reference. This argument is normalized to a lowercase value to match the AWS API requirement when using Terraform 0.12.x and above. Please make sure that the value of the protocol is specified as lowercase when used with older version of Terraform to avoid issues during upgrade."
    }
  ],
  "website/docs/r/security_group_rule.html.markdown": [
    {
      "old": "~> **NOTE on Security Groups and Security Group Rules:** Terraform currently",
      "new": "~> **NOTE on Security Groups and Security Group Rules:** Terraform currently"
    },
    {
      "old": "~> **NOTE:** Setting `protocol = \"all\"` or `protocol = -1` with `from_port` and `to_port` will result in the EC2 API creating a security group rule with all ports open. This API behavior cannot be controlled by Terraform and may generate warnings in the future.",
      "new": "~> **NOTE:** Setting `protocol = \"all\"` or `protocol = -1` with `from_port` and `to_port` will result in the EC2 API creating a security group rule with all ports open. This API behavior cannot be controlled by Terraform and may generate warnings in the future."
    },
    {
      "old": "Not all rule permissions (e.g., not all of a rule's CIDR blocks) need to be imported for Terraform to manage rule permissions. However, importing some of a rule's permissions but not others, and then making changes to the rule will result in the creation of an additional rule to capture the updated permissions. Rule permissions that were not imported are left intact in the original rule.",
      "new": "Not all rule permissions (e.g., not all of a rule's CIDR blocks) need to be imported for Terraform to manage rule permissions. However, importing some of a rule's permissions but not others, and then making changes to the rule will result in the creation of an additional rule to capture the updated permissions. Rule permissions that were not imported are left intact in the original rule."
    }
  ],
  "website/docs/r/securityhub_organization_configuration.markdown": [
    {
      "old": "~> **NOTE:** This resource requires an `aws_securityhub_organization_admin_account` to be configured (not necessarily with Terraform). More information about managing Security Hub in an organization can be found in the [Managing administrator and member accounts](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-accounts.html) documentation",
      "new": "~> **NOTE:** This resource requires an `aws_securityhub_organization_admin_account` to be configured (not necessarily with Terraform). More information about managing Security Hub in an organization can be found in the [Managing administrator and member accounts](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-accounts.html) documentation"
    },
    {
      "old": "~> **NOTE:** This is an advanced Terraform resource. Terraform will automatically assume management of the Security Hub Organization Configuration without import and perform no actions on removal from the Terraform configuration.",
      "new": "~> **NOTE:** This is an advanced Terraform resource. Terraform will automatically assume management of the Security Hub Organization Configuration without import and perform no actions on removal from the Terraform configuration."
    }
  ],
  "website/docs/r/securityhub_standards_control.markdown": [
    {
      "old": "Terraform does not _create_ this resource, but instead \"adopts\" it",
      "new": "Terraform does not _create_ this resource, but instead \"adopts\" it"
    },
    {
      "old": "into management. When you _delete_ this resource configuration, Terraform \"abandons\" resource as is and just removes it from the state.",
      "new": "into management. When you _delete_ this resource configuration, Terraform \"abandons\" resource as is and just removes it from the state."
    }
  ],
  "website/docs/r/sesv2_configuration_set.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS SESv2 (Simple Email V2) Configuration Set.",
      "new": "  Terraform resource for managing an AWS SESv2 (Simple Email V2) Configuration Set."
    },
    {
      "old": "Terraform resource for managing an AWS SESv2 (Simple Email V2) Configuration Set.",
      "new": "Terraform resource for managing an AWS SESv2 (Simple Email V2) Configuration Set."
    }
  ],
  "website/docs/r/signer_signing_profile.html.markdown": [
    {
      "old": "* `name` - (Optional) A unique signing profile name. By default generated by Terraform. Signing profile names are immutable and cannot be reused after canceled.",
      "new": "* `name` - (Optional) A unique signing profile name. By default generated by Terraform. Signing profile names are immutable and cannot be reused after canceled."
    },
    {
      "old": "* `name_prefix` - (Optional) A signing profile name prefix. Terraform will generate a unique suffix. Conflicts with `name`.",
      "new": "* `name_prefix` - (Optional) A signing profile name prefix. Terraform will generate a unique suffix. Conflicts with `name`."
    }
  ],
  "website/docs/r/signer_signing_profile_permission.html.markdown": [
    {
      "old": "* `statement_id` - (Optional) A unique statement identifier. By default generated by Terraform.",
      "new": "* `statement_id` - (Optional) A unique statement identifier. By default generated by Terraform."
    },
    {
      "old": "* `statement_id_prefix` - (Optional) A statement identifier prefix. Terraform will generate a unique suffix. Conflicts with `statement_id`.",
      "new": "* `statement_id_prefix` - (Optional) A statement identifier prefix. Terraform will generate a unique suffix. Conflicts with `statement_id`."
    }
  ],
  "website/docs/r/sns_platform_application.html.markdown": [
    {
      "old": "* `platform_credential` - (Required) Application Platform credential. See [Credential][1] for type of credential required for platform. The value of this attribute when stored into the Terraform state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.",
      "new": "* `platform_credential` - (Required) Application Platform credential. See [Credential][1] for type of credential required for platform. The value of this attribute when stored into the Terraform state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources."
    },
    {
      "old": "* `platform_principal` - (Optional) Application Platform principal. See [Principal][2] for type of principal required for platform. The value of this attribute when stored into the Terraform state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.",
      "new": "* `platform_principal` - (Optional) Application Platform principal. See [Principal][2] for type of principal required for platform. The value of this attribute when stored into the Terraform state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources."
    }
  ],
  "website/docs/r/sns_topic.html.markdown": [
    {
      "old": "* `name` - (Optional) The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. For a FIFO (first-in-first-out) topic, the name must end with the `.fifo` suffix. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`",
      "new": "* `name` - (Optional) The name of the topic. Topic names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. For a FIFO (first-in-first-out) topic, the name must end with the `.fifo` suffix. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`"
    },
    {
      "old": "* `policy` - (Optional) The fully-formed AWS policy as JSON. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.",
      "new": "* `policy` - (Optional) The fully-formed AWS policy as JSON. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide."
    }
  ],
  "website/docs/r/sns_topic_subscription.html.markdown": [
    {
      "old": "Provides a resource for subscribing to SNS topics. Requires that an SNS topic exist for the subscription to attach to. This resource allows you to automatically place messages sent to SNS topics in SQS queues, send them as HTTP(S) POST requests to a given endpoint, send SMS messages, or notify devices / applications. The most likely use case for Terraform users will probably be SQS queues.",
      "new": "Provides a resource for subscribing to SNS topics. Requires that an SNS topic exist for the subscription to attach to. This resource allows you to automatically place messages sent to SNS topics in SQS queues, send them as HTTP(S) POST requests to a given endpoint, send SMS messages, or notify devices / applications. The most likely use case for Terraform users will probably be SQS queues."
    },
    {
      "old": "~> **NOTE:** If the SNS topic and SQS queue are in different AWS regions, the `aws_sns_topic_subscription` must use an AWS provider that is in the same region as the SNS topic. If the `aws_sns_topic_subscription` uses a provider with a different region than the SNS topic, Terraform will fail to create the subscription.",
      "new": "~> **NOTE:** If the SNS topic and SQS queue are in different AWS regions, the `aws_sns_topic_subscription` must use an AWS provider that is in the same region as the SNS topic. If the `aws_sns_topic_subscription` uses a provider with a different region than the SNS topic, Terraform will fail to create the subscription."
    },
    {
      "old": "~> **NOTE:** Setup of cross-account subscriptions from SNS topics to SQS queues requires Terraform to have access to BOTH accounts.",
      "new": "~> **NOTE:** Setup of cross-account subscriptions from SNS topics to SQS queues requires Terraform to have access to BOTH accounts."
    },
    {
      "old": "~> **NOTE:** If an SNS topic and SQS queue are in different AWS accounts but the same region, the `aws_sns_topic_subscription` must use the AWS provider for the account with the SQS queue. If `aws_sns_topic_subscription` uses a Provider with a different account than the SQS queue, Terraform creates the subscription but does not keep state and tries to re-create the subscription at every `apply`.",
      "new": "~> **NOTE:** If an SNS topic and SQS queue are in different AWS accounts but the same region, the `aws_sns_topic_subscription` must use the AWS provider for the account with the SQS queue. If `aws_sns_topic_subscription` uses a Provider with a different account than the SQS queue, Terraform creates the subscription but does not keep state and tries to re-create the subscription at every `apply`."
    },
    {
      "old": "~> **NOTE:** You cannot unsubscribe to a subscription that is pending confirmation. If you use `email`, `email-json`, or `http`/`https` (without auto-confirmation enabled), until the subscription is confirmed (e.g., outside of Terraform), AWS does not allow Terraform to delete / unsubscribe the subscription. If you `destroy` an unconfirmed subscription, Terraform will remove the subscription from its state but the subscription will still exist in AWS. However, if you delete an SNS topic, SNS [deletes all the subscriptions](https://docs.aws.amazon.com/sns/latest/dg/sns-delete-subscription-topic.html) associated with the topic. Also, you can import a subscription after confirmation and then have the capability to delete it.",
      "new": "~> **NOTE:** You cannot unsubscribe to a subscription that is pending confirmation. If you use `email`, `email-json`, or `http`/`https` (without auto-confirmation enabled), until the subscription is confirmed (e.g., outside of Terraform), AWS does not allow Terraform to delete / unsubscribe the subscription. If you `destroy` an unconfirmed subscription, Terraform will remove the subscription from its state but the subscription will still exist in AWS. However, if you delete an SNS topic, SNS [deletes all the subscriptions](https://docs.aws.amazon.com/sns/latest/dg/sns-delete-subscription-topic.html) associated with the topic. Also, you can import a subscription after confirmation and then have the capability to delete it."
    },
    {
      "old": "~> **NOTE:** If an `aws_sns_topic_subscription` uses a partially-supported protocol and the subscription is not confirmed, either through automatic confirmation or means outside of Terraform (e.g., clicking on a \"Confirm Subscription\" link in an email), Terraform cannot delete / unsubscribe the subscription. Attempting to `destroy` an unconfirmed subscription will remove the `aws_sns_topic_subscription` from Terraform's state but **_will not_** remove the subscription from AWS. The `pending_confirmation` attribute provides confirmation status.",
      "new": "~> **NOTE:** If an `aws_sns_topic_subscription` uses a partially-supported protocol and the subscription is not confirmed, either through automatic confirmation or means outside of Terraform (e.g., clicking on a \"Confirm Subscription\" link in an email), Terraform cannot delete / unsubscribe the subscription. Attempting to `destroy` an unconfirmed subscription will remove the `aws_sns_topic_subscription` from Terraform's state but **_will not_** remove the subscription from AWS. The `pending_confirmation` attribute provides confirmation status."
    }
  ],
  "website/docs/r/spot_fleet_request.html.markdown": [
    {
      "old": "~> **NOTE:** Terraform does not support the functionality where multiple `subnet_id` or `availability_zone` parameters can be specified in the same",
      "new": "~> **NOTE:** Terraform does not support the functionality where multiple `subnet_id` or `availability_zone` parameters can be specified in the same"
    },
    {
      "old": "* `wait_for_fulfillment` - (Optional; Default: false) If set, Terraform will",
      "new": "* `wait_for_fulfillment` - (Optional; Default: false) If set, Terraform will"
    }
  ],
  "website/docs/r/spot_instance_request.html.markdown": [
    {
      "old": "By default Terraform creates Spot Instance Requests with a `persistent` type,",
      "new": "By default Terraform creates Spot Instance Requests with a `persistent` type,"
    },
    {
      "old": "On destruction, Terraform will make an attempt to terminate the associated Spot",
      "new": "On destruction, Terraform will make an attempt to terminate the associated Spot"
    },
    {
      "old": "differently than other Terraform resources. Most importantly: there is __no",
      "new": "differently than other Terraform resources. Most importantly: there is __no"
    },
    {
      "old": "* `wait_for_fulfillment` - (Optional; Default: false) If set, Terraform will",
      "new": "* `wait_for_fulfillment` - (Optional; Default: false) If set, Terraform will"
    }
  ],
  "website/docs/r/sqs_queue.html.markdown": [
    {
      "old": "* `name` - (Optional) The name of the queue. Queue names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 80 characters long. For a FIFO (first-in-first-out) queue, the name must end with the `.fifo` suffix. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`",
      "new": "* `name` - (Optional) The name of the queue. Queue names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 80 characters long. For a FIFO (first-in-first-out) queue, the name must end with the `.fifo` suffix. If omitted, Terraform will assign a random, unique name. Conflicts with `name_prefix`"
    },
    {
      "old": "* `policy` - (Optional) The JSON policy for the SQS queue. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.",
      "new": "* `policy` - (Optional) The JSON policy for the SQS queue. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide."
    }
  ],
  "website/docs/r/ssm_parameter.html.markdown": [
    {
      "old": "~> **Note:** `overwrite` also makes it possible to overwrite an existing SSM Parameter that's not created by Terraform before.",
      "new": "~> **Note:** `overwrite` also makes it possible to overwrite an existing SSM Parameter that's not created by Terraform before."
    },
    {
      "old": "* `insecure_value` - (Optional, exactly one of `value` or `insecure_value` is required) Value of the parameter. **Use caution:** This value is _never_ marked as sensitive in the Terraform plan output. This argument is not valid with a `type` of `SecureString`.",
      "new": "* `insecure_value` - (Optional, exactly one of `value` or `insecure_value` is required) Value of the parameter. **Use caution:** This value is _never_ marked as sensitive in the Terraform plan output. This argument is not valid with a `type` of `SecureString`."
    },
    {
      "old": "* `value` - (Optional, exactly one of `value` or `insecure_value` is required) Value of the parameter. This value is always marked as sensitive in the Terraform plan output, regardless of `type`. In Terraform CLI version 0.15 and later, this may require additional configuration handling for certain scenarios. For more information, see the Terraform v0.15 Upgrade Guide.",
      "new": "* `value` - (Optional, exactly one of `value` or `insecure_value` is required) Value of the parameter. This value is always marked as sensitive in the Terraform plan output, regardless of `type`. In Terraform CLI version 0.15 and later, this may require additional configuration handling for certain scenarios. For more information, see the Terraform v0.15 Upgrade Guide."
    }
  ],
  "website/docs/r/storagegateway_gateway.html.markdown": [
    {
      "old": "~> **NOTE:** One of `activation_key` or `gateway_ip_address` must be provided for resource creation (gateway activation). Neither is required for resource import. If using `gateway_ip_address`, Terraform must be able to make an HTTP (port 80) GET request to the specified IP address from where it is running.",
      "new": "~> **NOTE:** One of `activation_key` or `gateway_ip_address` must be provided for resource creation (gateway activation). Neither is required for resource import. If using `gateway_ip_address`, Terraform must be able to make an HTTP (port 80) GET request to the specified IP address from where it is running."
    },
    {
      "old": "* `gateway_ip_address` - (Optional) Gateway IP address to retrieve activation key during resource creation. Conflicts with `activation_key`. Gateway must be accessible on port 80 from where Terraform is running. Additional information is available in the [Storage Gateway User Guide](https://docs.aws.amazon.com/storagegateway/latest/userguide/get-activation-key.html).",
      "new": "* `gateway_ip_address` - (Optional) Gateway IP address to retrieve activation key during resource creation. Conflicts with `activation_key`. Gateway must be accessible on port 80 from where Terraform is running. Additional information is available in the [Storage Gateway User Guide](https://docs.aws.amazon.com/storagegateway/latest/userguide/get-activation-key.html)."
    },
    {
      "old": "* `medium_changer_type` - (Optional) Type of medium changer to use for tape gateway. Terraform cannot detect drift of this argument. Valid values: `STK-L700`, `AWS-Gateway-VTL`, `IBM-03584L32-0402`.",
      "new": "* `medium_changer_type` - (Optional) Type of medium changer to use for tape gateway. Terraform cannot detect drift of this argument. Valid values: `STK-L700`, `AWS-Gateway-VTL`, `IBM-03584L32-0402`."
    },
    {
      "old": "* `smb_guest_password` - (Optional) Guest password for Server Message Block (SMB) file shares. Only valid for `FILE_S3` and `FILE_FSX_SMB` gateway types. Must be set before creating `GuestAccess` authentication SMB file shares. Terraform can only detect drift of the existence of a guest password, not its actual value from the gateway. Terraform can however update the password with changing the argument.",
      "new": "* `smb_guest_password` - (Optional) Guest password for Server Message Block (SMB) file shares. Only valid for `FILE_S3` and `FILE_FSX_SMB` gateway types. Must be set before creating `GuestAccess` authentication SMB file shares. Terraform can only detect drift of the existence of a guest password, not its actual value from the gateway. Terraform can however update the password with changing the argument."
    },
    {
      "old": "* `tape_drive_type` - (Optional) Type of tape drive to use for tape gateway. Terraform cannot detect drift of this argument. Valid values: `IBM-ULT3580-TD5`.",
      "new": "* `tape_drive_type` - (Optional) Type of tape drive to use for tape gateway. Terraform cannot detect drift of this argument. Valid values: `IBM-ULT3580-TD5`."
    },
    {
      "old": "~> **NOTE** It is not possible to unconfigure this setting without recreating the gateway. Also, Terraform can only detect drift of the `domain_name` argument from the gateway.",
      "new": "~> **NOTE** It is not possible to unconfigure this setting without recreating the gateway. Also, Terraform can only detect drift of the `domain_name` argument from the gateway."
    },
    {
      "old": "Certain resource arguments, like `gateway_ip_address` do not have a Storage Gateway API method for reading the information after creation, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,",
      "new": "Certain resource arguments, like `gateway_ip_address` do not have a Storage Gateway API method for reading the information after creation, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,"
    }
  ],
  "website/docs/r/swf_domain.html.markdown": [
    {
      "old": "  description                                 = \"Terraform SWF Domain\"",
      "new": "  description                                 = \"Terraform SWF Domain\""
    },
    {
      "old": "* `name` - (Optional, Forces new resource) The name of the domain. If omitted, Terraform will assign a random, unique name.",
      "new": "* `name` - (Optional, Forces new resource) The name of the domain. If omitted, Terraform will assign a random, unique name."
    }
  ],
  "website/docs/r/transcribe_language_model.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Transcribe LanguageModel.",
      "new": "  Terraform resource for managing an AWS Transcribe LanguageModel."
    },
    {
      "old": "Terraform resource for managing an AWS Transcribe LanguageModel.",
      "new": "Terraform resource for managing an AWS Transcribe LanguageModel."
    }
  ],
  "website/docs/r/transcribe_medical_vocabulary.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Transcribe MedicalVocabulary.",
      "new": "  Terraform resource for managing an AWS Transcribe MedicalVocabulary."
    },
    {
      "old": "Terraform resource for managing an AWS Transcribe MedicalVocabulary.",
      "new": "Terraform resource for managing an AWS Transcribe MedicalVocabulary."
    }
  ],
  "website/docs/r/transcribe_vocabulary.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Transcribe Vocabulary.",
      "new": "  Terraform resource for managing an AWS Transcribe Vocabulary."
    },
    {
      "old": "Terraform resource for managing an AWS Transcribe Vocabulary.",
      "new": "Terraform resource for managing an AWS Transcribe Vocabulary."
    }
  ],
  "website/docs/r/transcribe_vocabulary_filter.html.markdown": [
    {
      "old": "  Terraform resource for managing an AWS Transcribe VocabularyFilter.",
      "new": "  Terraform resource for managing an AWS Transcribe VocabularyFilter."
    },
    {
      "old": "Terraform resource for managing an AWS Transcribe VocabularyFilter.",
      "new": "Terraform resource for managing an AWS Transcribe VocabularyFilter."
    }
  ],
  "website/docs/r/transfer_access.html.markdown": [
    {
      "old": "* `policy` - (Optional) An IAM JSON policy document that scopes down user access to portions of their Amazon S3 bucket. IAM variables you can use inside this policy include `${Transfer:UserName}`, `${Transfer:HomeDirectory}`, and `${Transfer:HomeBucket}`. Since the IAM variable syntax matches Terraform's interpolation syntax, they must be escaped inside Terraform configuration strings (`$${Transfer:UserName}`).  These are evaluated on-the-fly when navigating the bucket.",
      "new": "* `policy` - (Optional) An IAM JSON policy document that scopes down user access to portions of their Amazon S3 bucket. IAM variables you can use inside this policy include `${Transfer:UserName}`, `${Transfer:HomeDirectory}`, and `${Transfer:HomeBucket}`. Since the IAM variable syntax matches Terraform's interpolation syntax, they must be escaped inside Terraform configuration strings (`$${Transfer:UserName}`).  These are evaluated on-the-fly when navigating the bucket."
    }
  ],
  "website/docs/r/transfer_tag.html.markdown": [
    {
      "old": "Manages an individual Transfer Family resource tag. This resource should only be used in cases where Transfer Family resources are created outside Terraform (e.g., Servers without AWS Management Console) or the tag key has the `aws:` prefix.",
      "new": "Manages an individual Transfer Family resource tag. This resource should only be used in cases where Transfer Family resources are created outside Terraform (e.g., Servers without AWS Management Console) or the tag key has the `aws:` prefix."
    },
    {
      "old": "~> **NOTE:** This tagging resource should not be combined with the Terraform resource for managing the parent resource. For example, using `aws_transfer_server` and `aws_transfer_tag` to manage tags of the same server will cause a perpetual difference where the `aws_transfer_server` resource will try to remove the tag being added by the `aws_transfer_tag` resource.",
      "new": "~> **NOTE:** This tagging resource should not be combined with the Terraform resource for managing the parent resource. For example, using `aws_transfer_server` and `aws_transfer_tag` to manage tags of the same server will cause a perpetual difference where the `aws_transfer_server` resource will try to remove the tag being added by the `aws_transfer_tag` resource."
    }
  ],
  "website/docs/r/volume_attachment.html.markdown": [
    {
      "old": "~> **NOTE on EBS block devices:** If you use `ebs_block_device` on an `aws_instance`, Terraform will assume management over the full set of non-root EBS block devices for the instance, and treats additional block devices as drift. For this reason, `ebs_block_device` cannot be mixed with external `aws_ebs_volume` + `aws_volume_attachment` resources for a given instance.",
      "new": "~> **NOTE on EBS block devices:** If you use `ebs_block_device` on an `aws_instance`, Terraform will assume management over the full set of non-root EBS block devices for the instance, and treats additional block devices as drift. For this reason, `ebs_block_device` cannot be mixed with external `aws_ebs_volume` + `aws_volume_attachment` resources for a given instance."
    },
    {
      "old": "time, and instead just remove the attachment from Terraform state. This is",
      "new": "time, and instead just remove the attachment from Terraform state. This is"
    }
  ],
  "website/docs/r/vpc_endpoint.html.markdown": [
    {
      "old": "~> **NOTE on VPC Endpoints and VPC Endpoint Associations:** Terraform provides both standalone VPC Endpoint Associations for",
      "new": "~> **NOTE on VPC Endpoints and VPC Endpoint Associations:** Terraform provides both standalone VPC Endpoint Associations for"
    },
    {
      "old": "~> **NOTE The `dns_entry` output is a list of maps:** Terraform interpolation support for lists of maps requires the `lookup` and `[]` until full support of lists of maps is available",
      "new": "~> **NOTE The `dns_entry` output is a list of maps:** Terraform interpolation support for lists of maps requires the `lookup` and `[]` until full support of lists of maps is available"
    },
    {
      "old": "* `policy` - (Optional) A policy to attach to the endpoint that controls access to the service. This is a JSON formatted string. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.",
      "new": "* `policy` - (Optional) A policy to attach to the endpoint that controls access to the service. This is a JSON formatted string. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide."
    }
  ],
  "website/docs/r/vpc_endpoint_policy.html.markdown": [
    {
      "old": "* `policy` - (Optional) A policy to attach to the endpoint that controls access to the service. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide.",
      "new": "* `policy` - (Optional) A policy to attach to the endpoint that controls access to the service. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details. For more information about building AWS IAM policy documents with Terraform, see the AWS IAM Policy Document Guide."
    }
  ],
  "website/docs/r/vpc_endpoint_security_group_association.html.markdown": [
    {
      "old": "~> **NOTE on VPC Endpoints and VPC Endpoint Security Group Associations:** Terraform provides",
      "new": "~> **NOTE on VPC Endpoints and VPC Endpoint Security Group Associations:** Terraform provides"
    }
  ],
  "website/docs/r/vpc_peering_connection_accepter.html.markdown": [
    {
      "old": "However, Terraform only allows the VPC Peering Connection to be deleted from the requester's side",
      "new": "However, Terraform only allows the VPC Peering Connection to be deleted from the requester's side"
    },
    {
      "old": "Certain resource arguments, like `auto_accept`, do not have an EC2 API method for reading the information after peering connection creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,",
      "new": "Certain resource arguments, like `auto_accept`, do not have an EC2 API method for reading the information after peering connection creation. If the argument is set in the Terraform configuration on an imported resource, Terraform will always show a difference. To workaround this behavior, either omit the argument from the Terraform configuration or use `ignore_changes` to hide the difference, e.g.,"
    }
  ]
}
